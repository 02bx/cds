<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Enterprise-Grade Continuous Delivery &amp; DevOps Automation Open Source Platform on CDS - Continuous Delivery Service</title>
    <link>https://ovh.github.io/cds/</link>
    <description>Recent content in Enterprise-Grade Continuous Delivery &amp; DevOps Automation Open Source Platform on CDS - Continuous Delivery Service</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ovh.github.io/cds/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CDS - The origins</title>
      <link>https://ovh.github.io/cds/about/why_cds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/about/why_cds/</guid>
      <description>To build CDS, the development team took their inspiration from the Continuous Delivery principles:
 The process for releasing/deploying software MUST be repeatable and reliable. Automate everything! If somethings difficult or painful, do it more often Keep everything in source control Dev Done means “released” Build quality in! Everybody has responsibility for the release process Improve continuously Build binaries only once Use precisely the same mechanism to deploy to every environment Smoke test your deployment If anything fails, stop the line  ref.</description>
    </item>
    
    <item>
      <title>Check npm vulnerabilities</title>
      <link>https://ovh.github.io/cds/docs/tutorials/step_by_step_npm_vulnerabilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/step_by_step_npm_vulnerabilities/</guid>
      <description>In this tutorial, you will create a CDS Workflow with the Web UI that check JavaScript vulnerabilities
 Create a workflow using one pipeline You will discover the npm-audit-parser plugin action, which parse npm audit report   1 - Create your CDS project Let&amp;rsquo;s create a project. On the top navbar, click on &amp;lsquo;Create a project&amp;rsquo;.
 Enter a Project Name The project key will be useful when you want to use cdsctl.</description>
    </item>
    
    <item>
      <title>Docker Compose</title>
      <link>https://ovh.github.io/cds/hosting/ready-to-run/docker-compose/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/ready-to-run/docker-compose/</guid>
      <description>Run with Docker-Compose The docker-compose.yml contains:
 cds-db service with a PostgreSQL cds-cache service with a Redis cds-migrate service to prepare DB tables cds-api service cds-ui service cds-hatchery-swarm service cds-hatchery-local service  Docker compose is very convenient to launch CDS for testing it. But this is not recommended for a Production Installation.
How to run $ mkdir /tmp/cdstest &amp;amp;&amp;amp; cd /tmp/cdstest $ curl https://raw.githubusercontent.com/ovh/cds/master/docker-compose.yml -o docker-compose.yml $ export HOSTNAME=$(hostname) # Get the latest version $ docker pull ovhcom/cds-ui:latest $ docker pull ovhcom/cds-engine:latest # Create PG database $ docker-compose up --no-recreate -d cds-db # check if DB is up # check if last log is &amp;quot;LOG: database system is ready to accept connections&amp;quot; $ docker-compose logs $ docker-compose up --no-recreate cds-migrate # You should have this log: &amp;quot;cds_cds-migrate_1 exited with code 0&amp;quot; # run API, UI and hooks µservice $ docker-compose up -d cds-api cds-ui cds-hooks   Create the first user with WebUI  Open a browser on http://localhost:2015/account/signup, then register a new user admin, with an email admin@localhost.</description>
    </item>
    
    <item>
      <title>Hatchery Local</title>
      <link>https://ovh.github.io/cds/docs/components/hatchery/local/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/hatchery/local/</guid>
      <description>Use case If you are a CDS user, you can use shared.infra Worker to run your job.
But, if you want to use your host for various good reasons as OS, Network, etc&amp;hellip; you can launch CDS Worker on your host.
Two prerequisites:
 your host must reach your CDS API on HTTP port or GRPC Port defined on your CDS Configuration you need the CDS Worker binary on your host.</description>
    </item>
    
    <item>
      <title>Init a CDS Workflow from a repository</title>
      <link>https://ovh.github.io/cds/docs/tutorials/init_workflow_with_cdsctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/init_workflow_with_cdsctl/</guid>
      <description>In this tutorial, you will create a CDS Workflow from an existing git repository.
 This will creates you some files inside your local git repository. Then you&amp;rsquo;ll can push them to get a CDS workflow lives with his configuration &amp;lsquo;as code&amp;rsquo;.   Prerequisites  Have an account on your CDS instance Have a Repository manager as GitHub, Bitbucket Server or GitLab setted up on your CDS Instance. Have cdsctl command line, you can download it from here  To get started with CDS  In a terminal, go into your git repository and login with cdsctl  $ cd &amp;lt;path-to-repo&amp;gt; $ cdsctl login -H &amp;lt;cds-api-url&amp;gt; # you will be ask for your username and password   Create your first workflow  $ cdsctl workflow init  This will ask you to choose:</description>
    </item>
    
    <item>
      <title>Job</title>
      <link>https://ovh.github.io/cds/docs/concepts/job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/job/</guid>
      <description>A job is composed of steps, which will be run sequentially. A job is executed in a dedicated workspace (i.e. filesystem). A new workspace is assigned for each new run of a job.
A standard build job looks like this:
You can use « built-in » actions, such as checkoutApplication, script, jUnit, artifact upload/download.
 The checkoutApplication action clones your Git repository The Script action executes your build command as “make build” The artifactUpload action uploads previously-built binaries The jUnit action parses a given Junit-formatted XML file to extract its test results  Notice: you cannot share a workspace between jobs or between two runs of the same job.</description>
    </item>
    
    <item>
      <title>Payload</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/payload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/payload/</guid>
      <description>A CDS Workflow can be launched:
 manually, user can enter a Payload by webhooks / repository webhooks, payload contains the value sent by initiator of the hook scheduler, the payload contains the value of the default payload. You can edit the default payload on the root pipeline (on roadmap) listener, as a Kafka listener. The payload will contain the content of the Kafka message  A payload is a JSON value.</description>
    </item>
    
    <item>
      <title>Webhook</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/hooks/webhook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/hooks/webhook/</guid>
      <description>On a Root Pipeline, you can add a &amp;ldquo;Webhook&amp;rdquo;. Click on the created icon to get the WebHook URL.
In order to trigger this one you just have to make a HTTP call on the given URL with the selected method. If the selected method is POST you can also send a payload from your workflow inside the request body or if you use GET method you can write your payload using query parameters.</description>
    </item>
    
    <item>
      <title>Workflow configuration file</title>
      <link>https://ovh.github.io/cds/docs/concepts/files/workflow-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/files/workflow-syntax/</guid>
      <description>A CDS workflow file only contains the description of pipelines orchestration, hooks, run conditions, etc. Consider the folowwing workflow wich implements a basic two-stages workflow
name: my-workflow workflow: build: pipeline: build application: my-application deploy: depends_on: - build when: - success pipeline: deploy application: my-application environment: my-production hooks: build: - type: RepositoryWebHook  Here there are two major things to understand: workflow and hooks. A workflow is a kind of graph starting from a root pipeline, and other pipelines with dependencies.</description>
    </item>
    
    <item>
      <title>Import a CDS Workflow from a repository</title>
      <link>https://ovh.github.io/cds/docs/tutorials/import_workflow_with_webui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/import_workflow_with_webui/</guid>
      <description>In this tutorial, you will create a CDS Workflow from an existing git repository.
 The repository have to add .cds/ directory. With the web UI, on will create a CDS Workflow &amp;lsquo;as code&amp;rsquo;.   Prerequisites  Have an account on your CDS instance Have a Repository manager as GitHub, Bitbucket Server or GitLab setted up on your CDS Instance.
Prepare your git repository  The easiest way to initialize cds files in your repository is to follow first tutorial</description>
    </item>
    
    <item>
      <title>Permissions - ACLs</title>
      <link>https://ovh.github.io/cds/docs/concepts/permissions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/permissions/</guid>
      <description>There are 3 types of permissions:
 Read (as code value: 4) Read / Execute (as code value: 5) Read / Write / Execute (as code value: 7)  These permissions can be attached to different objects:
 On project On workflow On workflow node      Project Workflow Workflow node     Create a workflow RWX - -   Edit a workflow (change run conditions, add nodes, edit payload, notifications, &amp;hellip;) RO RWX -   Create/edit an environment/pipeline/application RWX - -   Manage permissions on project RWX - -   Manage permissions on a workflow RO RWX    Run a workflow RO RX / - OR RX (if there is some groups on node)    Permissions cannot be attached directly to users, they need to be attached to groups of users.</description>
    </item>
    
    <item>
      <title>Pipeline Context</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/pipeline-context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/pipeline-context/</guid>
      <description>After adding the pipeline, you can &amp;ldquo;Edit the pipeline Context&amp;rdquo; (sidebar).
Then, you can:
 add or remove application. Jobs can use cds.app.* configuration and or remove an environment. Jobs can use cds.env.* configuration enable / disable Pipeline Mutex  </description>
    </item>
    
    <item>
      <title>Pipeline configuration file</title>
      <link>https://ovh.github.io/cds/docs/concepts/files/pipeline-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/files/pipeline-syntax/</guid>
      <description>A CDS workflow file only contains the description of pipelines orchestration, hooks, run conditions, etc. Consider the following Pipeline which implements a basic two-stages continuous delivery pipeline.
version: v1.0 name: build stages: - Compile - Package jobs: - job: Build UI stage: Compile steps: - gitClone: branch: &#39;{{.git.branch}}&#39; commit: &#39;{{.git.hash}}&#39; directory: cds url: &#39;{{.git.url}}&#39; - script: - cd cds/ui - npm set registry https://registry.npmjs.org - npm install - ng build -prod --aot - tar cfz ui.</description>
    </item>
    
    <item>
      <title>Requirements</title>
      <link>https://ovh.github.io/cds/hosting/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/requirements/</guid>
      <description>CDS API is the core component of CDS. To start CDS API, the only mandatory dependencies are a PostgreSQL database, a Redis server and a path to the directory containing other CDS binaries.
There is are two ways to set up CDS:
 as toml configuration over environment variables.  CDS API Third-parties At the minimum, CDS needs a PostgreSQL database &amp;gt;= 9.5 and Redis &amp;gt;= 3.2. But for serious usage your may need:</description>
    </item>
    
    <item>
      <title>Run with Helm on Kubernetes</title>
      <link>https://ovh.github.io/cds/hosting/ready-to-run/helm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/ready-to-run/helm/</guid>
      <description>Helm is the package manager for Kubernetes.
You can find all informations to know how to run a CDS with Helm just here.</description>
    </item>
    
    <item>
      <title>Scheduler</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/hooks/scheduler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/hooks/scheduler/</guid>
      <description>On a Root Pipeline, you can add a &amp;ldquo;Hook Scheduler&amp;rdquo;. This kind of hook is useful when you want to launch a workflow periodically (for example each day at 1AM). You can use the Crontab Expression Format to configure your scheduler&amp;rsquo;s period. You can also configure a specific payload for your scheduler.</description>
    </item>
    
    <item>
      <title>Service Requirement NGINX</title>
      <link>https://ovh.github.io/cds/docs/tutorials/service-requirement-nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/service-requirement-nginx/</guid>
      <description>Add the service requirement  Name: mypg. This will be the service hostname Type: service Docker Image: nginx:1.11.1. This is the name of Docker image to link to current job  Add a step of type script Docker image nginx:1.11.1 start a nginx at startup. So, it&amp;rsquo;s now available on http://mynginx
curl -v -X GET http://mynginx  Execute Pipeline
See output:</description>
    </item>
    
    <item>
      <title>With your own Docker image</title>
      <link>https://ovh.github.io/cds/docs/tutorials/worker_model-docker/docker-customized/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/worker_model-docker/docker-customized/</guid>
      <description>A worker model of type docker can be spawned by a Hatchery Docker Swarm
Setup Docker Worker Model with your own image In this example, we will build a Docker model able to build an AngularJS application with webfonts. To create webfonts, a grunt task (optionally) requires fontforge and ttfautohint.
The following tools must be included in the model:
 Node.js and npm bower grunt-cli gulp-cli fontforge ttfautohint  We will use the official nodejs image from Docker.</description>
    </item>
    
    <item>
      <title>Worker Model configuration file</title>
      <link>https://ovh.github.io/cds/docs/concepts/files/worker_model-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/files/worker_model-syntax/</guid>
      <description>Example:
name: go-official-1.11.4-stretch group: shared.infra communication: http image: golang:1.11.4-stretch description: official from https://hub.docker.com/_/golang/ type: docker pattern_name: basic_unix  Import a worker model
cdsctl worker model import ./go-official-1.11.4-stretch.yml  or with a remote file:
cdsctl worker model import https://raw.githubusercontent.com/ovh/cds/master/contrib/worker-models/go-official-1.11.4-stretch.yml   If you want to specify an image using a private registry or a private image. You need to fill credentials in field username and password to access to your image. And if your image is not on docker hub but from a private registry you need to fill the registry info (the registry api url, for example for docker hub it&amp;rsquo;s https://index.</description>
    </item>
    
    <item>
      <title>Write documentation</title>
      <link>https://ovh.github.io/cds/development/contribute/documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/contribute/documentation/</guid>
      <description>Documentation https://ovh.github.io/cds is generated with Hugo. Source are under https://github.com/ovh/cds/tree/master/docs/content
Write / Generate / Test documentation:
 Download release Hugo Version Extended v0.54.0 https://github.com/gohugoio/hugo/releases/tag/v0.54.0 - put hugo binary in your PATH Download CDS Binaries: cdsctl, engine, worker from https://github.com/ovh/cds/releases/latest Clone CDS repository: git clone https://github.com/ovh/cds.git inside ${CDS_SOURCES} Generate documentation with Hugo  cd ${CDS_SOURCES} make install # to recompile all CDS binaries GEN_PATH=${CDS_SOURCES}/docs/content/docs/components make doc cd ${CDS_SOURCES}/docs hugo server   go to http://localhost:1313/cds/  </description>
    </item>
    
    <item>
      <title>Action configuration file</title>
      <link>https://ovh.github.io/cds/docs/concepts/files/action-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/files/action-syntax/</guid>
      <description>Hello World Action
version: v1.0 name: CDS_HelloWorld description: Hello World Action steps: - name: Initialization script: - echo &amp;quot;Hello World&amp;quot;  With a real action CDS_SonarScanner: this action contains parameters with default values and some of them are advanced parameters. Two plugins are also used in the steps: plugin-download and plugin-archive
version: v1.0 name: CDS_SonarScanner description: Run Sonar analysis. You must have a file sonar-project.properties in your source directory. parameters: sonar-project.</description>
    </item>
    
    <item>
      <title>Application configuration file</title>
      <link>https://ovh.github.io/cds/docs/concepts/files/application-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/files/application-syntax/</guid>
      <description>An Application allows you to enable some features of CDS within a workflow.
 Variables Keys VCS Deployment  The application configuration format is as following:
version: v1.0 name: my-application variables: artifact.name: type: string value: my-application docker.image: value: my-org/my-application docker.registry: value: hub.docker.com keys: app-mySSHKey: type: ssh repo: my-org/my-application vcs_server: github vcs_connection_type: ssh vcs_ssh_key: app-mySSHKey deployments: my-kubernetes-cluster: timeout: value: 180 namespace: my-namespace helm_chart: value: deploy/helm/ helm_values: type: deploy/helm/values.yaml  Variables Define application scoped variables as a dictionnary.</description>
    </item>
    
    <item>
      <title>Build &amp; Deploy a standard application</title>
      <link>https://ovh.github.io/cds/docs/tutorials/step_by_step_build_deploy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/step_by_step_build_deploy/</guid>
      <description>In this tutorial, you will create a CDS Workflow with the Web UI.
 Create a workflow using two pipelines: one for building, another for deploying Discover application and environments concepts. Discover Run Conditions.   This tutorial seems very long, don&amp;rsquo;t worry, it&amp;rsquo;s very detailed and it will take you about 10-15 minutes to try it.
You will play with many CDS Concepts, discover the reuse of pipelines, how to play with CDS Variables.</description>
    </item>
    
    <item>
      <title>Develop a hatchery</title>
      <link>https://ovh.github.io/cds/development/contribute/hatchery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/contribute/hatchery/</guid>
      <description>Example with a creation of a vSphere hatchery  First of all you need to create a new package like the other into the hatchery package. Let&amp;rsquo;s call this package vSphere for our example.
 You have to implement the Service interface (see here) in order to configure launch this new hatchery mode via CDS engine CLI.
 Your have to create a Configuration structure composed of the hatchery.CommonConfiguration and the variables you need to access to vSphere API.</description>
    </item>
    
    <item>
      <title>Development Environment</title>
      <link>https://ovh.github.io/cds/development/contribute/development/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/contribute/development/</guid>
      <description>Before contributing to CDS, you&amp;rsquo;ll need to install your development environment.
 PostgreSQL Redis Node.js Golang CDS  if you are familiar with these different tools, you probably will not need to read this page :-)
PostgreSQL Download PostgreSQL from https://www.postgresql.org/download/, version &amp;gt;= 9.5.
You can easily use only PostgreSQL binaries, downloaded from https://www.enterprisedb.com/download-postgresql-binaries.
Initialize DB by running:
$ mkdir -p ~/data/postgres/data $ initdb -D ~/data/postgres/data  Create user cds and database cds</description>
    </item>
    
    <item>
      <title>Download</title>
      <link>https://ovh.github.io/cds/hosting/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/download/</guid>
      <description>You&amp;rsquo;ll find the latest release of CDS on GitHub Releases
CDS Worker CDS Worker Documentation
   OS 386 amd64 arm arm64     darwin       freebsd       linux       windows        CDSCTL cdsctl Documentation
   OS 386 amd64 arm arm64     darwin       freebsd       linux       windows        CDS Engine CDS Engine Documentation</description>
    </item>
    
    <item>
      <title>Git Repository Webhook</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/hooks/git-repo-webhook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/hooks/git-repo-webhook/</guid>
      <description>You want to run a workflow after a git push on a repository? This kind of hook is for you.
You have to:
 link your project to a Repository Manager, on Advanced Section link an application to a git repository add a Repository Webhook on the root pipeline, this pipeline have the application linked in the context  GitHub / Bitbucket / GitLab are supported by CDS.
 When you add a repository webhook, it will also automatically delete your runs which are linked to a deleted branch (24h after branch deletion).</description>
    </item>
    
    <item>
      <title>Pipeline</title>
      <link>https://ovh.github.io/cds/docs/concepts/pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/pipeline/</guid>
      <description>A pipeline describes how things need to be executed in order to obtain the expected result. In CDS, a pipeline belongs to a single project and can be used with the applications of that project.
A pipeline is structured in sequential stages containing one or multiple concurrent jobs.
CDS pipelines can be parametrized. This allows you to reuse the same pipeline when you have similar workloads. For example, you could use the same pipeline to deploy in your pre-production environment first and then to your production environment.</description>
    </item>
    
    <item>
      <title>Run with binaries</title>
      <link>https://ovh.github.io/cds/hosting/ready-to-run/from-binaries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/ready-to-run/from-binaries/</guid>
      <description>This article contains the steps to start CDS locally, with API, UI and a local Hatchery.
 Download CDS from GitHub Prepare Database Launch CDS API, CDS UI and a Local Hatchery  Prerequisite  a Redis a PostgreSQL 9.5 min  Get latest release from GitHub mkdir $HOME/cds cd cds LAST_RELEASE=$(curl -s https://api.github.com/repos/ovh/cds/releases | grep tag_name | head -n 1 | cut -d &#39;&amp;quot;&#39; -f 4) OS=linux # could be linux, darwin, windows ARCH=amd64 # could be 386, arm, amd64, arm64 # GET Binaries from GitHub wget https://github.</description>
    </item>
    
    <item>
      <title>Service Requirement PostgreSQL</title>
      <link>https://ovh.github.io/cds/docs/tutorials/service-requirement-pg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/service-requirement-pg/</guid>
      <description>Add the service requirement Requirement Service
 Type: service Hostname: mypg. This will be the service hostname Docker Image: postgres:9.5.3. This is the name of Docker image to link to current job Options:  POSTGRES_USER=myuser POSTGRES_PASSWORD=mypassword  And a requirement model which allow you to execute apt-get install -y postgresql-client, see HowTo
Add a step of type script Docker image postgres:9.5.3 start a PostgreSQL at startup. So, it&amp;rsquo;s now available on mypg</description>
    </item>
    
    <item>
      <title>Worker Model Variables</title>
      <link>https://ovh.github.io/cds/docs/concepts/worker-model/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/worker-model/variables/</guid>
      <description>When you want to add a new worker model or a new worker model pattern you have to use some variables that CDS give you with interpolation. To use them for example for the --api flag, CDS provides a variable named API that you can use like this --api={{.API}}.
Here is the list of available variables:
 API string &amp;ndash;&amp;gt; URI of the CDS API set in the hatchery configuration Token string &amp;ndash;&amp;gt; token set in the hatchery configuration Name string &amp;ndash;&amp;gt; Name of the worker BaseDir string &amp;ndash;&amp;gt; basedir configuration set in the hatchery configuration HTTPInsecure bool &amp;ndash;&amp;gt; http insecure configuration set in the hatchery configuration Model int64 &amp;ndash;&amp;gt; ID of the model that the hatchery want to spawn Hatchery int64 &amp;ndash;&amp;gt; ID of the hatchery HatcheryName string PipelineBuildJobID int64 WorkflowJobID int64 &amp;ndash;&amp;gt; Useful to know which workflow job the hatchery will launch spawning this worker TTL int FromWorkerImage bool</description>
    </item>
    
    <item>
      <title>Worker Model patterns</title>
      <link>https://ovh.github.io/cds/docs/concepts/worker-model/patterns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/worker-model/patterns/</guid>
      <description>On CDS you can use worker model on any platform, distribution and arch you want. To permit that you need to indicate what will be executed on the worker vm or image before the execution of the worker binary itself. For example before launching the worker binary you need to download that binary with curl or wget ore anything else, depends on which OS you are.
To not copy/paste each time the same script for each worker model on the same OS and also to give the ability for a no CDS administrator to create their own worker model you can create worker model patterns.</description>
    </item>
    
    <item>
      <title>Build, tag and release an application</title>
      <link>https://ovh.github.io/cds/docs/tutorials/step_by_step_build_tag_release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/step_by_step_build_tag_release/</guid>
      <description>In this tutorial, you will create a CDS Workflow with the Web UI.
 Create a workflow using two pipelines: one for building, a second for tagging You will discover the GitTag action, which create tag compatible which Semantic Verstionning 2.0.0   1 - Create your CDS project Let&amp;rsquo;s create a project. On the top navbar, click on &amp;lsquo;Create a project&amp;rsquo;.
 Enter a Project Name The project key will be useful when you want to use cdsctl.</description>
    </item>
    
    <item>
      <title>Environment configuration file</title>
      <link>https://ovh.github.io/cds/docs/concepts/files/environment-syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/files/environment-syntax/</guid>
      <description>Definition An environnement is a way to declare and manipulate sets of environment variables and attach them to pipelines within a workflow. It is also a way to organize your workflow and keep it clear and still readable.
Format name: MyEnvironment values: myBooleanVariable: type: boolean value: true myNumberVariable: type: number value: 1 mySecretVariable: type: password value: f1a2b3dd756e4db381d7a88631c67355 myStringVariable: value: myStringValue myTextVariable: type: text value: | This Is a multiline text value with a project variable inside {{.</description>
    </item>
    
    <item>
      <title>Git Repository Poller</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/hooks/git-repo-poller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/hooks/git-repo-poller/</guid>
      <description>You want to run a workflow after a git push on a repository BUT your CDS instance isn&amp;rsquo;t accessible from the internet? This kind of hook is for you. (If your CDS instance is accessible from the internet please check the Git Repository Webhook).
This kind of hook will poll periodically the GitHub API to know the push and pull-request events on your repository.
You have to:
 link your project to a Repository Manager, on Advanced Section.</description>
    </item>
    
    <item>
      <title>Network Access</title>
      <link>https://ovh.github.io/cds/docs/concepts/requirement/requirement_network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/requirement/requirement_network/</guid>
      <description>The Network Access prerequisite allow you to require a worker to have access to a specific server
Example:
golang.org:80  </description>
    </item>
    
    <item>
      <title>Run conditions on pipeline</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/run-conditions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/run-conditions/</guid>
      <description>In CDS if you want to launch a pipeline in your workflow only in specific cases you can add conditions on your pipeline in your workflow. For example if you want to run this pipeline automatically only if the value of git.branch is master.
If you want to edit your pipeline condition on the user interface you have to select a node under edition mode of your workflow and click on Edit run conditions like this:</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://ovh.github.io/cds/hosting/configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/configuration/</guid>
      <description>The toml configuration can be provided by a file, via consul k/v store or via vault.
Start CDS with local configuration file You can also generate a configuration file template with the following command.
$ $PATH_TO_CDS/engine config new &amp;gt; my_conf_file.toml  Edit this file.
Check your configuration file with
$ $PATH_TO_CDS/engine config check my_conf_file.toml Reading configuration file my_new_file.toml Configuration file OK  Create your database relations
$ $PATH_TO_CDS/engine database upgrade --db-host &amp;lt;host&amp;gt; --db-port &amp;lt;port&amp;gt; --db-user &amp;lt;user&amp;gt; --db-password &amp;lt;password&amp;gt; --db-name &amp;lt;database&amp;gt; --migrate-dir $PATH_TO_CDS/engine/sql --limit 0  Download workers binaries</description>
    </item>
    
    <item>
      <title>Develop a plugin</title>
      <link>https://ovh.github.io/cds/development/contribute/plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/contribute/plugin/</guid>
      <description>A CDS worker executes job, and job is composed of steps.
A step is an action
A Plugin is simply an executable which expose a GRPC server corresponding to the right proto file. You can use the programming language of your choice. The CDS worker will simply query the GRPC server of the plugin.
In order to communicate with a CDS worker, a plugin MUST fill the following requirements:
 Expose a GRPC server Implement methods and messages coming from this proto file Display this message at the launch of your plugin XXX is ready to accept new connection where XXX is your ip address with port or your Unix socket (example: 127.</description>
    </item>
    
    <item>
      <title>Join</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/join/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/join/</guid>
      <description>A join lets workflow to wait the end of two or more parent pipelines.
You can trigger one or many pipelines after a join.</description>
    </item>
    
    <item>
      <title>Kafka hook</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/hooks/kafka-hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/hooks/kafka-hook/</guid>
      <description>You want to run a workflow from a Kafka message? This kind of hook is for you.
This kind of hook will connect to a Kafka topic and consume message. For each message, it will trigger your workflow.
The Kafka message have to be a JSON message, it in will be used as a payload for your workflow See payload documentation.
Link your project to a Kafka platform On your CDS Project, select the platforms section then add a Kafka platform.</description>
    </item>
    
    <item>
      <title>Service Link</title>
      <link>https://ovh.github.io/cds/docs/concepts/requirement/requirement_service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/requirement/requirement_service/</guid>
      <description>The Service Link prerequisite allow you to use any Docker image as a dependency of a job.
This is pretty useful if you want to make some tests with a real database, or put your builded application as a job prerequisite for doing some tests.
How to use service requirement When editing a pipeline job, choose your model as usual, then add a new service requirement, the name you set will be the service&amp;rsquo;s hostname, set the Docker image for the service as the value.</description>
    </item>
    
    <item>
      <title>Database Management</title>
      <link>https://ovh.github.io/cds/hosting/database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/database/</guid>
      <description>CDS provides all needed tools scripts to perform Schema creation and auto-migration. Those tools are embedded inside the engine binary.
The migration files are available to download on GitHub Releases and the archive is named sql.tar.gz. You have to download it and untar (tar xvzf sql.tar.gz).
Creation On a brand new database run the following command:
$ $PATH_TO_CDS/engine database upgrade --db-host &amp;lt;host&amp;gt; --db-port &amp;lt;port&amp;gt; --db-user &amp;lt;user&amp;gt; --db-password &amp;lt;password&amp;gt; --db-name &amp;lt;database&amp;gt; --migrate-dir $PATH_TO_CDS/engine/sql --limit 0  Upgrade On an existing database, run the following command on each CDS update:</description>
    </item>
    
    <item>
      <title>Error management</title>
      <link>https://ovh.github.io/cds/development/contribute/error_management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/contribute/error_management/</guid>
      <description>This page explains how to deal with errors in CDS code. Error returned from CDS contains a message, an HTTP status code, a stack trace and a unique id.
Errors can be forwarded to a Graylog instance then retrieved directly from the ctl (see api.graylog and log.graylog sections in cds configuration file to setup).
cdsctl admin errors get &amp;lt;error_uuid&amp;gt;  Usage in code All errors from lib should be wrapped like sdk.</description>
    </item>
    
    <item>
      <title>Memory</title>
      <link>https://ovh.github.io/cds/docs/concepts/requirement/requirement_memory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/requirement/requirement_memory/</guid>
      <description>The Memory requirement allows you to require a worker to have a specific number of mb of RAM.
For example if you need 2Gb of RAM for your worker you can put 2048 in your memory requirement.</description>
    </item>
    
    <item>
      <title>Mutex</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/mutex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/mutex/</guid>
      <description>By default, the same pipeline can run at the same time on multiple runs.
In a CDS Workflow, you can limit running a pipeline one at a time.
Click on the pipeline → Edit the pipeline context → enable &amp;ldquo;Limit one run at run time&amp;rdquo;
Example of use case: run an integration test once on a particular environment.</description>
    </item>
    
    <item>
      <title>RabbitMQ hook</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/hooks/rabbitmq-hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/hooks/rabbitmq-hook/</guid>
      <description>You want to run a workflow from a RabbitMQ message? This kind of hook is for you.
This kind of hook will connect to a RabbitMQ queue and consume message. For each message, it will trigger your workflow.
The RabbitMQ message have to be a JSON message, it in will be used as a payload for your workflow See payload documentation.
Link your project to a RabbitMQ platform On your CDS Project, select the platforms section then add a RabbitMQ platform.</description>
    </item>
    
    <item>
      <title>Update your hatchery</title>
      <link>https://ovh.github.io/cds/docs/components/hatchery/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/hatchery/update/</guid>
      <description>If you run manually a Hatchery, you probably want to update it when CDS Engine is updated with a new release.
Update your hatchery from CDS API:
./engine update --api https://your.cds.instance  Update your hatchery from latest Release from GitHub:
./engine update --from-github  </description>
    </item>
    
    <item>
      <title>Variables</title>
      <link>https://ovh.github.io/cds/docs/concepts/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/variables/</guid>
      <description>In CDS, it is possible to define variables at different levels:
 Project Environment Application  Variable types Existing variable types:
 String Text Boolean Number Password Key  Placeholder format All variables in CDS can be invoked using the simple {{.VAR}} format. To simplify the use between all the variable sources, we have defined the following prefixes:
 Action variable: {{.VAR}} Builtin CDS: {{.cds.VAR}} Git: {{.git.VAR}} Pipeline: {{.cds.pip.VAR}} Application: {{.</description>
    </item>
    
    <item>
      <title>Worker Model OpenStack</title>
      <link>https://ovh.github.io/cds/docs/tutorials/worker_model-openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/worker_model-openstack/</guid>
      <description>CDS build using OVH.com OpenStack infrastructure
Create OpenStack user In OVH manager, in cloud section, click on the menu on the Servers&amp;gt;OpenStack item.
You will be able to create a worker model OpenStack user, enter description (name and password will be generated).
Add OpenStack worker model We need to define an OpenStack worker model to have OpenStack hatchery booting workers.
We will create a model called testopenstack:
 With low hardware capacity (vps-ssd-1) On Debian 8 With Docker ready to use Git installed  You need to configure:</description>
    </item>
    
    <item>
      <title>OS &amp; Architecture</title>
      <link>https://ovh.github.io/cds/docs/concepts/requirement/requirement_os_arch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/requirement/requirement_os_arch/</guid>
      <description>The OS-Architecture prerequisite allow you to require a worker with a specific OS &amp;amp; Architecture.
Beware about default value: there is a default value for OS &amp;amp; Architecture, it&amp;rsquo;s specified in CDS API Configuration.
If user does not specify a prerequisite os-architecture, the default value is applied when the job is in CDS Queue.
Then, a hatchery will spawn a worker compiled with the specified os-architecture prerequisite.
Beware about launching job: if you put a prerequisite os-architecture with value linux/386, the job won&amp;rsquo;t be launched by a worker linux/amd64 even if technically speaking, the worker could launch this job without issue.</description>
    </item>
    
    <item>
      <title>Sidebar</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/sidebar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/sidebar/</guid>
      <description>On the left sidebar, there is only one select box for filter on CDS Tags.
So, what&amp;rsquo;s a tag? A tag is a CDS Variable, exported as a tag. There are default tags as git.branch, git.hash, tiggered_by and environment. For example if you want to know on which branch the build was launched you just have to filter on a specific CDS tag (in this case git.branch)
Inside a job, a user can add a Tag with the worker command</description>
    </item>
    
    <item>
      <title>Worker Model vSphere</title>
      <link>https://ovh.github.io/cds/docs/tutorials/worker_model-vsphere/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/tutorials/worker_model-vsphere/</guid>
      <description>CDS build using vSphere infrastructure
Add vSphere worker model We need to define a vSphere worker model to have vSphere hatchery booting workers.
We will create a worker model called debian8-docker:
 On Debian 8 With Docker ready to use Git installed  You need to configure:
 The image is the name of your virtual machine that you have created before on your host to clone (See Advanced) Pattern If you aren&amp;rsquo;t an administrator you have to choose a configuration pattern in order to fill pre command, worker command and post command with a pattern that an administrator have already fill for you.</description>
    </item>
    
    <item>
      <title>Monitoring</title>
      <link>https://ovh.github.io/cds/hosting/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/monitoring/</guid>
      <description>Status Handler on API https://your.cds.instance/mon/status returns the status of CDS Engine.
If status != OK, something is wrong on your CDS Instance.
Example:
{ &amp;quot;now&amp;quot;: &amp;quot;2018-01-09T20:24:20.481193492Z&amp;quot;, &amp;quot;lines&amp;quot;: [ { &amp;quot;status&amp;quot;: &amp;quot;OK&amp;quot;, &amp;quot;component&amp;quot;: &amp;quot;Version&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;0.25.1-snapshot+1455.cds&amp;quot; }, ... { &amp;quot;status&amp;quot;: &amp;quot;OK&amp;quot;, &amp;quot;component&amp;quot;: &amp;quot;Database&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;20 conns&amp;quot; }, { &amp;quot;status&amp;quot;: &amp;quot;OK&amp;quot;, &amp;quot;component&amp;quot;: &amp;quot;LastUpdate Connected&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;14&amp;quot; }, { &amp;quot;status&amp;quot;: &amp;quot;OK&amp;quot;, &amp;quot;component&amp;quot;: &amp;quot;Worker Model Errors&amp;quot;, &amp;quot;value&amp;quot;: &amp;quot;0&amp;quot; } ... }  If you don&amp;rsquo;t need a CDS µService repositories, you can disable monitoring on it by setting 0 on configuration.</description>
    </item>
    
    <item>
      <title>Run Number</title>
      <link>https://ovh.github.io/cds/docs/concepts/workflow/run-number/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/workflow/run-number/</guid>
      <description>workflow -&amp;gt; advanced section. You can edit the run number to set you old cds.version value.
{{cds.version}} is always usable, and equals to {{.cds.run.number}}</description>
    </item>
    
    <item>
      <title>Upgrade your CDS Instance</title>
      <link>https://ovh.github.io/cds/hosting/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/hosting/upgrade/</guid>
      <description> Upgrade Binary Update your CDS Engine binary from latest Release from GitHub:
./engine update --from-github  Database Migration # get the file sql.tar.gz from latest release from https://github.com/ovh/cds/releases # unzip sql.tar.gz inside a sql/ directory, then run this command: ./engine database upgrade --db-password=cds --db-sslmode=disable --db-name=cds --migrate-dir=sql --db-connect-timeout=20  Restart your CDS API ./engine start api ...  </description>
    </item>
    
    <item>
      <title>Workflow Template</title>
      <link>https://ovh.github.io/cds/docs/concepts/template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/concepts/template/</guid>
      <description>What is a workflow template? A workflow template is useful to easily create a new workflow for a project. Also if you need to manage multiple workflows, you can use a template to create one unique and generic workflow then apply it on each workflow.
Templates are versioned, so you can easily improve your template then re-apply it on a workflow.
A template contains a workflow, pipelines, applications, environments in yaml format.</description>
    </item>
    
    <item>
      <title>AWS S3</title>
      <link>https://ovh.github.io/cds/docs/integrations/aws/aws_s3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/aws/aws_s3/</guid>
      <description>The AWS S3 Integration is a Self-Service integration that can be configured on a CDS Project.
With this integration, you can use a dedicated AWS S3 Bucket Storage on :
 action Artifact Upload action Artifact Download worker cache command  Notice: by default, the storage is configured in CDS Configuration. This integration allows user to use their own AWS S3 Storage and not use the shared storage.
Configure with WebUI You can add a AWS S3 on your CDS Project.</description>
    </item>
    
    <item>
      <title>Artifact Download</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-artifact-download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-artifact-download/</guid>
      <description>Artifact Download is a builtin action, you can&amp;rsquo;t modify it.
This action can be used to retrieve an artifact previously uploaded by an Artifact Upload.
Parameters  enabled: (optional) Enable artifact download. path: Path where artifacts will be downloaded. pattern: (optional) Empty: download all files. Otherwise, enter regexp pattern to choose file: (fileA|fileB). tag: Artifact are uploaded with a tag, generally {{.cds.version}}.  Requirements No Requirement
YAML example Example of a pipeline using Artifact Download action:</description>
    </item>
    
    <item>
      <title>Artifact Upload</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-artifact-upload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-artifact-upload/</guid>
      <description>Artifact Upload is a builtin action, you can&amp;rsquo;t modify it.
This action can be used to upload artifacts in CDS. This is the recommended way to share files between pipelines or stages.
Parameters  destination: (optional) Destination of this artifact. Use the name of integration attached on your project. enabled: (optional) Enable artifact upload, &amp;ldquo;true&amp;rdquo; or &amp;ldquo;false&amp;rdquo;. path: Path of file to upload, example: ./src/yourFile.json. tag: Artifact will be uploaded with a tag, generally {{.</description>
    </item>
    
    <item>
      <title>Bitbucket Server</title>
      <link>https://ovh.github.io/cds/docs/integrations/bitbucket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/bitbucket/</guid>
      <description>The Bitbucket Integration have to be configured on your CDS by a CDS Administrator.
This integration allows you to link a Git Repository hosted by your Bitbucket Server to a CDS Application.
This integration enables some features:
 Git Repository Webhook Easy to use action CheckoutApplication and GitClone for advanced usage Send build notifications on your Pull-Requests and Commits on Bitbucket Send comments on your Pull-Requests when a workflow is failed  How to configure Bitbucket Server integration You need to perform the following steps:</description>
    </item>
    
    <item>
      <title>Blog Posts, Podcasts and Talks</title>
      <link>https://ovh.github.io/cds/about/articles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/about/articles/</guid>
      <description>Blog Posts February 14, 2019 - How does OVH manage the CI/CD at scale?
March 1, 2019 - Continuous Delivery and Deployment Workflows with CDS
Podcasts February 14, 2019 - DataBuzzWord podcast - French - Understanding CI/CD for Big Data and Machine Learning 
Talks March 22, 2019 - Talk at conference Breizhcamp to introduce CDS (French): CI/CD FIVE MILLION WORKERS</description>
    </item>
    
    <item>
      <title>CheckoutApplication</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-checkoutapplication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-checkoutapplication/</guid>
      <description>CheckoutApplication is a builtin action, you can&amp;rsquo;t modify it.
CDS Builtin Action. Checkout a repository into a new directory.
This action use the configuration from application vcs strategy to git clone the repository. The clone will be done with a depth of 50 and with submodules. If you want to modify theses options, you have to use gitClone action.
Parameters  directory: The name of a directory to clone into.</description>
    </item>
    
    <item>
      <title>Comparaison Matrix</title>
      <link>https://ovh.github.io/cds/about/matrix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/about/matrix/</guid>
      <description>Feature CDS Bamboo Buildbot Gitlab CI Jenkins     Pipeline        Workflow     *17    Visual configuration with Web UI      *1   Configuration on Git Repository        Configuration as code on UI      *2   Native Git branching      *3   Job&#39;s Services        Secure Remote Caching      *4   Enterprise Notification Bus &amp;amp; Built-in Hooks        Continuous Deployment &amp;amp; Environment Support      *5   Enterprise-grade permissions, Support of ACLs delegation      *6   Build Artifacts Cloud      *7   Tests &amp;amp; Vulnerabilities Reports     *8    Self-Service Project Creation - ability to create a tenant    *9     Execution Environment Customization      *10   Multi-Tenancy      *11   Command Line Interface (cdsctl): 100% features supported &amp;amp; User Friendly      *12   REST API &amp;amp; SDK        Self-Hosting        High Availability &amp;amp; Scalability &amp;amp; Upgrade without User Downtime     *13    Built-in Metrics      *14   Extensibility Plugins        OS/Arch Compatibility        Auto-Scale OnDemand multi-cloud     *15  *16    CDS User features Pipeline Ability to run multiple jobs simultaneously while keeping an isolation between them.</description>
    </item>
    
    <item>
      <title>Contact us</title>
      <link>https://ovh.github.io/cds/about/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/about/contact/</guid>
      <description>Benjamin COENEN - @BnJ25 François SAMIN - @francoissamin Steven GUIHEUX - @sguiheux Richard LE TERRIER - @richardlte Yvonnick ESNAULT - @yesnault  A remark / question / suggestion, feel free to join us on https://gitter.im/ovh-cds/Lobby
All CDS Contributors: https://github.com/ovh/cds/graphs/contributors</description>
    </item>
    
    <item>
      <title>Coverage</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-coverage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-coverage/</guid>
      <description>Coverage is a builtin action, you can&amp;rsquo;t modify it.
CDS Builtin Action. Parse given file to extract coverage results.
Coverage report will be linked to the application from the pipeline context. You will be able to see the coverage history in the application home page.
Parameters  format: Coverage report format. minimum: Minimum percentage of coverage required (-1 means no minimum). path: Path of the coverage report file.  Requirements No Requirement</description>
    </item>
    
    <item>
      <title>DeployApplication</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-deployapplication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-deployapplication/</guid>
      <description>DeployApplication is a builtin action, you can&amp;rsquo;t modify it.
Deploy an application, useful only if you have a Deployment Plaftorm associated to your current application.
Parameters No Parameter
Requirements No Requirement
YAML example Example of a pipeline using DeployApplication action:
version: v1.0 name: Pipeline1 stages: - Stage1 jobs: - job: Job1 stage: Stage1 steps: - deploy: &#39;{{.cds.application}}&#39;  Example  Add a deployment platform on your application.   Create a workflow, add a pipeline and an application linked to a platform.</description>
    </item>
    
    <item>
      <title>Docker Swarm</title>
      <link>https://ovh.github.io/cds/docs/integrations/swarm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/swarm/</guid>
      <description>The Docker Swarm integration have to be configured by CDS administrator.
This integration allows you to run the Swarm Hatchery to start CDS Workers.
As an end-users, this integration allows:
 to use Worker Models of type &amp;ldquo;Docker&amp;rdquo; to use Service Prerequisite on your CDS Jobs.  Start Swarm hatchery Generate a token for group:
$ cdsctl token generate shared.infra persistent expiration persistent created 2019-03-13 18:47:56.715104 +0100 CET group_name shared.</description>
    </item>
    
    <item>
      <title>Example of Code - Workers List</title>
      <link>https://ovh.github.io/cds/development/sdk/golang/examples/go-workers-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/sdk/golang/examples/go-workers-list/</guid>
      <description>Create a file main.go with this content:
package main import ( &amp;quot;flag&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;os&amp;quot; &amp;quot;github.com/ovh/cds/sdk/cdsclient&amp;quot; ) var host, token, username string func init() { flag.StringVar(&amp;amp;host, &amp;quot;api&amp;quot;, &amp;quot;http://localhost:8081&amp;quot;, &amp;quot;CDS API URL, ex: http://localhost:8081&amp;quot;) flag.StringVar(&amp;amp;token, &amp;quot;token&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;CDS Token&amp;quot;) flag.StringVar(&amp;amp;username, &amp;quot;username&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;CDS Username&amp;quot;) } func main() { flag.Parse() cfg := cdsclient.Config{ Host: host, Token: token, User: username, } client := cdsclient.New(cfg) workers, err := client.WorkerList() if err != nil { fmt.Fprintf(os.Stderr, &amp;quot;Error while getting workers:%s&amp;quot;, err) os.</description>
    </item>
    
    <item>
      <title>GitClone</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-gitclone/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-gitclone/</guid>
      <description>GitClone is a builtin action, you can&amp;rsquo;t modify it.
Clone a repository into a new directory.
Parameters  branch: (optional) Instead of pointing the newly created HEAD to the branch pointed to by the cloned repository’s HEAD, point to {{.git.branch}} branch instead. commit: (optional) Set the current branch head (HEAD) to the commit. depth: (optional) Clone with a depth of 50 by default. You can remove &amp;ndash;depth with the value &amp;lsquo;false&amp;rsquo;.</description>
    </item>
    
    <item>
      <title>GitHub</title>
      <link>https://ovh.github.io/cds/docs/integrations/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/github/</guid>
      <description>The Github Integration have to be configured on your CDS by a CDS Administrator.
This integration allows you to link a Git Repository hosted by Github to a CDS Application.
This integration enables some features:
 Git Repository Webhook Git Repository Poller Easy to use action CheckoutApplication and GitClone for advanced usage Send build notifications on your Pull-Requests and Commits on GitHub Send comments on your Pull-Requests when a workflow is failed  Resume on what you have to do before using the GitHub Integration  As a CDS Administrator:  Create a CDS application on GitHub Complete CDS Configuration File Start the vcs µService  As a user, which is admin on a CDS Project: link Project to GitHub As a user, with writing rights on a CDS project:  Link a CDS Application to a Git repository Add a repository webhook on a workflow (this will automatically create a webhook on GitHub)   How to configure GitHub integration Create a CDS application on GitHub As a CDS Administrator</description>
    </item>
    
    <item>
      <title>GitLab</title>
      <link>https://ovh.github.io/cds/docs/integrations/gitlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/gitlab/</guid>
      <description>The GitLab Integration have to be configured on your CDS by a CDS Administrator.
This integration allows you to link a Git Repository hosted by GitLab to a CDS Application.
This integration enables some features:
 Git Repository Webhook Easy to use action CheckoutApplication and GitClone for advanced usage Send build notifications on your Pull-Requests and Commits on GitLab  How to configure GitLab integration What you need to perform the following steps:</description>
    </item>
    
    <item>
      <title>GitTag</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-gittag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-gittag/</guid>
      <description>GitTag is a builtin action, you can&amp;rsquo;t modify it.
Tag the current branch and push it. Use vcs config from your application. Semver used if fully compatible with https://semver.org.
Parameters  path: (optional) The path to your git directory. prefix: (optional) Add a prefix for tag name. tagLevel: Set the level of the tag. Must be &amp;lsquo;major&amp;rsquo; or &amp;lsquo;minor&amp;rsquo; or &amp;lsquo;patch&amp;rsquo;. tagMessage: (optional) Set a message for the tag. tagMetadata: (optional) Metadata of the tag.</description>
    </item>
    
    <item>
      <title>JUnit</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-junit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-junit/</guid>
      <description> JUnit is a builtin action, you can&amp;rsquo;t modify it.
This action parses a given Junit formatted XML file to extract its test results.
Parameters  path: Path to junit xml file.  Requirements No Requirement
YAML example Example of a pipeline using JUnit action:
version: v1.0 name: Pipeline1 stages: - Stage1 jobs: - job: Job1 stage: Stage1 steps: - jUnitReport: &#39;{{.cds.workspace}}/report.xml&#39;  Example  Job Configuration.   Launch pipeline, check XUnit Result   And view details:  </description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>https://ovh.github.io/cds/docs/integrations/kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/kafka/</guid>
      <description>The Kafka Integration is a Self-Service integration that can be configured on a CDS Project.
This integration enables the Kafka Hook feature:
Configure with WebUI You can add a Kafka Integration on your CDS Project.
Configure with cdsctl Import a Kafka Integration on your CDS Project Create a file project-configuration.yml:
name: your-kafka-integration model: name: Kafka identifier: github.com/ovh/cds/integration/builtin/kafka hook: true config: broker url: value: n1.o1.your-broker:9093,n2.o1.n1.o1.your-broker:9093,n3.o1.n1.o1.your-broker:9093 type: string password: value: &#39;**********&#39; type: password username: value: kafka-username type: string  Import the integration on your CDS Project with:</description>
    </item>
    
    <item>
      <title>Kubernetes Compute</title>
      <link>https://ovh.github.io/cds/docs/integrations/kubernetes/kubernetes_compute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/kubernetes/kubernetes_compute/</guid>
      <description>The Kubernetes integration have to be configured by CDS administrator.
This integration allows you to run the Kubernetes Hatchery to start CDS Workers.
As an end-users, this integration allows:
 to use Worker Models of type &amp;ldquo;Docker&amp;rdquo; to use Service Prerequisite on your CDS Jobs.  Start Kubernetes hatchery Generate a token for group:
$ cdsctl token generate shared.infra persistent expiration persistent created 2019-03-13 18:47:56.715104 +0100 CET group_name shared.infra token xxxxxxxxxe7x4af2d408e5xxxxxxxff2adb333fab7d05c7752xxxxxxx  Edit the CDS Configuration or set the dedicated environment variables.</description>
    </item>
    
    <item>
      <title>Kubernetes Deployment</title>
      <link>https://ovh.github.io/cds/docs/integrations/kubernetes/kubernetes_deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/kubernetes/kubernetes_deployment/</guid>
      <description>The Kubernetes Deployment Integration is a Self-Service integration that can be configured on a CDS Project.
This integration enables the DeployApplication action
Create Integration Model Create a file kubernetes-model-configuration.yml:
name: Kubernetes default_config: api_url: type: string ca_certificate: type: text description: Certificate Authority bundle (PEM format) token: type: password deployment: true deployment_default_config: timeout: type: string value: 180 description: timeout in seconds namespace: type: string value: default description: Kubernetes namespace in which you want to deploy your components (OPTIONAL) deployment_files: type: string description: Glob to yaml filepaths helm_chart: type: string description: &amp;quot;Keep empty if you don&#39;t use helm.</description>
    </item>
    
    <item>
      <title>Mesos/Marathon</title>
      <link>https://ovh.github.io/cds/docs/integrations/marathon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/marathon/</guid>
      <description>The Mesos/Marathon integration have to be configured by CDS administrator.
This integration allows you to run the Marathon Hatchery to start CDS Workers.
As an end-users, this integration allows to use Worker Models of type &amp;ldquo;Docker&amp;rdquo;
Start Marathon hatchery Generate a token for group:
$ cdsctl token generate shared.infra persistent expiration persistent created 2019-03-13 18:47:56.715104 +0100 CET group_name shared.infra token xxxxxxxxxe7x4af2d408e5xxxxxxxff2adb333fab7d05c7752xxxxxxx  Edit the CDS Configuration or set the dedicated environment variables.</description>
    </item>
    
    <item>
      <title>OpenStack Swift</title>
      <link>https://ovh.github.io/cds/docs/integrations/openstack/openstack_swift/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/openstack/openstack_swift/</guid>
      <description>The OpenStack Swift Integration is a Self-Service integration that can be configured on a CDS Project.
With this integration, you can use a dedicated OpenStack Swift Storage on :
 action Artifact Upload action Artifact Download action Serve Static Files worker cache command  Notice: by default, the storage is configured in CDS Configuration. This integration allows user to use their own OpenStack Storage and not use the shared storage.</description>
    </item>
    
    <item>
      <title>Openstack Compute</title>
      <link>https://ovh.github.io/cds/docs/integrations/openstack/openstack_compute/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/openstack/openstack_compute/</guid>
      <description>CDS build using OpenStack infrastructure to spawn each CDS Workers inside dedicated virtual machine.
Start OpenStack hatchery Generate a token for group:
$ cdsctl token generate shared.infra persistent expiration persistent created 2019-03-13 18:47:56.715104 +0100 CET group_name shared.infra token xxxxxxxxxe7x4af2d408e5xxxxxxxff2adb333fab7d05c7752xxxxxxx  Edit the CDS configuration or set the dedicated environment variables. To enable the hatchery, just set the API HTTP and GRPC URL, the token freshly generated and the OpenStack variables.</description>
    </item>
    
    <item>
      <title>RabbitMQ</title>
      <link>https://ovh.github.io/cds/docs/integrations/rabbitmq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/rabbitmq/</guid>
      <description>The RabbitMQ Integration is a Self-Service integration that can be configured on a CDS Project.
This integration enables the RabbitMQ Hook feature:
Configure with WebUI You can add a RabbitMQ Integration on your CDS Project.
Configure with cdsctl Import a RabbitMQ Integration on your CDS Project Create a file project-configuration.yml:
name: my-rabbitmq-integration model: name: RabbitMQ identifier: github.com/ovh/cds/integration/builtin/rabbitmq hook: true config: password: value: &#39;**********&#39; type: password uri: value: your-rabbit:5672 type: string username: value: your-username type: string  Import the integration on your CDS Project with:</description>
    </item>
    
    <item>
      <title>Release</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-release/</guid>
      <description>Release is a builtin action, you can&amp;rsquo;t modify it.
This action creates a release on the git repository linked to the application, if repository manager implements it.
Parameters  artifacts: (optional) Set a list of artifacts, separate by &amp;lsquo;,&amp;rsquo;. You can also use regexp. releaseNote: (optional) Set a release note for the release. tag: Tag attached to the release. title: Set a title for the release.  Requirements No Requirement</description>
    </item>
    
    <item>
      <title>Roadmap</title>
      <link>https://ovh.github.io/cds/about/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/about/roadmap/</guid>
      <description>See https://github.com/ovh/cds/blob/master/ROADMAP.md</description>
    </item>
    
    <item>
      <title>Script</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-script/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-script/</guid>
      <description>Script is a builtin action, you can&amp;rsquo;t modify it.
This action executes a given script with a given interpreter.
Parameters  script: Content of your script. You can put #!/bin/bash, or #!/bin/perl at first line. Make sure that the binary used is in the pre-requisites of action.  Requirements No Requirement
YAML example Example of a pipeline using Script action:
version: v1.0 name: Pipeline1 stages: - Stage1 jobs: - job: Job1 stage: Stage1 steps: - script: - &#39;#!</description>
    </item>
    
    <item>
      <title>Serve Static Files</title>
      <link>https://ovh.github.io/cds/docs/actions/builtin-serve-static-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/builtin-serve-static-files/</guid>
      <description>Serve Static Files is a builtin action, you can&amp;rsquo;t modify it.
This action can be used to upload static files and serve them. For example your HTML report about coverage, tests, performances, &amp;hellip;
Parameters  destination: (optional) Destination of uploading. Use the name of integration attached on your project. entrypoint: (optional) Filename (and not path) for the entrypoint when serving static files (default: if empty it would be index.html). name: Name to display in CDS UI and identify your static files.</description>
    </item>
    
    <item>
      <title>accesstoken</title>
      <link>https://ovh.github.io/cds/development/rest/accesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/accesstoken/</guid>
      <description> DELETE /accesstoken/&amp;lt;id&amp;gt;    URL /accesstoken/&amp;lt;id&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteAccessTokenHandler    GET /accesstoken/group/&amp;lt;id&amp;gt;    URL /accesstoken/group/&amp;lt;id&amp;gt;     Method GET   Permissions Auth: true   Code getAccessTokenByGroupHandler    GET /accesstoken/user/&amp;lt;id&amp;gt;    URL /accesstoken/user/&amp;lt;id&amp;gt;     Method GET   Permissions Auth: true   Code getAccessTokenByUserHandler    postNewAccessToken create a new specific accesstoken with a specific scope (list of groups)    URL /accesstoken     Method POST   Permissions Auth: true   Code postNewAccessTokenHandler    putRegenAccessToken create a new specific accesstoken with a specific scope (list of groups)    URL /accesstoken/&amp;lt;id&amp;gt;     Method PUT   Permissions Auth: true   Code putRegenAccessTokenHandler    </description>
    </item>
    
    <item>
      <title>action</title>
      <link>https://ovh.github.io/cds/development/rest/action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/action/</guid>
      <description>DELETE /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;    URL /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteActionHandler    GET /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;/audit    URL /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;/audit     Method GET   Permissions Auth: true   Code getActionAuditHandler    GET /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;/export    URL /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;/export     Method GET   Permissions Auth: true   Code getActionExportHandler    GET /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;/usage    URL /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;/usage     Method GET   Permissions Auth: true   Code getActionUsageHandler    GET /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;    URL /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;     Method GET   Permissions Auth: true   Code getActionHandler    GET /action/requirement    URL /action/requirement     Method GET   Permissions Auth: false   Code getActionsRequirements    GET /action    URL /action     Method GET   Permissions Auth: true   Code getActionsHandler    POST /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;/audit/&amp;lt;auditID&amp;gt;/rollback    URL /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;/audit/&amp;lt;auditID&amp;gt;/rollback     Method POST   Permissions Auth: true   Code postActionAuditRollbackHandler    POST /action    URL /action     Method POST   Permissions Auth: true   Code postActionHandler    PUT /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;    URL /action/&amp;lt;group-name&amp;gt;/&amp;lt;permActionName&amp;gt;     Method PUT   Permissions Auth: true   Code putActionHandler    importAction insert OR update an existing action.</description>
    </item>
    
    <item>
      <title>actionBuiltin</title>
      <link>https://ovh.github.io/cds/development/rest/actionbuiltin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/actionbuiltin/</guid>
      <description> GET /actionBuiltin/&amp;lt;permActionBuiltinName&amp;gt;/usage    URL /actionBuiltin/&amp;lt;permActionBuiltinName&amp;gt;/usage     Method GET   Permissions Auth: true   Code getActionBuiltinUsageHandler    GET /actionBuiltin/&amp;lt;permActionBuiltinName&amp;gt;    URL /actionBuiltin/&amp;lt;permActionBuiltinName&amp;gt;     Method GET   Permissions Auth: true   Code getActionBuiltinHandler    GET /actionBuiltin    URL /actionBuiltin     Method GET   Permissions Auth: true   Code getActionsBuiltinHandler    </description>
    </item>
    
    <item>
      <title>add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/keys/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/keys/add/</guid>
      <description> cdsctl application keys add Add a new key on application. key type can be ssh or pgp
Synopsis Add a new key on application. key type can be ssh or pgp
cdsctl application keys add [ PROJECT-KEY APPLICATION-NAME ] KEY-NAME KEY-TYPE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl application keys - Manage CDS application keys  </description>
    </item>
    
    <item>
      <title>add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/add/</guid>
      <description>cdsctl application variable add Add a new variable on application. variable type can be one of password, text, string, key, boolean, number, repository
Synopsis Add a new variable on application. variable type can be one of password, text, string, key, boolean, number, repository
cdsctl application variable add [ PROJECT-KEY APPLICATION-NAME ] VARIABLE-NAME VARIABLE-TYPE VARIABLE-VALUE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/keys/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/keys/add/</guid>
      <description> cdsctl environment keys add Add a new key on environment. key-type can be ssh or pgp
Synopsis Add a new key on environment. key-type can be ssh or pgp
cdsctl environment keys add [ PROJECT-KEY ] ENV-NAME KEY-NAME KEY-TYPE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl environment keys - Manage CDS environment keys  </description>
    </item>
    
    <item>
      <title>add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/add/</guid>
      <description>cdsctl environment variable add Add a new variable on environment. variable type can be one of password, text, string, key, boolean, number, repository
Synopsis Add a new variable on environment. variable type can be one of password, text, string, key, boolean, number, repository
cdsctl environment variable add [ PROJECT-KEY ] ENV-NAME VARIABLE-NAME VARIABLE-TYPE VARIABLE-VALUE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/user/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/user/add/</guid>
      <description> cdsctl group user add Add an user into a group
Synopsis Add an user into a group
cdsctl group user add GROUPNAME USERNAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl group user - Manage CDS users group  </description>
    </item>
    
    <item>
      <title>add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/keys/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/keys/add/</guid>
      <description> cdsctl project keys add Add a new key on project. key-type can be ssh or pgp
Synopsis Add a new key on project. key-type can be ssh or pgp
cdsctl project keys add [ PROJECT-KEY ] KEY-NAME KEY-TYPE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project keys - Manage CDS project keys  </description>
    </item>
    
    <item>
      <title>add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/add/</guid>
      <description>cdsctl project variable add Add a new variable on project. Variable type can be one of password, text, string, key, boolean, number, repository
Synopsis Add a new variable on project. Variable type can be one of password, text, string, key, boolean, number, repository
cdsctl project variable add [ PROJECT-KEY ] VARIABLE-NAME VARIABLE-TYPE VARIABLE-VALUE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>admin</title>
      <link>https://ovh.github.io/cds/development/rest/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/admin/</guid>
      <description>DELETE /admin/database/migration/delete/&amp;lt;id&amp;gt;    URL /admin/database/migration/delete/&amp;lt;id&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deleteDatabaseMigrationHandler    DELETE /admin/plugin/&amp;lt;name&amp;gt;/binary/&amp;lt;os&amp;gt;/&amp;lt;arch&amp;gt;    URL /admin/plugin/&amp;lt;name&amp;gt;/binary/&amp;lt;os&amp;gt;/&amp;lt;arch&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deleteGRPCluginBinaryHandler    DELETE /admin/plugin/&amp;lt;name&amp;gt;    URL /admin/plugin/&amp;lt;name&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deleteGRPCluginHandler    DELETE /admin/service/&amp;lt;name&amp;gt;    URL /admin/service/&amp;lt;name&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deleteAdminServiceHandler    DELETE /admin/services/call    URL /admin/services/call     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deleteAdminServiceCallHandler    DELETE /admin/warning    URL /admin/warning     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code adminTruncateWarningsHandler    GET /admin/cds/migration    URL /admin/cds/migration     Method GET   Permissions NeedAdmin: true - Auth: true   Code getAdminMigrationsHandler    GET /admin/database/migration    URL /admin/database/migration     Method GET   Permissions NeedAdmin: true - Auth: true   Code getDatabaseMigrationHandler    GET /admin/plugin/&amp;lt;name&amp;gt;/binary/&amp;lt;os&amp;gt;/&amp;lt;arch&amp;gt;/infos    URL /admin/plugin/&amp;lt;name&amp;gt;/binary/&amp;lt;os&amp;gt;/&amp;lt;arch&amp;gt;/infos     Method GET   Permissions Auth: true   Code getGRPCluginBinaryInfosHandler    GET /admin/plugin/&amp;lt;name&amp;gt;/binary/&amp;lt;os&amp;gt;/&amp;lt;arch&amp;gt;    URL /admin/plugin/&amp;lt;name&amp;gt;/binary/&amp;lt;os&amp;gt;/&amp;lt;arch&amp;gt;     Method GET   Permissions Auth: false   Code getGRPCluginBinaryHandler    GET /admin/plugin/&amp;lt;name&amp;gt;    URL /admin/plugin/&amp;lt;name&amp;gt;     Method GET   Permissions NeedAdmin: true - Auth: true   Code getGRPCluginHandler    GET /admin/plugin    URL /admin/plugin     Method GET   Permissions NeedAdmin: true - Auth: true   Code getAllGRPCluginHandler    GET /admin/service/&amp;lt;name&amp;gt;    URL /admin/service/&amp;lt;name&amp;gt;     Method GET   Permissions NeedAdmin: true - Auth: true   Code getAdminServiceHandler    GET /admin/services/call    URL /admin/services/call     Method GET   Permissions NeedAdmin: true - Auth: true   Code getAdminServiceCallHandler    GET /admin/services    URL /admin/services     Method GET   Permissions NeedAdmin: true - Auth: true   Code getAdminServicesHandler    POST /admin/cds/migration/&amp;lt;id&amp;gt;/cancel    URL /admin/cds/migration/&amp;lt;id&amp;gt;/cancel     Method POST   Permissions NeedAdmin: true - Auth: true   Code postAdminMigrationCancelHandler    POST /admin/cds/migration/&amp;lt;id&amp;gt;/todo    URL /admin/cds/migration/&amp;lt;id&amp;gt;/todo     Method POST   Permissions NeedAdmin: true - Auth: true   Code postAdminMigrationTodoHandler    POST /admin/database/migration/unlock/&amp;lt;id&amp;gt;    URL /admin/database/migration/unlock/&amp;lt;id&amp;gt;     Method POST   Permissions NeedAdmin: true - Auth: true   Code postDatabaseMigrationUnlockedHandler    POST /admin/maintenance    URL /admin/maintenance     Method POST   Permissions NeedAdmin: true - Auth: true   Code postMaintenanceHandler    POST /admin/plugin/&amp;lt;name&amp;gt;/binary    URL /admin/plugin/&amp;lt;name&amp;gt;/binary     Method POST   Permissions NeedAdmin: true - Auth: true   Code postGRPCluginBinaryHandler    POST /admin/plugin    URL /admin/plugin     Method POST   Permissions NeedAdmin: true - Auth: true   Code postGRPCluginHandler    POST /admin/services/call    URL /admin/services/call     Method POST   Permissions NeedAdmin: true - Auth: true   Code postAdminServiceCallHandler    PUT /admin/plugin/&amp;lt;name&amp;gt;    URL /admin/plugin/&amp;lt;name&amp;gt;     Method PUT   Permissions NeedAdmin: true - Auth: true   Code putGRPCluginHandler    PUT /admin/services/call    URL /admin/services/call     Method PUT   Permissions NeedAdmin: true - Auth: true   Code putAdminServiceCallHandler    getCPUProfile responds with the pprof-formatted cpu profile.</description>
    </item>
    
    <item>
      <title>apply</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/template/apply/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/template/apply/</guid>
      <description>cdsctl template apply Apply CDS workflow template
Synopsis Apply CDS workflow template
cdsctl template apply [ PROJECT-KEY WORKFLOW-NAME ] [TEMPLATE-PATH] [flags]  Examples cdsctl template apply project-key workflow-name group-name/template-slug  Options  --detach Set to generate a workflow detached from the template --force Force, may override files --import-as-code If true, will import the generated workflow as code on given project --import-push If true, will push the generated workflow on given project -n, --no-interactive Set to not ask interactively for params -d, --output-dir string Output directory (default &amp;quot;.</description>
    </item>
    
    <item>
      <title>applyTemplate</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/applytemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/applytemplate/</guid>
      <description>cdsctl workflow applyTemplate Apply CDS workflow template
Synopsis Apply CDS workflow template
cdsctl workflow applyTemplate [ PROJECT-KEY WORKFLOW-NAME ] [TEMPLATE-PATH] [flags]  Examples cdsctl template apply project-key workflow-name group-name/template-slug  Options  --detach Set to generate a workflow detached from the template --force Force, may override files --import-as-code If true, will import the generated workflow as code on given project --import-push If true, will push the generated workflow on given project -n, --no-interactive Set to not ask interactively for params -d, --output-dir string Output directory (default &amp;quot;.</description>
    </item>
    
    <item>
      <title>artifact</title>
      <link>https://ovh.github.io/cds/development/rest/artifact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/artifact/</guid>
      <description> GET /artifact/&amp;lt;hash&amp;gt;    URL /artifact/&amp;lt;hash&amp;gt;     Method GET   Permissions Auth: false   Code downloadArtifactDirectHandler    GET /artifact/store    URL /artifact/store     Method GET   Permissions Auth: false   Code getArtifactsStoreHandler    </description>
    </item>
    
    <item>
      <title>artifacts</title>
      <link>https://ovh.github.io/cds/docs/components/worker/artifacts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/artifacts/</guid>
      <description>worker artifacts worker artifacts [--workflow=&amp;lt;workflow-name&amp;gt;] [--number=&amp;lt;run-number&amp;gt;] [--tag=&amp;lt;tag&amp;gt;] [--pattern=&amp;lt;pattern&amp;gt;]
Synopsis Inside a job, you can list artifacts of a workflow:
worker artifacts --pattern=&amp;quot;files.*.yml&amp;quot; #theses two commands have the same result: worker artifacts worker artifacts --workflow={{.cds.workflow}} --number={{.cds.run.number}}  worker artifacts [flags]  Options  --number string Workflow Number. Optional, default: current workflow run --pattern string Pattern matching files to list. Optional, default: * --tag string Tag matching files to list. Optional --workflow string Workflow name.</description>
    </item>
    
    <item>
      <title>ascode</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/ascode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/ascode/</guid>
      <description>cdsctl workflow ascode Transform an existing workflow to an as code workflow
Synopsis Transform an existing workflow to an as code workflow
cdsctl workflow ascode [ PROJECT-KEY WORKFLOW-NAME ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key --silent  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>auth</title>
      <link>https://ovh.github.io/cds/development/rest/auth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/auth/</guid>
      <description> AuthMode returns the auth mode : local ok ldap    URL /auth/mode     Method GET   Permissions Auth: false   Code authModeHandler    </description>
    </item>
    
    <item>
      <title>binary-add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins-action/binary-add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins-action/binary-add/</guid>
      <description> cdsctl admin plugins-action binary-add Add a binary
Synopsis Add a binary
cdsctl admin plugins-action binary-add FILENAME [flags]  Options  -h, --help help for binary-add  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. -w, --no-warnings do not display warnings -v, --verbose verbose output  SEE ALSO  cdsctl admin plugins-action - Manage CDS Plugins  </description>
    </item>
    
    <item>
      <title>binary-add</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/binary-add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/binary-add/</guid>
      <description> cdsctl admin plugins binary-add Add a binary
Synopsis Add a binary
cdsctl admin plugins binary-add NAME DESCRIPTOR FILENAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin plugins - Manage CDS Plugins  </description>
    </item>
    
    <item>
      <title>binary-update</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins-action/binary-update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins-action/binary-update/</guid>
      <description> cdsctl admin plugins-action binary-update Update a binary
Synopsis Update a binary
cdsctl admin plugins-action binary-update FILENAME [flags]  Options  -h, --help help for binary-update  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. -w, --no-warnings do not display warnings -v, --verbose verbose output  SEE ALSO  cdsctl admin plugins-action - Manage CDS Plugins  </description>
    </item>
    
    <item>
      <title>bookmarks</title>
      <link>https://ovh.github.io/cds/development/rest/bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/bookmarks/</guid>
      <description> GET /bookmarks    URL /bookmarks     Method GET   Permissions Auth: true   Code getBookmarksHandler    </description>
    </item>
    
    <item>
      <title>broadcast</title>
      <link>https://ovh.github.io/cds/development/rest/broadcast/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/broadcast/</guid>
      <description> DELETE /broadcast/&amp;lt;id&amp;gt;    URL /broadcast/&amp;lt;id&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deleteBroadcastHandler    GET /broadcast/&amp;lt;id&amp;gt;    URL /broadcast/&amp;lt;id&amp;gt;     Method GET   Permissions Auth: true   Code getBroadcastHandler    GET /broadcast    URL /broadcast     Method GET   Permissions Auth: true   Code getBroadcastsHandler    POST /broadcast/&amp;lt;id&amp;gt;/mark    URL /broadcast/&amp;lt;id&amp;gt;/mark     Method POST   Permissions Auth: true   Code postMarkAsReadBroadcastHandler    POST /broadcast    URL /broadcast     Method POST   Permissions NeedAdmin: true - Auth: true   Code addBroadcastHandler    PUT /broadcast/&amp;lt;id&amp;gt;    URL /broadcast/&amp;lt;id&amp;gt;     Method PUT   Permissions NeedAdmin: true - Auth: true   Code updateBroadcastHandler    </description>
    </item>
    
    <item>
      <title>build</title>
      <link>https://ovh.github.io/cds/development/rest/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/build/</guid>
      <description> POST /build/&amp;lt;id&amp;gt;/log    URL /build/&amp;lt;id&amp;gt;/log     Method POST   Permissions Auth: true   Code addBuildLogHandler    POST /build/&amp;lt;id&amp;gt;/step    URL /build/&amp;lt;id&amp;gt;/step     Method POST   Permissions Auth: true   Code updateStepStatusHandler    </description>
    </item>
    
    <item>
      <title>bulk</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/template/bulk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/template/bulk/</guid>
      <description>cdsctl template bulk Bulk apply CDS workflow template and push all given workflows
Synopsis Bulk apply CDS workflow template and push all given workflows
cdsctl template bulk [TEMPLATE-PATH] [flags]  Examples cdsctl template bulk group-name/template-slug -i PROJ1/workflow1 -i PROJ1/workflow2 -p PROJ1/workflow1:repo=github.com/ovh/cds  Options  --detach stringArray Set to generate a workflow detached from the template like --detach PROJ1/workflow1 -i, --instances stringArray Specify instances path --instances-file string Specify path|url of a json|yaml file that contains instances with params -n, --no-interactive Set to not ask interactively for params -p, --params stringArray Specify parameters for template like --params PROJ1/workflow1:paramKey=paramValue --track Wait the bulk to be over  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>cancel</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/migration/cancel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/migration/cancel/</guid>
      <description> cdsctl admin migration cancel Cancel a CDS migration (USE WITH CAUTION)
Synopsis Cancel a CDS migration (USE WITH CAUTION)
cdsctl admin migration cancel ID  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin migration - Manage CDS Migrations  </description>
    </item>
    
    <item>
      <title>cds-docker-package</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-docker-package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-docker-package/</guid>
      <description>Build image and push it to docker repository
Parameters  dockerOpts: Docker options, Enter &amp;ndash;no-cache &amp;ndash;pull if you want for example dockerRegistry: Docker Registry. Enter myregistry for build image myregistry/myimage:mytag dockerRegistryPassword: Docker Registry Password. Enter password to connect on your docker registry. dockerRegistryUsername: Docker Registry Username. Enter username to connect on your docker registry. dockerfileDirectory: Directory which contains your Dockerfile. imageName: Name of your docker image, without tag. Enter myimage for build image myregistry/myimage:mytag imageTag: Tag og your docker image.</description>
    </item>
    
    <item>
      <title>cds-go-build</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-go-build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-go-build/</guid>
      <description>Go Build: compile a go program
Parameters  architecture: GOARCH artifactUpload: Upload Binary as CDS Artifact binary: Binary name: Put foo for go build -o foo cgoDisabled: detectRaceCondition: Enable data race detection. It&amp;rsquo;s flag -race flags: flags for go build. Put -ldflags &amp;ldquo;-X main.xyz=abc&amp;rdquo; for go build -ldflags &amp;ldquo;-X main.xyz=abc&amp;rdquo; os: GOOS package: go package to compile. Put host.ext/foo/bar for go build host.ext/foo/bar preRun: Pre-command. Example: export CGO_ENABLED=0 runGoGet: Run go get -u before go build  Requirements  bash: type: binary Value: bash go: type: binary Value: go  More documentation on Github</description>
    </item>
    
    <item>
      <title>cds-nexus-upload</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-nexus-upload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-nexus-upload/</guid>
      <description>Upload file on Nexus
Parameters  artifactId: Artifact id of the artifact extension: Extension of the artifact files: Regex of files you want to upload groupId: Group id of the artifact login: Login for nexus packaging: Packaging type of the artifact password: Password for nexus repository: Nexus repository that the artifact is contained in url: Nexus URL version: Version of the artifact. Supports resolving of &amp;lsquo;LATEST&amp;rsquo;, &amp;lsquo;RELEASE&amp;rsquo; and snapshot versions (&amp;lsquo;1.</description>
    </item>
    
    <item>
      <title>cds-perl-test</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-perl-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-perl-test/</guid>
      <description>Parameters  perllib: PERL_LIB, added to $PERL5LIB proveOptions: Options passed to prove testDirectory:  Requirements  bash: type: binary Value: bash perl: type: binary Value: perl prove: type: binary Value: prove  More documentation on Github</description>
    </item>
    
    <item>
      <title>cds-publish-ovh-metrics</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-publish-ovh-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-publish-ovh-metrics/</guid>
      <description>Publish a metric on OVH Metrics. See https://www.ovh.com/fr/data-platforms/metrics/ and doc on https://docs.ovh.com/gb/en/cloud/metrics/
Parameters  file: Metrics file to push (optional) See: http://www.warp10.io/apis/ingress/ labels: Labels of your metric (one K/V per line separated by a space) name: Name of you metric (optional) region: Metrics region token: Metrics write token value: Value of your metric (T=true) See: http://www.warp10.io/apis/ingress/  Requirements  bash: type: binary Value: bash curl: type: binary Value: curl  More documentation on Github</description>
    </item>
    
    <item>
      <title>cds-python-pylint</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-python-pylint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-python-pylint/</guid>
      <description>Run pylint. By default, each pylint recommendation will be displayed as a Junit test. The short errors are fully contained inside the test title, an arrow (-&amp;gt;) will be present if a part of the recommendation is displayed in the test body.
Parameters  extra_options: Extra options to pass during pylint invocation. ignore: List of ignored files / directory (base name, not path), separated by a ; module_path: List of modules paths (absolute or relative) to launch pylint into, separated by a ;.</description>
    </item>
    
    <item>
      <title>cds-sonar-scanner</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-sonar-scanner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-sonar-scanner/</guid>
      <description>Run Sonar analysis. You must have a file sonar-project.properties in your source directory.
Parameters  sonar-project.properties: sonar-project.properties file sonarBranch: The Sonar branch (e.g. master) sonarDownloadURL: The download URL of Sonar CLI sonarPassword: The Sonar server&amp;rsquo;s password sonarURL: The URL of the Sonar server sonarUsername: The Sonar server&amp;rsquo;s username sonarVersion: SonarScanner&amp;rsquo;s version to use workspace: The directory where your project is (e.g. /go/src/github.com/ovh/cds)  Requirements  bash: type: binary Value: bash plugin-archive: type: plugin Value: plugin-archive plugin-download: type: plugin Value: plugin-download  More documentation on Github</description>
    </item>
    
    <item>
      <title>cds-split-download</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-split-download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-split-download/</guid>
      <description>Download Artifacts which were uploaded using CDS_SplitUploadArtifact action.
Parameters  destinationFile: Destination File to save the file. (Mandatory). (like dist.tar.gz) pattern: Prefix pattern to identify files to be downloaded. (Mandatory). (like bigfile-*) prefixHandle: Prefix of the Artifacts uploaded. (Mandatory). tag: Tag to identify uploaded artifacts. Default tag value is CDS run version number. (Optional)  Requirements  bash: type: binary Value: bash  More documentation on Github</description>
    </item>
    
    <item>
      <title>cds-split-upload</title>
      <link>https://ovh.github.io/cds/docs/actions/cds-split-upload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/cds-split-upload/</guid>
      <description>Split and Upload Artifact with size greater than 500 MB.
Parameters  numericSuffixes: Use numeric suffixes instead of alphabetic. Default suffix is set to be Numeric. (Optional) prefixHandle: Prefix to be added to destination files after split. (Mandatory) sourceFile: Artifact File to be split and uploaded. (Mandatory). splitSize: Size of each split files. Default size is 200MB. (Optional) tag: Tag to identify uploaded artifacts. Default tag value is CDS run version number.</description>
    </item>
    
    <item>
      <title>check</title>
      <link>https://ovh.github.io/cds/docs/components/engine/config/check/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/config/check/</guid>
      <description> engine config check Check CDS configuration file
Synopsis $ engine config check 
engine config check  SEE ALSO  engine config - Manage CDS Configuration  </description>
    </item>
    
    <item>
      <title>check-secret</title>
      <link>https://ovh.github.io/cds/docs/components/worker/check-secret/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/check-secret/</guid>
      <description>worker check-secret worker check-secret fileA fileB
Synopsis Inside a step script (https://ovh.github.io/cds/docs/actions/builtin-script/), you can add check if a file contains a CDS variable of type password or private key:
#!/bin/bash set -ex # create a file cat &amp;lt;&amp;lt; EOF &amp;gt; myFile this a a line in the file, with a CDS variable of type password {{.cds.app.password}} EOF # worker check-secret myFile worker check-secret {{.cds.workspace}}/myFile  This command will exit 1 and a log is displayed, as:</description>
    </item>
    
    <item>
      <title>config</title>
      <link>https://ovh.github.io/cds/development/rest/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/config/</guid>
      <description> ConfigUser return url of CDS UI    URL /config/user     Method GET   Permissions Auth: false   Code ConfigUserHandler    ConfigVCShandler return the configuration of vcs server    URL /config/vcs     Method GET   Permissions Auth: true   Code ConfigVCShandler    </description>
    </item>
    
    <item>
      <title>confirm</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/user/confirm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/user/confirm/</guid>
      <description> cdsctl user confirm Confirm CDS user password reset
Synopsis Confirm CDS user password reset
cdsctl user confirm USERNAME TOKEN  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl user - Manage CDS user  </description>
    </item>
    
    <item>
      <title>create</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/broadcasts/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/broadcasts/create/</guid>
      <description>cdsctl admin broadcasts create Create a CDS broadcast
Synopsis Create a CDS broadcast
cdsctl admin broadcasts create TITLE [flags]  Examples level info: cdsctl admin broadcasts create &amp;quot;the title&amp;quot; &amp;lt; content.md level warning: cdsctl admin broadcasts create --level warning &amp;quot;the title&amp;quot; &amp;quot;the content&amp;quot;  Options  -l, --level string Level of broadcast: info or warning (default &amp;quot;info&amp;quot;)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>create</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/create/</guid>
      <description> cdsctl application create Create a CDS application
Synopsis Create a CDS application
cdsctl application create [ PROJECT-KEY ] APPLICATION-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl application - Manage CDS application  </description>
    </item>
    
    <item>
      <title>create</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/create/</guid>
      <description> cdsctl environment create Create a CDS environment
Synopsis Create a CDS environment
cdsctl environment create [ PROJECT-KEY ] ENVIRONMENT-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl environment - Manage CDS environment  </description>
    </item>
    
    <item>
      <title>create</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/create/</guid>
      <description> cdsctl group create Create a CDS group
Synopsis Create a CDS group
cdsctl group create GROUP-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl group - Manage CDS group  </description>
    </item>
    
    <item>
      <title>create</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/create/</guid>
      <description> cdsctl project create Create a CDS project
Synopsis Create a CDS project
cdsctl project create [ PROJECT-KEY PROJECT-NAME ] [GROUP-NAME]  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project - Manage CDS project  </description>
    </item>
    
    <item>
      <title>curl</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/curl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/curl/</guid>
      <description> cdsctl admin curl Execute request to CDS api
Synopsis Execute request to CDS api
cdsctl admin curl PATH [flags]  Options  -d, --data string -X, --request string (default &amp;quot;GET&amp;quot;)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin - Manage CDS (admin only)  </description>
    </item>
    
    <item>
      <title>dbmigrate</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/health/dbmigrate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/health/dbmigrate/</guid>
      <description>cdsctl health dbmigrate Show DB Migrate status
Synopsis Show DB Migrate status
cdsctl health dbmigrate [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/delete/</guid>
      <description>cdsctl action delete Delete a CDS action
Synopsis Useful to delete a CDS action
cdsctl action delete myAction # this will not fail if action does not exist cdsctl action delete myActionNotExist --force  cdsctl action delete ACTION-PATH [flags]  Options  --force if true, do not fail if action does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/broadcasts/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/broadcasts/delete/</guid>
      <description> cdsctl admin broadcasts delete Delete a CDS broadcast
Synopsis Delete a CDS broadcast
cdsctl admin broadcasts delete ID [flags]  Options  --force if true, do not fail if action does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin broadcasts - Manage CDS broadcasts  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/database/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/database/delete/</guid>
      <description> cdsctl admin database delete Delete a database migration from table gorp_migration (use with caution)
Synopsis Delete a database migration from table gorp_migration (use with caution)
cdsctl admin database delete ID  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin database - Manage CDS Database  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/delete/</guid>
      <description> cdsctl admin integration-model delete Delete a CDS Integration model
Synopsis Delete a CDS Integration model
cdsctl admin integration-model delete NAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin integration-model - Manage CDS Integration models  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/delete/</guid>
      <description>cdsctl admin platform-model delete Delete a CDS Platform model
Synopsis Delete a CDS Platform model
cdsctl admin platform-model delete NAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist -h, --help help for delete  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/delete/</guid>
      <description> cdsctl admin plugins delete Delete a CDS Plugin
Synopsis Delete a CDS Plugin
cdsctl admin plugins delete NAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin plugins - Manage CDS Plugins  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/services/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/services/delete/</guid>
      <description> cdsctl admin services delete Delete a CDS service from registered service
Synopsis Delete a CDS service from registered service
cdsctl admin services delete NAME ... [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin services - Manage CDS services  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/delete/</guid>
      <description> cdsctl application delete Delete a CDS application
Synopsis Delete a CDS application
cdsctl application delete [ PROJECT-KEY APPLICATION-NAME ] [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl application - Manage CDS application  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/keys/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/keys/delete/</guid>
      <description> cdsctl application keys delete Delete CDS an application key
Synopsis Delete CDS an application key
cdsctl application keys delete [ PROJECT-KEY APPLICATION-NAME ] KEY-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl application keys - Manage CDS application keys  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/delete/</guid>
      <description> cdsctl application variable delete Delete CDS application variable
Synopsis Delete CDS application variable
cdsctl application variable delete [ PROJECT-KEY APPLICATION-NAME ] VARIABLE-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl application variable - Manage CDS application variables  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/delete/</guid>
      <description> cdsctl environment delete Delete a CDS environment
Synopsis Delete a CDS environment
cdsctl environment delete [ PROJECT-KEY ] ENVIRONMENT-NAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl environment - Manage CDS environment  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/keys/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/keys/delete/</guid>
      <description> cdsctl environment keys delete Delete CDS environment key
Synopsis Delete CDS environment key
cdsctl environment keys delete [ PROJECT-KEY ] ENV-NAME KEY-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl environment keys - Manage CDS environment keys  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/delete/</guid>
      <description> cdsctl environment variable delete Delete CDS environment variable
Synopsis Delete CDS environment variable
cdsctl environment variable delete [ PROJECT-KEY ] ENV-NAME VARIABLE-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl environment variable - Manage CDS environment variables  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/delete/</guid>
      <description> cdsctl group delete Delete a CDS group
Synopsis Delete a CDS group
cdsctl group delete GROUP-NAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl group - Manage CDS group  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/user/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/user/delete/</guid>
      <description> cdsctl group user delete Delete an user from a group
Synopsis Delete an user from a group
cdsctl group user delete GROUPNAME USERNAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl group user - Manage CDS users group  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/delete/</guid>
      <description> cdsctl pipeline delete Delete a CDS pipeline
Synopsis Delete a CDS pipeline
cdsctl pipeline delete [ PROJECT-KEY ] PIPELINE-NAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl pipeline - Manage CDS pipeline  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/delete/</guid>
      <description> cdsctl project delete Delete a CDS project
Synopsis Delete a CDS project
cdsctl project delete [ PROJECT-KEY ] [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project - Manage CDS project  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/integration/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/integration/delete/</guid>
      <description>cdsctl project integration delete Delete a integration configuration on a project
Synopsis Delete a integration configuration on a project
cdsctl project integration delete [ PROJECT-KEY ] NAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/keys/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/keys/delete/</guid>
      <description> cdsctl project keys delete Delete CDS project key
Synopsis Delete CDS project key
cdsctl project keys delete [ PROJECT-KEY ] KEY-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project keys - Manage CDS project keys  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/platform/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/platform/delete/</guid>
      <description>cdsctl project platform delete Delete a platform configuration on a project
Synopsis Delete a platform configuration on a project
cdsctl project platform delete [ PROJECT-KEY ] NAME [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist -h, --help help for delete  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/delete/</guid>
      <description> cdsctl project variable delete Delete CDS project variable
Synopsis Delete CDS project variable
cdsctl project variable delete [ PROJECT-KEY ] VARIABLE-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project variable - Manage CDS project variables  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/template/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/template/delete/</guid>
      <description> cdsctl template delete Delete a workflow template
Synopsis Delete a workflow template
cdsctl template delete [TEMPLATE-PATH]  Examples cdsctl template delete group-name/template-slug  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl template - Manage CDS workflow template  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/token/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/token/delete/</guid>
      <description>cdsctl token delete Delete a token linked to a group
Synopsis Delete a token from a group and so revoke it to unauthorize future connection.
Pay attention you must be an administrator of the group to launch this command.
cdsctl token delete GROUPNAME TOKENID [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/delete/</guid>
      <description>cdsctl worker model delete Delete a CDS worker model
Synopsis Delete a CDS worker model
cdsctl worker model delete WORKER-MODEL-PATH [flags]  Examples cdsctl worker model delete shared.infra/myModel  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/advanced/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/advanced/delete/</guid>
      <description> cdsctl workflow advanced delete Delete a CDS workflow
Synopsis Delete a CDS workflow
cdsctl workflow advanced delete [ PROJECT-KEY WORKFLOW-NAME ] [flags]  Options  --force Force delete without confirmation and exit 0 if resource does not exist  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl workflow advanced - Manage Workflow Advanced  </description>
    </item>
    
    <item>
      <title>delete</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/xtoken/delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/xtoken/delete/</guid>
      <description> cdsctl xtoken delete Delete access token
Synopsis Delete access token
cdsctl xtoken delete TOKEN-ID ...  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl xtoken - Manage CDS access tokens [EXPERIMENTAL]  </description>
    </item>
    
    <item>
      <title>detach</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/template/detach/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/template/detach/</guid>
      <description> cdsctl template detach Detach a workflow from template
Synopsis Detach a workflow from template
cdsctl template detach [ PROJECT-KEY WORKFLOW-NAME ]  Examples cdsctl template detach project-key workflow-name  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl template - Manage CDS workflow template  </description>
    </item>
    
    <item>
      <title>disable</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/maintenance/disable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/maintenance/disable/</guid>
      <description> cdsctl admin maintenance disable Disable CDS maintenance
Synopsis Disable CDS maintenance
cdsctl admin maintenance disable  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin maintenance - Manage CDS maintenance  </description>
    </item>
    
    <item>
      <title>disable</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/worker/disable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/worker/disable/</guid>
      <description> cdsctl worker disable Disable CDS workers
Synopsis Disable one on more CDS worker by their names.
For example if your want to disable all CDS workers you can run:
$ cdsctl worker disable $(cdsctl worker list)
cdsctl worker disable NAME ...  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl worker - Manage CDS worker  </description>
    </item>
    
    <item>
      <title>doc</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/builtin/doc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/builtin/doc/</guid>
      <description> cdsctl action builtin doc Generate Builtin action documentation: cdsctl action builtin doc &amp;lt;name&amp;gt;
Synopsis Generate Builtin action documentation: cdsctl action builtin doc &amp;lt;name&amp;gt;
cdsctl action builtin doc NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl action builtin - Manage CDS builtin action  </description>
    </item>
    
    <item>
      <title>doc</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/doc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/doc/</guid>
      <description> cdsctl action doc Generate action documentation: cdsctl action doc &amp;lt;path-to-file&amp;gt;
Synopsis Generate action documentation: cdsctl action doc &amp;lt;path-to-file&amp;gt;
cdsctl action doc PATH  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl action - Manage CDS action  </description>
    </item>
    
    <item>
      <title>doc</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/doc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/doc/</guid>
      <description> cdsctl admin plugins doc Generate documentation in markdown for a plugin
Synopsis Generate documentation in markdown for a plugin
cdsctl admin plugins doc PATH  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin plugins - Manage CDS Plugins  </description>
    </item>
    
    <item>
      <title>downgrade</title>
      <link>https://ovh.github.io/cds/docs/components/engine/database/downgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/database/downgrade/</guid>
      <description>engine database downgrade Downgrade schema
Synopsis Undo a database migration.
engine database downgrade [flags]  Options  --db-connect-timeout int Maximum wait for connection, in seconds (default 10) --db-host string DB Host (default &amp;quot;localhost&amp;quot;) --db-maxconn int DB Max connection (default 20) --db-name string DB Name (default &amp;quot;cds&amp;quot;) --db-password string DB Password --db-port int DB Port (default 5432) --db-role string DB Role --db-sslmode string DB SSL Mode: require (default), verify-full, or disable (default &amp;quot;require&amp;quot;) --db-timeout int Statement timeout value in milliseconds (default 3000) --db-user string DB User (default &amp;quot;cds&amp;quot;) --dry-run Dry run downgrade --limit int Max number of migrations to apply (0 = unlimited) (default 1) --migrate-dir string CDS SQL Migration directory (default &amp;quot;.</description>
    </item>
    
    <item>
      <title>download</title>
      <link>https://ovh.github.io/cds/development/rest/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/download/</guid>
      <description> GET /download/&amp;lt;name&amp;gt;/&amp;lt;os&amp;gt;/&amp;lt;arch&amp;gt;    URL /download/&amp;lt;name&amp;gt;/&amp;lt;os&amp;gt;/&amp;lt;arch&amp;gt;     Method GET   Permissions Auth: false   Code downloadHandler    GET /download    URL /download     Method GET   Permissions Auth: true   Code downloadsHandler    </description>
    </item>
    
    <item>
      <title>download</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/artifact/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/artifact/download/</guid>
      <description>cdsctl workflow artifact download Download artifacts of one Workflow Run
Synopsis Download artifacts of one Workflow Run
cdsctl workflow artifact download [ PROJECT-KEY WORKFLOW-NAME ] NUMBER [ARTEFACT-NAME] [flags]  Options  --exclude string exclude files from download - could be a regex: *.log  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>download</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/logs/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/logs/download/</guid>
      <description>cdsctl workflow logs download Download logs from a workflow run.
Synopsis Download logs from a workflow run. You can download all logs files or just one log if you want.
# download all logs files on latest run $ cdsctl workflow logs download KEY WF # download all logs files on run number 1 $ cdsctl workflow logs download KEY WF 1 # download only one file: $ cdsctl workflow logs download KEY WF 1 --pattern=&amp;quot;MyStage&amp;quot; # this will download WF-1.</description>
    </item>
    
    <item>
      <title>download</title>
      <link>https://ovh.github.io/cds/docs/components/worker/download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/download/</guid>
      <description>worker download worker download [--workflow=&amp;lt;workflow-name&amp;gt;] [--number=&amp;lt;run-number&amp;gt;] [--tag=&amp;lt;tag&amp;gt;] [--pattern=&amp;lt;pattern&amp;gt;]
Synopsis Inside a job, there are two ways to download an artifact:
 with a step using action Download Artifacts with a step script (https://ovh.github.io/cds/docs/actions/builtin-script/), using the worker command.  Worker Command:
worker download --tag=&amp;lt;tag&amp;gt; &amp;lt;path&amp;gt;  Example:
worker download --pattern=&amp;quot;files.*.yml&amp;quot;  Theses two commands have the same result:
worker download worker download --workflow={{.cds.workflow}} --number={{.cds.run.number}}  worker download [flags]  Options  --number string Workflow Number to download from.</description>
    </item>
    
    <item>
      <title>enable</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/maintenance/enable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/maintenance/enable/</guid>
      <description> cdsctl admin maintenance enable Enable CDS maintenance
Synopsis Enable CDS maintenance
cdsctl admin maintenance enable  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin maintenance - Manage CDS maintenance  </description>
    </item>
    
    <item>
      <title>encrypt</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/encrypt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/encrypt/</guid>
      <description>cdsctl encrypt Encrypt variable into your CDS project
Synopsis To be able to write secret in the CDS yaml files, you have to encrypt data with the project GPG key.
Create a secret variable:
$ cdsctl encrypt MYPROJECT my-data my-super-secret-value my-data: 01234567890987654321  The command returns the value: 01234567890987654321. You can use this value in a configuration file.
Example of use case: Import an environment with a secret.
Create an environment file to import :</description>
    </item>
    
    <item>
      <title>executions</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/executions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/executions/</guid>
      <description>cdsctl admin hooks executions List CDS Executions for one task
Synopsis List CDS Executions for one task
cdsctl admin hooks executions UUID [flags]  Examples cdsctl admin hooks executions 5178ce1f-2f76-45c5-a203-58c10c3e2c73  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>exit</title>
      <link>https://ovh.github.io/cds/docs/components/worker/exit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/exit/</guid>
      <description> worker exit worker exit
Synopsis worker exit command lets job finish current step and disabled all further steps
worker exit  SEE ALSO  worker - CDS Worker  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/export/</guid>
      <description> cdsctl action export Export a CDS action
Synopsis Export a CDS action
cdsctl action export ACTION-PATH [flags]  Options  --format string Specify export format (json or yaml) (default &amp;quot;yaml&amp;quot;)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl action - Manage CDS action  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/export/</guid>
      <description> cdsctl admin integration-model export Export a CDS Integration model
Synopsis Export a CDS Integration model
cdsctl admin integration-model export NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin integration-model - Manage CDS Integration models  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/export/</guid>
      <description> cdsctl admin platform-model export Export a CDS Platform model
Synopsis Export a CDS Platform model
cdsctl admin platform-model export NAME [flags]  Options  -h, --help help for export  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. -w, --no-warnings do not display warnings -v, --verbose verbose output  SEE ALSO  cdsctl admin platform-model - Manage CDS Platform models  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/export/</guid>
      <description> cdsctl admin plugins export Export a CDS Plugin
Synopsis Export a CDS Plugin
cdsctl admin plugins export NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin plugins - Manage CDS Plugins  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/export/</guid>
      <description> cdsctl application export Export an application
Synopsis Export an application
cdsctl application export [ PROJECT-KEY APPLICATION-NAME ] [flags]  Options  --format string Specify export format (json or yaml) (default &amp;quot;yaml&amp;quot;)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl application - Manage CDS application  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/export/</guid>
      <description> cdsctl environment export Export an environment
Synopsis Export an environment
cdsctl environment export [ PROJECT-KEY ] ENVIRONMENT-NAME [flags]  Options  --format string Specify export format (json or yaml) (default &amp;quot;yaml&amp;quot;)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl environment - Manage CDS environment  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/export/</guid>
      <description> cdsctl pipeline export Export CDS pipeline
Synopsis Export CDS pipeline
cdsctl pipeline export [ PROJECT-KEY ] PIPELINE-NAME [flags]  Options  --format string yml or json (default &amp;quot;yml&amp;quot;)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl pipeline - Manage CDS pipeline  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/integration/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/integration/export/</guid>
      <description> cdsctl project integration export Export a integration configuration from a project to stdout
Synopsis Export a integration configuration from a project to stdout
cdsctl project integration export [ PROJECT-KEY ] NAME  Examples cdsctl integration export MY-PROJECT MY-INTEGRATION-NAME &amp;gt; file.yaml  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project integration - Manage CDS integration integrations  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/platform/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/platform/export/</guid>
      <description>cdsctl project platform export Export a platform configuration from a project to stdout
Synopsis Export a platform configuration from a project to stdout
cdsctl project platform export [ PROJECT-KEY ] NAME [flags]  Examples cdsctl project platform export MY-PROJECT MY-PLATFORM-NAME &amp;gt; file.yaml  Options  -h, --help help for export  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/export/</guid>
      <description> cdsctl worker model export Export a worker model
Synopsis Export a worker model
cdsctl worker model export WORKER-MODEL-PATH [flags]  Examples cdsctl worker model export myGroup/myModel  Options  --format string Specify export format (json or yaml) (default &amp;quot;yaml&amp;quot;)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl worker model - Manage Worker Model  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/export/</guid>
      <description> cdsctl workflow export Export a workflow
Synopsis Export a workflow
cdsctl workflow export [ PROJECT-KEY WORKFLOW-NAME ] [flags]  Options  --format string Specify export format (json or yaml) (default &amp;quot;yaml&amp;quot;) --with-permissions Export permissions  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl workflow - Manage CDS workflow  </description>
    </item>
    
    <item>
      <title>export</title>
      <link>https://ovh.github.io/cds/docs/components/worker/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/export/</guid>
      <description> worker export worker export &amp;lt;varname&amp;gt; &amp;lt;value&amp;gt;
Synopsis Inside a step script (https://ovh.github.io/cds/docs/actions/builtin-script/), you can create a build variable with the worker command:
worker export foo bar  then, you can use new build variable:
echo &amp;quot;{{.cds.build.foo}}&amp;quot;  Scope You can use the build variable in :
 another step of the current job with {{.cds.build.varname}} the next stages in same pipeline {{.cds.build.varname}} the next pipelines {{.workflow.pipelineName.build.varname}} with pipelineName the name of the pipeline in your workflow   worker export  SEE ALSO  worker - CDS Worker  </description>
    </item>
    
    <item>
      <title>favorite</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/favorite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/favorite/</guid>
      <description> cdsctl project favorite Add or delete a CDS project to your personal bookmarks
Synopsis Add or delete a CDS project to your personal bookmarks
cdsctl project favorite [ PROJECT-KEY ]  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project - Manage CDS project  </description>
    </item>
    
    <item>
      <title>favorite</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/user/favorite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/user/favorite/</guid>
      <description> cdsctl user favorite Display all the user favorites
Synopsis Display all the user favorites
cdsctl user favorite  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl user - Manage CDS user  </description>
    </item>
    
    <item>
      <title>favorite</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/favorite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/favorite/</guid>
      <description> cdsctl workflow favorite Add or delete a CDS workflow to your personal bookmarks
Synopsis Add or delete a CDS workflow to your personal bookmarks
cdsctl workflow favorite [ PROJECT-KEY WORKFLOW-NAME ]  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl workflow - Manage CDS workflow  </description>
    </item>
    
    <item>
      <title>find</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/token/find/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/token/find/</guid>
      <description>cdsctl token find Find an existing token
Synopsis Find an existing token with his value to have his description, creation date and the name of the creator.
cdsctl token find TOKEN [flags]  Examples cdsctl token find &amp;quot;myTokenValue&amp;quot;  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>generate</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/token/generate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/token/generate/</guid>
      <description>cdsctl token generate Generate a new token
Synopsis Generate a new token when you use the cli or the api in scripts or for your worker, hatchery, µservices.
The expiration must be [daily|persistent|session].
Daily expirate after one day.
Persistent doesn&amp;rsquo;t expirate until you revoke them.
Pay attention you must be an administrator of the group to launch this command.
cdsctl token generate GROUPNAME EXPIRATION [DESCRIPTION] [flags]  Options  --fields string Only display specified object fields.</description>
    </item>
    
    <item>
      <title>get</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/errors/get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/errors/get/</guid>
      <description> cdsctl admin errors get Get CDS error
Synopsis Get CDS error
cdsctl admin errors get UUID  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin errors - Manage CDS errors  </description>
    </item>
    
    <item>
      <title>grant</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/grant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/grant/</guid>
      <description>cdsctl group grant Grant a CDS group in a project or workflow
Synopsis Grant a CDS group in a project or workflow
cdsctl group grant [ PROJECT-KEY ] GROUP-NAME PERMISSION [flags]  Options  -p, --only-project Indicate if the group must be added only on project or also on all workflows in project -n, --workflow string Workflow name  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>group</title>
      <link>https://ovh.github.io/cds/development/rest/group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/group/</guid>
      <description> DELETE /group/&amp;lt;group-name&amp;gt;/token/&amp;lt;tokenid&amp;gt;    URL /group/&amp;lt;group-name&amp;gt;/token/&amp;lt;tokenid&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteTokenHandler    DELETE /group/&amp;lt;group-name&amp;gt;/user/&amp;lt;user-name&amp;gt;/admin    URL /group/&amp;lt;group-name&amp;gt;/user/&amp;lt;user-name&amp;gt;/admin     Method DELETE   Permissions Auth: true   Code removeUserGroupAdminHandler    DELETE /group/&amp;lt;group-name&amp;gt;/user/&amp;lt;user-name&amp;gt;    URL /group/&amp;lt;group-name&amp;gt;/user/&amp;lt;user-name&amp;gt;     Method DELETE   Permissions Auth: true   Code removeUserFromGroupHandler    DELETE /group/&amp;lt;group-name&amp;gt;    URL /group/&amp;lt;group-name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteGroupHandler    GET /group/&amp;lt;group-name&amp;gt;/token    URL /group/&amp;lt;group-name&amp;gt;/token     Method GET   Permissions Auth: true   Code getGroupTokenListHandler    GET /group/&amp;lt;group-name&amp;gt;    URL /group/&amp;lt;group-name&amp;gt;     Method GET   Permissions Auth: true   Code getGroupHandler    GET /group/&amp;lt;groupID&amp;gt;/action    URL /group/&amp;lt;groupID&amp;gt;/action     Method GET   Permissions Auth: true   Code getActionsForGroupHandler    GET /group/&amp;lt;groupID&amp;gt;/worker/model    URL /group/&amp;lt;groupID&amp;gt;/worker/model     Method GET   Permissions Auth: true   Code getWorkerModelsForGroupHandler    GET /group/public    URL /group/public     Method GET   Permissions Auth: true   Code getPublicGroupsHandler    GET /group    URL /group     Method GET   Permissions Auth: true   Code getGroupsHandler    POST /group/&amp;lt;group-name&amp;gt;/user/&amp;lt;user-name&amp;gt;/admin    URL /group/&amp;lt;group-name&amp;gt;/user/&amp;lt;user-name&amp;gt;/admin     Method POST   Permissions Auth: true   Code setUserGroupAdminHandler    POST /group/&amp;lt;group-name&amp;gt;/user    URL /group/&amp;lt;group-name&amp;gt;/user     Method POST   Permissions Auth: true   Code addUserInGroupHandler    POST /group    URL /group     Method POST   Permissions Auth: true   Code addGroupHandler    PUT /group/&amp;lt;group-name&amp;gt;    URL /group/&amp;lt;group-name&amp;gt;     Method PUT   Permissions Auth: true   Code updateGroupHandler    generateToken allows a user to generate a token associated to a group permission    URL /group/&amp;lt;group-name&amp;gt;/token     Method POST   Permissions Auth: true   Code generateTokenHandler    </description>
    </item>
    
    <item>
      <title>hatchery</title>
      <link>https://ovh.github.io/cds/development/rest/hatchery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/hatchery/</guid>
      <description> GET /hatchery/count/&amp;lt;workflowNodeRunID&amp;gt;    URL /hatchery/count/&amp;lt;workflowNodeRunID&amp;gt;     Method GET   Permissions Auth: true   Code hatcheryCountHandler    </description>
    </item>
    
    <item>
      <title>history</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/history/</guid>
      <description>cdsctl workflow history Display CDS workflow runs history
Synopsis Display CDS workflow runs history
cdsctl workflow history [ PROJECT-KEY WORKFLOW-NAME ] [OFFSET] [LIMIT] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>hook</title>
      <link>https://ovh.github.io/cds/development/rest/hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/hook/</guid>
      <description> GET /hook/&amp;lt;uuid&amp;gt;/workflow/&amp;lt;workflowID&amp;gt;/vcsevent/&amp;lt;vcsServer&amp;gt;    URL /hook/&amp;lt;uuid&amp;gt;/workflow/&amp;lt;workflowID&amp;gt;/vcsevent/&amp;lt;vcsServer&amp;gt;     Method GET   Permissions Auth: true   Code getHookPollingVCSEvents    </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/development/rest/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/import/</guid>
      <description>Get import workflow as code operation details    URL /import/&amp;lt;project-key&amp;gt;/&amp;lt;uuid&amp;gt;     Method GET   Permissions Auth: true   Code getImportAsCodeHandler    Description This route helps you to know if a &amp;ldquo;import as code&amp;rdquo; is over, and the details of the performed operation
Request Body None  Response Body {&amp;quot;uuid&amp;quot;:&amp;quot;ee3946ac-3a77-46b1-af78-77868fde75ec&amp;quot;,&amp;quot;url&amp;quot;:&amp;quot;https://github.com/fsamin/go-repo.git&amp;quot;,&amp;quot;strategy&amp;quot;:{&amp;quot;connection_type&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;ssh_key&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;user&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;password&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;branch&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;default_branch&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;pgp_key&amp;quot;:&amp;quot;&amp;quot;},&amp;quot;setup&amp;quot;:{&amp;quot;checkout&amp;quot;:{}},&amp;quot;load_files&amp;quot;:{&amp;quot;pattern&amp;quot;:&amp;quot;.cds/**/*.yml&amp;quot;,&amp;quot;results&amp;quot;:{&amp;quot;w-go-repo.yml&amp;quot;:&amp;quot;bmFtZTogdy1nby1yZXBvCgkJCQkJdmVyc2lvbjogdjEuMAoJCQkJCXBpcGVsaW5lOiBidWlsZAoJCQkJCWFwcGxpY2F0aW9uOiBnby1yZXBvCgkJCQkJcGlwZWxpbmVfaG9va3M6CgkJCQkJLSB0eXBlOiBSZXBvc2l0b3J5V2ViSG9vawoJCQkJCQ==&amp;quot;}},&amp;quot;status&amp;quot;:2}  Import workflow as code    URL /import/&amp;lt;project-key&amp;gt;     Method POST   Permissions Auth: true   Code postImportAsCodeHandler    Description This the entrypoint to perform workflow as code.</description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/import/</guid>
      <description> cdsctl action import Import a CDS action
Synopsis Import a CDS action
cdsctl action import PATH  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl action - Manage CDS action  </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/import/</guid>
      <description> cdsctl admin integration-model import Import a CDS Integration model from a yaml file
Synopsis Import a CDS Integration model from a yaml file
cdsctl admin integration-model import FILE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin integration-model - Manage CDS Integration models  </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/import/</guid>
      <description> cdsctl admin platform-model import Import a CDS Platform model from a yaml file
Synopsis Import a CDS Platform model from a yaml file
cdsctl admin platform-model import FILE [flags]  Options  -h, --help help for import  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. -w, --no-warnings do not display warnings -v, --verbose verbose output  SEE ALSO  cdsctl admin platform-model - Manage CDS Platform models  </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/import/</guid>
      <description> cdsctl admin plugins import Import a CDS Plugin
Synopsis Import a CDS Plugin
cdsctl admin plugins import FILE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin plugins - Manage CDS Plugins  </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/group/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/group/import/</guid>
      <description>cdsctl application group import Import group linked to a CDS application
Synopsis Import group linked to a CDS application
cdsctl application group import [ PROJECT-KEY APPLICATION-NAME ] PATH [flags]  Options  --force Use force flag to replace groups in your application -h, --help help for import  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/import/</guid>
      <description> cdsctl application import Import an application with a local filepath or an URL
Synopsis Import an application with a local filepath or an URL
cdsctl application import [ PROJECT-KEY ] PATH [flags]  Options  --force Override application if exists  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl application - Manage CDS application  </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/group/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/group/import/</guid>
      <description>cdsctl environment group import Import group linked to a CDS environment
Synopsis Import group linked to a CDS environment
cdsctl environment group import [ PROJECT-KEY ] ENVIRONMENT-NAME PATH [flags]  Options  --force Use force flag to replace groups in your environment -h, --help help for import  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/import/</guid>
      <description> cdsctl environment import Import an environment with local filepath or URL
Synopsis Import an environment with local filepath or URL
cdsctl environment import [ PROJECT-KEY ] PATH [flags]  Options  --force Override environment if exists  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl environment - Manage CDS environment  </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/group/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/group/import/</guid>
      <description>cdsctl pipeline group import Import group linked to a CDS pipeline
Synopsis Import group linked to a CDS pipeline
cdsctl pipeline group import [ PROJECT-KEY ] PIPELINE-NAME PATH [flags]  Options  --force Use force flag to replace groups in your pipeline -h, --help help for import  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/import/</guid>
      <description> cdsctl pipeline import Import CDS pipeline
Synopsis PATH: Path or URL of pipeline to import
cdsctl pipeline import [ PROJECT-KEY ] PATH [flags]  Options  --force Use force flag to update your pipeline  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl pipeline - Manage CDS pipeline  </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/group/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/group/import/</guid>
      <description> cdsctl project group import Import group linked to a CDS project
Synopsis Import group linked to a CDS project
cdsctl project group import [ PROJECT-KEY ] PATH [flags]  Options  --force Use force flag to replace groups in your project  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project group - Manage CDS group linked to a project  </description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/integration/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/integration/import/</guid>
      <description>cdsctl project integration import Import a integration configuration on a project from a yaml file
Synopsis Import a integration configuration on a project from a yaml file
cdsctl project integration import [ PROJECT-KEY ] FILENAME [flags]  Examples cdsctl integration import MY-PROJECT file.yml  Options  --force  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/platform/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/platform/import/</guid>
      <description>cdsctl project platform import Import a platform configuration on a project from a yaml file
Synopsis Import a platform configuration on a project from a yaml file
cdsctl project platform import [ PROJECT-KEY ] FILENAME [flags]  Examples cdsctl project platform import MY-PROJECT file.yml  Options  --force -h, --help help for import  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/import/</guid>
      <description>cdsctl worker model import Synopsis Available model type : - Docker images (&amp;ldquo;docker&amp;rdquo;) - Openstack image (&amp;ldquo;openstack&amp;rdquo;) - VSphere image (&amp;ldquo;vsphere&amp;rdquo;)
For admin: + For each type of model you have to indicate the main worker command to run your workflow (example: worker) + For Openstack and VSphere model you can indicate a precmd and postcmd that will execute before and after the main worker command
cdsctl worker model import PATH .</description>
    </item>
    
    <item>
      <title>import</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/import/</guid>
      <description>cdsctl workflow import Import a workflow
Synopsis In case you want to import just your workflow. Instead of use a local file you can also use an URL to your yaml file.
If you want to update also dependencies likes pipelines, applications or environments at same time you have to use workflow push instead workflow import.
cdsctl workflow import [ PROJECT-KEY ] PATH [flags]  Options  --force Override workflow if exists  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>init</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/init/</guid>
      <description>cdsctl workflow init Init a workflow
Synopsis Initialize a workflow from your current repository, this will read or create yml files and push them to CDS.
Documentation: https://ovh.github.io/cds/docs/tutorials/init_workflow_with_cdsctl/
cdsctl workflow init [PROJECT-KEY] [flags]  Options  --application string (Optional) Set the application name. If empty, it will deduce application name from the repository. --pipeline string (Optional) Set the root pipeline you want to use. If empty it will propose you to reuse of create a pipeline.</description>
    </item>
    
    <item>
      <title>install</title>
      <link>https://ovh.github.io/cds/docs/components/worker/key/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/key/install/</guid>
      <description>worker key install worker key install [--env-git] [--env] [--file destination-file] &amp;lt;key-name&amp;gt;
Synopsis Inside a step script you can install a SSH/PGP key generated in CDS in your ssh environment and return the PKEY variable (only for SSH)
So if you want to update your PKEY variable, which is the variable with the path to the SSH private key you just can write PKEY=$(worker key install proj-mykey)` (only for SSH)</description>
    </item>
    
    <item>
      <title>instances</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/template/instances/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/template/instances/</guid>
      <description>cdsctl template instances Get instances for a CDS workflow template
Synopsis Get instances for a CDS workflow template
cdsctl template instances [TEMPLATE-PATH] [flags]  Examples cdsctl template instances group-name/template-slug  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>integration</title>
      <link>https://ovh.github.io/cds/development/rest/integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/integration/</guid>
      <description> DELETE /integration/models/&amp;lt;name&amp;gt;    URL /integration/models/&amp;lt;name&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deleteIntegrationModelHandler    GET /integration/models/&amp;lt;name&amp;gt;    URL /integration/models/&amp;lt;name&amp;gt;     Method GET   Permissions Auth: true   Code getIntegrationModelHandler    GET /integration/models    URL /integration/models     Method GET   Permissions Auth: true   Code getIntegrationModelsHandler    POST /integration/models    URL /integration/models     Method POST   Permissions NeedAdmin: true - Auth: true   Code postIntegrationModelHandler    PUT /integration/models/&amp;lt;name&amp;gt;    URL /integration/models/&amp;lt;name&amp;gt;     Method PUT   Permissions NeedAdmin: true - Auth: true   Code putIntegrationModelHandler    </description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/builtin/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/builtin/list/</guid>
      <description>cdsctl action builtin list List CDS builtin actions
Synopsis List CDS builtin actions
cdsctl action builtin list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/list/</guid>
      <description>cdsctl action list List CDS actions
Synopsis List CDS actions
cdsctl action list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/broadcasts/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/broadcasts/list/</guid>
      <description>cdsctl admin broadcasts list List CDS broadcasts
Synopsis List CDS broadcasts
cdsctl admin broadcasts list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/database/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/database/list/</guid>
      <description>cdsctl admin database list List all CDS DB migrations
Synopsis List all CDS DB migrations
cdsctl admin database list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/list/</guid>
      <description>cdsctl admin hooks list List CDS Hooks Tasks
Synopsis List CDS Hooks Tasks
cdsctl admin hooks list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key --sort string Sort task by nb_executions_total,nb_executions_todo  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/list/</guid>
      <description>cdsctl admin integration-model list List CDS Integration models
Synopsis List CDS Integration models
cdsctl admin integration-model list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/migration/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/migration/list/</guid>
      <description>cdsctl admin migration list List all CDS migrations and their states
Synopsis List all CDS migrations and their states
cdsctl admin migration list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/list/</guid>
      <description>cdsctl admin platform-model list List CDS Platform models
Synopsis List CDS Platform models
cdsctl admin platform-model list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -h, --help help for list -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/plugins/list/</guid>
      <description>cdsctl admin plugins list List CDS Plugins
Synopsis List CDS Plugins
cdsctl admin plugins list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/services/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/services/list/</guid>
      <description>cdsctl admin services list List CDS services
Synopsis List CDS services
cdsctl admin services list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key -t, --type string Filter service by type: api, hatchery, hook, repository, vcs  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/keys/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/keys/list/</guid>
      <description>cdsctl application keys list List CDS application keys
Synopsis List CDS application keys
cdsctl application keys list [ PROJECT-KEY APPLICATION-NAME ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/list/</guid>
      <description>cdsctl application list List CDS applications
Synopsis List CDS applications
cdsctl application list [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/list/</guid>
      <description>cdsctl application variable list List CDS application variables
Synopsis List CDS application variables
cdsctl application variable list [ PROJECT-KEY APPLICATION-NAME ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/keys/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/keys/list/</guid>
      <description>cdsctl environment keys list List CDS environment keys
Synopsis List CDS environment keys
cdsctl environment keys list [ PROJECT-KEY ] ENV-NAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/list/</guid>
      <description>cdsctl environment list List CDS environments
Synopsis List CDS environments
cdsctl environment list [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/list/</guid>
      <description>cdsctl environment variable list List CDS environment variables
Synopsis List CDS environment variables
cdsctl environment variable list [ PROJECT-KEY ] ENV-NAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/list/</guid>
      <description>cdsctl group list List CDS groups
Synopsis List CDS groups
cdsctl group list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/user/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/user/list/</guid>
      <description>cdsctl group user list List users into a group
Synopsis List users into a group
cdsctl group user list GROUPNAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/pipeline/list/</guid>
      <description>cdsctl pipeline list List CDS pipelines
Synopsis List CDS pipelines
cdsctl pipeline list [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/integration/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/integration/list/</guid>
      <description>cdsctl project integration list List integrations available on a project
Synopsis List integrations available on a project
cdsctl project integration list [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/keys/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/keys/list/</guid>
      <description>cdsctl project keys list List CDS project keys
Synopsis List CDS project keys
cdsctl project keys list [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/list/</guid>
      <description>cdsctl project list List CDS projects
Synopsis List CDS projects
cdsctl project list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/platform/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/platform/list/</guid>
      <description>cdsctl project platform list List platforms available on a project
Synopsis List platforms available on a project
cdsctl project platform list [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -h, --help help for list -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/list/</guid>
      <description>cdsctl project variable list List CDS project variables
Synopsis List CDS project variables
cdsctl project variable list [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/template/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/template/list/</guid>
      <description>cdsctl template list Get all available workflow template from CDS
Synopsis Get all available workflow template from CDS
cdsctl template list [flags]  Examples cdsctl template list  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/token/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/token/list/</guid>
      <description>cdsctl token list List tokens from group
Synopsis You can list tokens linked to a groups to know the id of a token to delete it or know the creator of this token.
Pay attention, if you mention a group, you must be an administrator of the group to launch this command
cdsctl token list [GROUPNAME] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/user/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/user/list/</guid>
      <description>cdsctl user list List CDS users
Synopsis List CDS users
cdsctl user list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/worker/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/worker/list/</guid>
      <description>cdsctl worker list List CDS workers
Synopsis List CDS workers
cdsctl worker list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/list/</guid>
      <description>cdsctl worker model list List CDS worker models
Synopsis List CDS worker models
cdsctl worker model list [flags]  Options  -b, --binary string Use this flag to filter worker model list by its binary capabilities --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key -s, --state string Use this flag to filter worker model by his state (disabled|error|register|deprecated)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/artifact/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/artifact/list/</guid>
      <description>cdsctl workflow artifact list List artifacts of one Workflow Run
Synopsis List artifacts of one Workflow Run
cdsctl workflow artifact list [ PROJECT-KEY WORKFLOW-NAME ] NUMBER [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/list/</guid>
      <description>cdsctl workflow list List CDS workflows
Synopsis List CDS workflows
cdsctl workflow list [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/logs/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/logs/list/</guid>
      <description>cdsctl workflow logs list List logs from a workflow run
Synopsis List logs from a workflow run. There on log file for each step.
# list all logs files from projet KEY, with workflow named WD on latest run $ cdsctl workflow logs list KEY WF # list all logs files from projet KEY, with workflow named WD on run 1 $ cdsctl workflow logs list KEY WF 1  cdsctl workflow logs list [ PROJECT-KEY WORKFLOW-NAME ] [RUN-NUMBER]  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/xtoken/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/xtoken/list/</guid>
      <description>cdsctl xtoken list List your access tokens
Synopsis List your access tokens
cdsctl xtoken list [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -g, --group strings filter by group -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>listen</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/events/listen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/events/listen/</guid>
      <description> cdsctl events listen Listen CDS events
Synopsis Listen CDS events
cdsctl events listen  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl events - Listen CDS Events  </description>
    </item>
    
    <item>
      <title>login</title>
      <link>https://ovh.github.io/cds/development/rest/login/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/login/</guid>
      <description> LoginUser take user credentials and creates a auth token    URL /login     Method POST   Permissions Auth: false   Code loginUserHandler    POST /login/callback    URL /login/callback     Method POST   Permissions Auth: false   Code PanicDump    </description>
    </item>
    
    <item>
      <title>login</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/login/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/login/</guid>
      <description>cdsctl login Login to CDS
Synopsis Login to CDS
cdsctl login [flags]  Options  -H, --api-url string CDS API URL --env Display the commands to set up the environment for the cds client -p, --password string CDS Password -u, --username string CDS Username  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>me</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/user/me/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/user/me/</guid>
      <description>cdsctl user me Show Current CDS user details
Synopsis Show Current CDS user details
cdsctl user me [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>mon</title>
      <link>https://ovh.github.io/cds/development/rest/mon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/mon/</guid>
      <description> GET /mon/db/migrate    URL /mon/db/migrate     Method GET   Permissions NeedAdmin: true - Auth: true   Code getMonDBStatusMigrateHandler    GET /mon/errors/&amp;lt;uuid&amp;gt;    URL /mon/errors/&amp;lt;uuid&amp;gt;     Method GET   Permissions NeedAdmin: true - Auth: true   Code getErrorHandler    GET /mon/panic/&amp;lt;uuid&amp;gt;    URL /mon/panic/&amp;lt;uuid&amp;gt;     Method GET   Permissions Auth: false   Code getPanicDumpHandler    GET /mon/smtp/ping    URL /mon/smtp/ping     Method GET   Permissions Auth: true - Auth: true   Code smtpPingHandler    GET /mon/status    URL /mon/status     Method GET   Permissions Auth: false   Code statusHandler    </description>
    </item>
    
    <item>
      <title>monitoring</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/monitoring/</guid>
      <description> cdsctl monitoring CDS monitoring
Synopsis CDS monitoring
cdsctl monitoring  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl - CDS Command line utility  </description>
    </item>
    
    <item>
      <title>new</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/xtoken/new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/xtoken/new/</guid>
      <description>cdsctl xtoken new Create a new access token
Synopsis Create a new access token
cdsctl xtoken new [flags]  Options  -d, --description string what is the purpose of this token -e, --expiration string expiration delay of the token (1d, 24h, 1440m, 86400s) (default &amp;quot;1d&amp;quot;) -g, --group strings define the scope of the token through groups  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>new</title>
      <link>https://ovh.github.io/cds/docs/components/engine/config/new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/config/new/</guid>
      <description>engine config new CDS configuration file assistant
Synopsis Generate the whole configuration file $ engine config new &amp;gt; conf.toml
you can compose your file configuration this will generate a file configuration containing api and hatchery:local µService $ engine config new api hatchery:local
For advanced usage, Debug and Tracing section can be generated as: $ engine config new debug tracing [µService(s)&amp;hellip;]
All options $ engine config new [debug] [tracing] [api] [hatchery:local] [hatchery:marathon] [hatchery:openstack] [hatchery:swarm] [hatchery:vsphere] [elasticsearch] [hooks] [vcs] [repositories] [migrate]</description>
    </item>
    
    <item>
      <title>notification</title>
      <link>https://ovh.github.io/cds/development/rest/notification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/notification/</guid>
      <description> GET /notification/state    URL /notification/state     Method GET   Permissions Auth: true   Code getUserNotificationStateValueHandler    GET /notification/type    URL /notification/type     Method GET   Permissions Auth: true   Code getUserNotificationTypeHandler    </description>
    </item>
    
    <item>
      <title>parameter</title>
      <link>https://ovh.github.io/cds/development/rest/parameter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/parameter/</guid>
      <description> GET /parameter/type    URL /parameter/type     Method GET   Permissions Auth: true   Code getParameterTypeHandler    </description>
    </item>
    
    <item>
      <title>pipeline</title>
      <link>https://ovh.github.io/cds/development/rest/pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/pipeline/</guid>
      <description> GET /pipeline/type    URL /pipeline/type     Method GET   Permissions Auth: true   Code getPipelineTypeHandler    </description>
    </item>
    
    <item>
      <title>platform</title>
      <link>https://ovh.github.io/cds/development/rest/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/platform/</guid>
      <description> GET /platform/models    URL /platform/models     Method GET   Permissions Auth: true   Code getPlatformModelsHandler    POST /platform/models    URL /platform/models     Method POST   Permissions NeedAdmin: true - Auth: true   Code postPlatformModelHandler    GET /platform/models/&amp;lt;name&amp;gt;    URL /platform/models/&amp;lt;name&amp;gt;     Method GET   Permissions Auth: true   Code getPlatformModelHandler    PUT /platform/models/&amp;lt;name&amp;gt;    URL /platform/models/&amp;lt;name&amp;gt;     Method PUT   Permissions NeedAdmin: true - Auth: true   Code putPlatformModelHandler    DELETE /platform/models/&amp;lt;name&amp;gt;    URL /platform/models/&amp;lt;name&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deletePlatformModelHandler    </description>
    </item>
    
    <item>
      <title>plugin</title>
      <link>https://ovh.github.io/cds/development/rest/plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/plugin/</guid>
      <description> PUT /plugin    URL /plugin     Method PUT   Permissions NeedAdmin: true - Auth: true   Code updatePluginHandler    POST /plugin    URL /plugin     Method POST   Permissions NeedAdmin: true - Auth: true   Code addPluginHandler    DELETE /plugin/&amp;lt;name&amp;gt;    URL /plugin/&amp;lt;name&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deletePluginHandler    GET /plugin/download/&amp;lt;name&amp;gt;    URL /plugin/download/&amp;lt;name&amp;gt;     Method GET   Permissions Auth: true   Code downloadPluginHandler    </description>
    </item>
    
    <item>
      <title>plugin-archive</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-archive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-archive/</guid>
      <description> This is a plugin to compress or uncompress an archive. Supported formats: .zip, .tar, .tar.gz, .tar.bz2, .tar.xz, .tar.lz4, .tar.sz, and .rar (extract-only)
Parameters  action: &amp;ldquo;compress&amp;rdquo; or &amp;ldquo;uncompress&amp;rdquo; an archive destination: The destination path source: The source path  </description>
    </item>
    
    <item>
      <title>plugin-clair</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-clair/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-clair/</guid>
      <description> This is a plugin to run clair analysis
Parameters  image: Image to analyze  </description>
    </item>
    
    <item>
      <title>plugin-download</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-download/</guid>
      <description> This is a plugin to download file from URL
Parameters  filepath: The destination of your file to be copied headers: Specific headers to add to your request (&amp;ldquo;headerName&amp;rdquo;=&amp;ldquo;value&amp;rdquo; newline separated list) url: The url of your file  </description>
    </item>
    
    <item>
      <title>plugin-group-tmpl</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-group-tmpl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-group-tmpl/</guid>
      <description> This actions helps you generate a marathon group application file. It takes a config template file as a single application, and creates the group with the variables specified for each application in the applications files. Check documentation on text/template for more information https://golang.org/pkg/text/template.
Parameters  applications: Applications file variables config: Template file to use output: Output path for generated file (default to .out or just trimming .tpl extension)  </description>
    </item>
    
    <item>
      <title>plugin-kafka-publish</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-kafka-publish/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-kafka-publish/</guid>
      <description>This action helps you to send data through Kafka across every network.
You are able to send a custom &amp;ldquo;message&amp;rdquo; file and all the artifacts you want: there is no file size limit. To improve security, you can encrypt the files content with a GPG Key. From the consumer side, you will need to decrypt files content with you GPG private key and your passphrase.
This action is a CDS Plugin packaged as a single binary file you can download and use to listen and consume data coming from CDS through Kafka.</description>
    </item>
    
    <item>
      <title>plugin-marathon</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-marathon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-marathon/</guid>
      <description>This action helps you to deploy on Mesos/Marathon. Provide a marathon.json file to configure deployment.
Your marathon.json file can be templated with cds variables &amp;ldquo;{{.cds.variables}}&amp;rdquo;. Enable &amp;ldquo;waitForDeployment&amp;rdquo; option to ensure deployment is successful.
Parameters  configuration: Marathon application configuration file (json format) insecureSkipVerify: Skip SSL Verify if you want to use self-signed certificate password: Marathon Password (please use project, application or environment variables) timeout: Marathon deployment timeout (seconds). Used only if &amp;ldquo;waitForDeployment&amp;rdquo; is true.</description>
    </item>
    
    <item>
      <title>plugin-npm-audit-parser</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-npm-audit-parser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-npm-audit-parser/</guid>
      <description> This is a plugin to parse npm audit report
Parameters  file: Path to audit file (generally generated by npm audit &amp;ndash;json &amp;gt;{{.cds.workspace}}/audit.json for example)  </description>
    </item>
    
    <item>
      <title>plugin-ssh-cmd</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-ssh-cmd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-ssh-cmd/</guid>
      <description> This plugin helps you to run cmd on remote server over ssh.
Parameters  command: Command commandTimeout: Command Timeout (seconds) hostnames: Hostnames (comma separated values) privateKey: SSH RSA private key timeout: Timeout (seconds) username: Username  </description>
    </item>
    
    <item>
      <title>plugin-tmpl</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-tmpl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-tmpl/</guid>
      <description> This action helps you generates a file using a template file and text/template golang package.
Check documentation on text/template for more information https://golang.org/pkg/text/template.
Parameters  file: Template file to use output: Output path for generated file (default to .out or just trimming .tpl extension) params: Parameters to pass on the template file (key=value newline separated list)  </description>
    </item>
    
    <item>
      <title>plugin-venom</title>
      <link>https://ovh.github.io/cds/docs/actions/plugin-venom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/actions/plugin-venom/</guid>
      <description>This plugin helps you to run venom. Venom: https://github.com/ovh/venom.
Add an extra step of type junit on your job to view tests results on CDS UI.
Parameters  exclude: Exclude some files, one file per line loglevel: Log Level: debug, info, warn or error output: Directory where output xunit result file parallel: Launch Test Suites in parallel. Enter here number of routines path: Path containers yml venom files. Format: adirectory/, .</description>
    </item>
    
    <item>
      <title>project</title>
      <link>https://ovh.github.io/cds/development/rest/project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/project/</guid>
      <description>DELETE /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/deployment/config/&amp;lt;integration&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/deployment/config/&amp;lt;integration&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteApplicationDeploymentStrategyConfigHandler    DELETE /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/keys/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/keys/&amp;lt;name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteKeyInApplicationHandler    DELETE /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteVariableFromApplicationHandler    DELETE /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteApplicationHandler    DELETE /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/keys/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/keys/&amp;lt;name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteKeyInEnvironmentHandler    DELETE /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteVariableFromEnvironmentHandler    DELETE /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteEnvironmentHandler    DELETE /project/&amp;lt;project-key&amp;gt;/group/&amp;lt;group&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/group/&amp;lt;group&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteGroupFromProjectHandler    DELETE /project/&amp;lt;project-key&amp;gt;/integrations/&amp;lt;integrationName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/integrations/&amp;lt;integrationName&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteProjectIntegrationHandler    DELETE /project/&amp;lt;project-key&amp;gt;/keys/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/keys/&amp;lt;name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteKeyInProjectHandler    DELETE /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/parameter/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/parameter/&amp;lt;name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteParameterFromPipelineHandler    DELETE /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;/job/&amp;lt;jobID&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;/job/&amp;lt;jobID&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteJobHandler    DELETE /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteStageHandler    DELETE /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;     Method DELETE   Permissions Auth: true   Code deletePipelineHandler    DELETE /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteRepositoriesManagerHandler    DELETE /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteVariableFromProjectHandler    DELETE /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/branch/&amp;lt;branch&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/branch/&amp;lt;branch&amp;gt;     Method DELETE   Permissions NeedService: - Auth: true   Code deleteWorkflowRunsBranchHandler    DELETE /project/&amp;lt;project-key&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteProjectHandler    DEPRECATED    URL /project/&amp;lt;project-key&amp;gt;/notifications     Method GET   Permissions Auth: true   Code getProjectNotificationsHandler    GET /project/&amp;lt;project-key&amp;gt;/action    URL /project/&amp;lt;project-key&amp;gt;/action     Method GET   Permissions Auth: true   Code getActionsForProjectHandler    GET /project/&amp;lt;project-key&amp;gt;/all/keys    URL /project/&amp;lt;project-key&amp;gt;/all/keys     Method GET   Permissions Auth: true   Code getAllKeysProjectHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/deployment/config/&amp;lt;integration&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/deployment/config/&amp;lt;integration&amp;gt;     Method GET   Permissions Auth: true   Code getApplicationDeploymentStrategyConfigHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/deployment/config    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/deployment/config     Method GET   Permissions Auth: true   Code getApplicationDeploymentStrategiesConfigHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/keys    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/keys     Method GET   Permissions Auth: true   Code getKeysInApplicationHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/metrics/&amp;lt;metricName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/metrics/&amp;lt;metricName&amp;gt;     Method GET   Permissions Auth: true   Code getApplicationMetricHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;/audit    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;/audit     Method GET   Permissions Auth: true   Code getVariableAuditInApplicationHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;     Method GET   Permissions Auth: true   Code getVariableInApplicationHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/audit    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/audit     Method GET   Permissions Auth: true   Code getVariablesAuditInApplicationHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable     Method GET   Permissions Auth: true   Code getVariablesInApplicationHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/vcsinfos    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/vcsinfos     Method GET   Permissions Auth: true   Code getApplicationVCSInfosHandler    GET /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;     Method GET   Permissions Auth: true   Code getApplicationHandler    GET /project/&amp;lt;project-key&amp;gt;/applications    URL /project/&amp;lt;project-key&amp;gt;/applications     Method GET   Permissions Auth: true   Code getApplicationsHandler    GET /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/keys    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/keys     Method GET   Permissions Auth: true   Code getKeysInEnvironmentHandler    GET /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/usage    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/usage     Method GET   Permissions Auth: true   Code getEnvironmentUsageHandler    GET /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;/audit    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;/audit     Method GET   Permissions Auth: true   Code getVariableAuditInEnvironmentHandler    GET /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;     Method GET   Permissions Auth: true   Code getVariableInEnvironmentHandler    GET /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable     Method GET   Permissions Auth: true   Code getVariablesInEnvironmentHandler    GET /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;     Method GET   Permissions Auth: true   Code getEnvironmentHandler    GET /project/&amp;lt;project-key&amp;gt;/environment    URL /project/&amp;lt;project-key&amp;gt;/environment     Method GET   Permissions Auth: true   Code getEnvironmentsHandler    GET /project/&amp;lt;project-key&amp;gt;/export/application/&amp;lt;applicationName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/export/application/&amp;lt;applicationName&amp;gt;     Method GET   Permissions Auth: true   Code getApplicationExportHandler    GET /project/&amp;lt;project-key&amp;gt;/export/environment/&amp;lt;environmentName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/export/environment/&amp;lt;environmentName&amp;gt;     Method GET   Permissions Auth: true   Code getEnvironmentExportHandler    GET /project/&amp;lt;project-key&amp;gt;/export/pipeline/&amp;lt;pipelineKey&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/export/pipeline/&amp;lt;pipelineKey&amp;gt;     Method GET   Permissions Auth: true   Code getPipelineExportHandler    GET /project/&amp;lt;project-key&amp;gt;/export/workflows/&amp;lt;workflow-name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/export/workflows/&amp;lt;workflow-name&amp;gt;     Method GET   Permissions Auth: true   Code getWorkflowExportHandler    GET /project/&amp;lt;project-key&amp;gt;/integrations/&amp;lt;integrationName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/integrations/&amp;lt;integrationName&amp;gt;     Method GET   Permissions AllowServices: true - Auth: true   Code getProjectIntegrationHandler    GET /project/&amp;lt;project-key&amp;gt;/integrations    URL /project/&amp;lt;project-key&amp;gt;/integrations     Method GET   Permissions Auth: true   Code getProjectIntegrationsHandler    GET /project/&amp;lt;project-key&amp;gt;/keys    URL /project/&amp;lt;project-key&amp;gt;/keys     Method GET   Permissions Auth: true   Code getKeysInProjectHandler    GET /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/audits    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/audits     Method GET   Permissions Auth: true   Code getPipelineAuditHandler    GET /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/parameter    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/parameter     Method GET   Permissions Auth: true   Code getParametersInPipelineHandler    GET /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;     Method GET   Permissions Auth: true   Code getStageHandler    GET /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;     Method GET   Permissions Auth: true   Code getPipelineHandler    GET /project/&amp;lt;project-key&amp;gt;/pipeline    URL /project/&amp;lt;project-key&amp;gt;/pipeline     Method GET   Permissions Auth: true   Code getPipelinesHandler    GET /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/repo    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/repo     Method GET   Permissions Auth: true   Code getRepoFromRepositoriesManagerHandler    GET /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/repos    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/repos     Method GET   Permissions Auth: true   Code getReposFromRepositoriesManagerHandler    GET /project/&amp;lt;project-key&amp;gt;/repositories_manager    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager     Method GET   Permissions Auth: true   Code getRepositoriesManagerForProjectHandler    GET /project/&amp;lt;project-key&amp;gt;/runs    URL /project/&amp;lt;project-key&amp;gt;/runs     Method GET   Permissions Auth: true   Code getWorkflowAllRunsHandler    GET /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/cache/&amp;lt;tag&amp;gt;/url    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/cache/&amp;lt;tag&amp;gt;/url     Method GET   Permissions NeedWorker: - Auth: true   Code getPullCacheWithTempURLHandler    GET /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/cache/&amp;lt;tag&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/cache/&amp;lt;tag&amp;gt;     Method GET   Permissions NeedWorker: - Auth: true   Code getPullCacheHandler    GET /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;     Method GET   Permissions Auth: false   Code getArtifactsStoreHandler    GET /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;/audit    URL /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;/audit     Method GET   Permissions Auth: true   Code getVariableAuditInProjectHandler    GET /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;     Method GET   Permissions Auth: true   Code getVariableInProjectHandler    GET /project/&amp;lt;project-key&amp;gt;/variable/audit    URL /project/&amp;lt;project-key&amp;gt;/variable/audit     Method GET   Permissions Auth: true   Code getVariablesAuditInProjectnHandler    GET /project/&amp;lt;project-key&amp;gt;/variable    URL /project/&amp;lt;project-key&amp;gt;/variable     Method GET   Permissions Auth: true   Code getVariablesInProjectHandler    GET /project/&amp;lt;project-key&amp;gt;/worker/model    URL /project/&amp;lt;project-key&amp;gt;/worker/model     Method GET   Permissions Auth: true   Code getWorkerModelsForProjectHandler    GET /project/&amp;lt;project-key&amp;gt;/workflow/&amp;lt;workflow-name&amp;gt;/node/&amp;lt;nodeID&amp;gt;/hook/model    URL /project/&amp;lt;project-key&amp;gt;/workflow/&amp;lt;workflow-name&amp;gt;/node/&amp;lt;nodeID&amp;gt;/hook/model     Method GET   Permissions Auth: true   Code getWorkflowHookModelsHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/artifact/&amp;lt;artifactId&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/artifact/&amp;lt;artifactId&amp;gt;     Method GET   Permissions Auth: true   Code getDownloadArtifactHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/ascode/&amp;lt;uuid&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/ascode/&amp;lt;uuid&amp;gt;     Method GET   Permissions Auth: true   Code getWorkflowAsCodeHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/hooks/&amp;lt;uuid&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/hooks/&amp;lt;uuid&amp;gt;     Method GET   Permissions Auth: true   Code getWorkflowHookHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/node/&amp;lt;nodeID&amp;gt;/triggers/condition    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/node/&amp;lt;nodeID&amp;gt;/triggers/condition     Method GET   Permissions Auth: true   Code getWorkflowTriggerConditionHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/artifacts    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/artifacts     Method GET   Permissions Auth: true   Code getWorkflowRunArtifactsHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/hooks/&amp;lt;hookRunID&amp;gt;/details    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/hooks/&amp;lt;hookRunID&amp;gt;/details     Method GET   Permissions NeedService: - Auth: true   Code getWorkflowJobHookDetailsHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/&amp;lt;nodeID&amp;gt;/history    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/&amp;lt;nodeID&amp;gt;/history     Method GET   Permissions Auth: true   Code getWorkflowNodeRunHistoryHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/job/&amp;lt;runJobId&amp;gt;/info    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/job/&amp;lt;runJobId&amp;gt;/info     Method GET   Permissions Auth: true   Code getWorkflowNodeRunJobSpawnInfosHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/job/&amp;lt;runJobId&amp;gt;/log/service    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/job/&amp;lt;runJobId&amp;gt;/log/service     Method GET   Permissions Auth: true   Code getWorkflowNodeRunJobServiceLogsHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/job/&amp;lt;runJobId&amp;gt;/step/&amp;lt;stepOrder&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/job/&amp;lt;runJobId&amp;gt;/step/&amp;lt;stepOrder&amp;gt;     Method GET   Permissions Auth: true   Code getWorkflowNodeRunJobStepHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id     Method GET   Permissions Auth: true   Code getWorkflowNodeRunHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;     Method GET   Permissions AllowServices: true - Auth: true   Code getWorkflowRunHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/latest    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/latest     Method GET   Permissions Auth: true   Code getLatestWorkflowRunHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/tags    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/tags     Method GET   Permissions Auth: true   Code getWorkflowRunTagsHandler    GET /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs     Method GET   Permissions Auth: true   Code getWorkflowRunsHandler    GET /project/&amp;lt;project-key&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;     Method GET   Permissions Auth: true   Code getProjectHandler    GET /project    URL /project     Method GET   Permissions Auth: true   Code getProjectsHandler    Make the workflow as code    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/ascode     Method POST   Permissions Auth: true   Code postWorkflowAsCodeHandler    POST /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/clone    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/clone     Method POST   Permissions Auth: true   Code cloneApplicationHandler    POST /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/deployment/config/&amp;lt;integration&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/deployment/config/&amp;lt;integration&amp;gt;     Method POST   Permissions Auth: true   Code postApplicationDeploymentStrategyConfigHandler    POST /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/keys    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/keys     Method POST   Permissions Auth: true   Code addKeyInApplicationHandler    POST /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/metadata/&amp;lt;metadata&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/metadata/&amp;lt;metadata&amp;gt;     Method POST   Permissions Auth: true   Code postApplicationMetadataHandler    POST /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;     Method POST   Permissions Auth: true   Code addVariableInApplicationHandler    POST /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/vulnerability/&amp;lt;id&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/vulnerability/&amp;lt;id&amp;gt;     Method POST   Permissions Auth: true   Code postVulnerabilityHandler    POST /project/&amp;lt;project-key&amp;gt;/applications    URL /project/&amp;lt;project-key&amp;gt;/applications     Method POST   Permissions Auth: true   Code addApplicationHandler    POST /project/&amp;lt;project-key&amp;gt;/encrypt    URL /project/&amp;lt;project-key&amp;gt;/encrypt     Method POST   Permissions Auth: true   Code postEncryptVariableHandler    POST /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/clone/&amp;lt;cloneName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/clone/&amp;lt;cloneName&amp;gt;     Method POST   Permissions Auth: true   Code cloneEnvironmentHandler    POST /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/keys    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/keys     Method POST   Permissions Auth: true   Code addKeyInEnvironmentHandler    POST /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;     Method POST   Permissions Auth: true   Code addVariableInEnvironmentHandler    POST /project/&amp;lt;project-key&amp;gt;/environment/import/&amp;lt;environmentName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/import/&amp;lt;environmentName&amp;gt;     Method POST   Permissions Auth: true   Code importIntoEnvironmentHandler    POST /project/&amp;lt;project-key&amp;gt;/environment/import    URL /project/&amp;lt;project-key&amp;gt;/environment/import     Method POST   Permissions Auth: true   Code importNewEnvironmentHandler    POST /project/&amp;lt;project-key&amp;gt;/environment    URL /project/&amp;lt;project-key&amp;gt;/environment     Method POST   Permissions Auth: true   Code addEnvironmentHandler    POST /project/&amp;lt;project-key&amp;gt;/group/import    URL /project/&amp;lt;project-key&amp;gt;/group/import     Method POST   Permissions Auth: true   Code importGroupsInProjectHandler    POST /project/&amp;lt;project-key&amp;gt;/group    URL /project/&amp;lt;project-key&amp;gt;/group     Method POST   Permissions Auth: true   Code addGroupInProjectHandler    POST /project/&amp;lt;project-key&amp;gt;/import/application    URL /project/&amp;lt;project-key&amp;gt;/import/application     Method POST   Permissions Auth: true   Code postApplicationImportHandler    POST /project/&amp;lt;project-key&amp;gt;/import/pipeline    URL /project/&amp;lt;project-key&amp;gt;/import/pipeline     Method POST   Permissions Auth: true   Code importPipelineHandler    POST /project/&amp;lt;project-key&amp;gt;/import/workflows    URL /project/&amp;lt;project-key&amp;gt;/import/workflows     Method POST   Permissions Auth: true   Code postWorkflowImportHandler    POST /project/&amp;lt;project-key&amp;gt;/integrations    URL /project/&amp;lt;project-key&amp;gt;/integrations     Method POST   Permissions Auth: true   Code postProjectIntegrationHandler    POST /project/&amp;lt;project-key&amp;gt;/keys    URL /project/&amp;lt;project-key&amp;gt;/keys     Method POST   Permissions Auth: true   Code addKeyInProjectHandler    POST /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/parameter/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/parameter/&amp;lt;name&amp;gt;     Method POST   Permissions Auth: true   Code addParameterInPipelineHandler    POST /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/rollback/&amp;lt;auditID&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/rollback/&amp;lt;auditID&amp;gt;     Method POST   Permissions Auth: true   Code postPipelineRollbackHandler    POST /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;/job    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;/job     Method POST   Permissions Auth: true   Code addJobToStageHandler    POST /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/move    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/move     Method POST   Permissions Auth: true   Code moveStageHandler    POST /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage     Method POST   Permissions Auth: true   Code addStageHandler    POST /project/&amp;lt;project-key&amp;gt;/pipeline    URL /project/&amp;lt;project-key&amp;gt;/pipeline     Method POST   Permissions Auth: true   Code addPipelineHandler    POST /project/&amp;lt;project-key&amp;gt;/preview/pipeline    URL /project/&amp;lt;project-key&amp;gt;/preview/pipeline     Method POST   Permissions Auth: true   Code postPipelinePreviewHandler    POST /project/&amp;lt;project-key&amp;gt;/preview/workflows    URL /project/&amp;lt;project-key&amp;gt;/preview/workflows     Method POST   Permissions Auth: true   Code postWorkflowPreviewHandler    POST /project/&amp;lt;project-key&amp;gt;/push/workflows    URL /project/&amp;lt;project-key&amp;gt;/push/workflows     Method POST   Permissions Auth: true   Code postWorkflowPushHandler    POST /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/application/&amp;lt;applicationName&amp;gt;/attach    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/application/&amp;lt;applicationName&amp;gt;/attach     Method POST   Permissions Auth: true   Code attachRepositoriesManagerHandler    POST /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/application/&amp;lt;applicationName&amp;gt;/detach    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/application/&amp;lt;applicationName&amp;gt;/detach     Method POST   Permissions Auth: true   Code detachRepositoriesManagerHandler    POST /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/authorize/basicauth    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/authorize/basicauth     Method POST   Permissions Auth: true   Code repositoriesManagerAuthorizeBasicHandler    POST /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/authorize/callback    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/authorize/callback     Method POST   Permissions Auth: true   Code repositoriesManagerAuthorizeCallbackHandler    POST /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/authorize    URL /project/&amp;lt;project-key&amp;gt;/repositories_manager/&amp;lt;name&amp;gt;/authorize     Method POST   Permissions Auth: true   Code repositoriesManagerAuthorizeHandler    POST /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;     Method POST   Permissions Auth: true   Code addVariableInProjectHandler    POST /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/ascode/resync/pr    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/ascode/resync/pr     Method POST   Permissions Auth: true   Code postResyncPRWorkflowAsCodeHandler    POST /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/hooks/&amp;lt;hookRunID&amp;gt;/callback    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/hooks/&amp;lt;hookRunID&amp;gt;/callback     Method POST   Permissions AllowServices: true - Auth: true   Code postWorkflowJobHookCallbackHandler    POST /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/release    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/release     Method POST   Permissions Auth: true   Code releaseApplicationWorkflowHandler    POST /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/resync    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/resync     Method POST   Permissions Auth: true   Code resyncWorkflowRunHandler    POST /project    URL /project     Method POST   Permissions Auth: true   Code addProjectHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/artifact/&amp;lt;ref&amp;gt;/url/callback    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/artifact/&amp;lt;ref&amp;gt;/url/callback     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobArtifactWithTempURLCallbackHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/artifact/&amp;lt;ref&amp;gt;/url    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/artifact/&amp;lt;ref&amp;gt;/url     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobArtifacWithTempURLHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/artifact/&amp;lt;ref&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/artifact/&amp;lt;ref&amp;gt;     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobArtifactHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/cache/&amp;lt;tag&amp;gt;/url    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/cache/&amp;lt;tag&amp;gt;/url     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postPushCacheWithTempURLHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/cache/&amp;lt;tag&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/cache/&amp;lt;tag&amp;gt;     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postPushCacheHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/staticfiles/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/storage/&amp;lt;integrationName&amp;gt;/staticfiles/&amp;lt;name&amp;gt;     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobStaticFilesHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/stop    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/nodes/node-run-id/stop     Method POSTEXECUTE   Permissions Auth: true   Code stopWorkflowNodeRunHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/stop    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/stop     Method POSTEXECUTE   Permissions Auth: true   Code stopWorkflowRunHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/vcs/resync    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/vcs/resync     Method POSTEXECUTE   Permissions Auth: true   Code postResyncVCSWorkflowRunHandler    POSTEXECUTE /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs     Method POSTEXECUTE   Permissions AllowServices: true - Auth: true   Code postWorkflowRunHandler    PUT /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/variable/&amp;lt;name&amp;gt;     Method PUT   Permissions Auth: true   Code updateVariableInApplicationHandler    PUT /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;     Method PUT   Permissions Auth: true   Code updateApplicationHandler    PUT /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;/variable/&amp;lt;name&amp;gt;     Method PUT   Permissions Auth: true   Code updateVariableInEnvironmentHandler    PUT /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/environment/&amp;lt;environmentName&amp;gt;     Method PUT   Permissions Auth: true   Code updateEnvironmentHandler    PUT /project/&amp;lt;project-key&amp;gt;/group/&amp;lt;group&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/group/&amp;lt;group&amp;gt;     Method PUT   Permissions Auth: true   Code updateGroupRoleOnProjectHandler    PUT /project/&amp;lt;project-key&amp;gt;/import/pipeline/&amp;lt;pipelineKey&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/import/pipeline/&amp;lt;pipelineKey&amp;gt;     Method PUT   Permissions Auth: true   Code putImportPipelineHandler    PUT /project/&amp;lt;project-key&amp;gt;/import/workflows/&amp;lt;workflow-name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/import/workflows/&amp;lt;workflow-name&amp;gt;     Method PUT   Permissions Auth: true   Code putWorkflowImportHandler    PUT /project/&amp;lt;project-key&amp;gt;/integrations/&amp;lt;integrationName&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/integrations/&amp;lt;integrationName&amp;gt;     Method PUT   Permissions Auth: true   Code putProjectIntegrationHandler    PUT /project/&amp;lt;project-key&amp;gt;/labels    URL /project/&amp;lt;project-key&amp;gt;/labels     Method PUT   Permissions Auth: true   Code putProjectLabelsHandler    PUT /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/parameter/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/parameter/&amp;lt;name&amp;gt;     Method PUT   Permissions Auth: true   Code updateParameterInPipelineHandler    PUT /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;/job/&amp;lt;jobID&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;/job/&amp;lt;jobID&amp;gt;     Method PUT   Permissions Auth: true   Code updateJobHandler    PUT /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;/stage/&amp;lt;stageID&amp;gt;     Method PUT   Permissions Auth: true   Code updateStageHandler    PUT /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/pipeline/&amp;lt;pipelineKey&amp;gt;     Method PUT   Permissions Auth: true   Code updatePipelineHandler    PUT /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;/variable/&amp;lt;name&amp;gt;     Method PUT   Permissions Auth: true   Code updateVariableInProjectHandler    PUT /project/&amp;lt;project-key&amp;gt;    URL /project/&amp;lt;project-key&amp;gt;     Method PUT   Permissions Auth: true   Code updateProjectHandler    Pull is only in yaml    URL /project/&amp;lt;project-key&amp;gt;/pull/workflows/&amp;lt;workflow-name&amp;gt;     Method GET   Permissions Auth: true   Code getWorkflowPullHandler    TODO Clean old workflow structure    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/&amp;lt;number&amp;gt;/&amp;lt;nodeName&amp;gt;/commits     Method GET   Permissions Auth: true   Code getWorkflowCommitsHandler    deleteWorkflowGroup delete permission for a group on the workflow    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/groups/&amp;lt;group-name&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteWorkflowGroupHandler    deleteWorkflowIcon updates a workflow    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/icon     Method DELETE   Permissions Auth: true   Code deleteWorkflowIconHandler    deleteWorkflowLabel handler to unlink a label to a workflow    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/label/&amp;lt;labelID&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteWorkflowLabelHandler    getWorkflow returns a full workflow    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;     Method GET   Permissions Auth: true   Code getWorkflowHandler    getWorkflowRunNum returns the last run number for the given workflow    URL /project/&amp;lt;project-key&amp;gt;/workflows/&amp;lt;workflow-name&amp;gt;/runs/num     Method GET   Permissions Auth: true   Code getWorkflowRunNumHandler    getWorkflows returns ID and name of workflows for a given project/user    URL /project/&amp;lt;project-key&amp;gt;/workflows     Method GET   Permissions Auth: true   Code getWorkflowsHandler    import an environment yml file    URL /project/&amp;lt;project-key&amp;gt;/import/environment     Method POST   Query Parameter force=true or false.</description>
    </item>
    
    <item>
      <title>pull</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/template/pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/template/pull/</guid>
      <description>cdsctl template pull Pull CDS workflow template
Synopsis Pull CDS workflow template
cdsctl template pull [TEMPLATE-PATH] [flags]  Examples cdsctl template pull group-name/template-slug  Options  --force Force, may override files -d, --output-dir string Output directory (default &amp;quot;.cds&amp;quot;) --quiet If true, do not output filename created  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>pull</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/pull/</guid>
      <description>cdsctl workflow pull Pull a workflow
Synopsis Pull a workflow
cdsctl workflow pull [ PROJECT-KEY WORKFLOW-NAME ] [flags]  Options  --force Force, may override files -d, --output-dir string Output directory (default &amp;quot;.cds&amp;quot;) --quiet If true, do not output filename created --with-permissions Export permissions  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>pull</title>
      <link>https://ovh.github.io/cds/docs/components/worker/cache/pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/cache/pull/</guid>
      <description>worker cache pull worker cache pull tagValue
Synopsis Inside a project, you can fetch a cache from your worker with a tag
worker cache pull &amp;lt;tagValue&amp;gt;  If you push a cache with:
worker cache push latest {{.cds.workspace}}/pathToUpload  The command:
worker cache pull latest  will create the directory {{.cds.workspace}}/pathToUpload with the content of the cache
If you want to push a cache into a storage integration:
worker cache push latest --from=MyStorageIntegration {{.</description>
    </item>
    
    <item>
      <title>purge</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/purge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/purge/</guid>
      <description> cdsctl admin hooks purge Delete all executions for a task
Synopsis Delete all executions for a task
cdsctl admin hooks purge UUID  Examples cdsctl admin hooks purge 5178ce1f-2f76-45c5-a203-58c10c3e2c73  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin hooks - Manage CDS Hooks tasks  </description>
    </item>
    
    <item>
      <title>push</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/template/push/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/template/push/</guid>
      <description>cdsctl template push Push CDS workflow template
Synopsis Push CDS workflow template
cdsctl template push YAML-FILE ... [flags]  Examples cdsctl template push my-template.yml workflow.yml 1.pipeline.yml  Options  --skip-update-files Useful if you don&#39;t want to update yaml files after pushing the template.  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>push</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/push/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/push/</guid>
      <description>cdsctl workflow push Push a workflow
Synopsis Useful when you want to push a workflow and his dependencies (pipelines, applications, environments)
For example if you have a workflow with pipelines build and tests you can push your workflow and pipelines with
cdsctl workflow push tests.pip.yml build.pip.yml myWorkflow.yml  cdsctl workflow push [ PROJECT-KEY ] YAML-FILE ... [flags]  Options  --skip-update-files Useful if you don&#39;t want to update yaml files after pushing the workflow.</description>
    </item>
    
    <item>
      <title>push</title>
      <link>https://ovh.github.io/cds/docs/components/worker/cache/push/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/cache/push/</guid>
      <description> worker cache push worker cache push tagValue {{.cds.workspace}}/pathToUpload
Synopsis Inside a project, you can create a cache from your worker with a tag (useful for vendors for example) worker cache push  dir/file
You can use you storage integration: worker cache push &amp;ndash;destination=MyStorageIntegration  dir/file
worker cache push [flags]  Examples worker cache push {{.cds.workflow}}-{{.cds.version}} {{.cds.workspace}}/pathToUpload  Options  --destination string optional. Your storage integration name  SEE ALSO  worker cache -  </description>
    </item>
    
    <item>
      <title>queue</title>
      <link>https://ovh.github.io/cds/development/rest/queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/queue/</guid>
      <description> DELETE /queue/workflows/&amp;lt;id&amp;gt;/book    URL /queue/workflows/&amp;lt;id&amp;gt;/book     Method DELETE   Permissions NeedHatchery: - Auth: true   Code deleteBookWorkflowJobHandler    GET /queue/workflows/&amp;lt;id&amp;gt;/infos    URL /queue/workflows/&amp;lt;id&amp;gt;/infos     Method GET   Permissions NeedWorker: - NeedHatchery: - Auth: true   Code getWorkflowJobHandler    GET /queue/workflows/count    URL /queue/workflows/count     Method GET   Permissions Auth: true   Code countWorkflowJobQueueHandler    GET /queue/workflows    URL /queue/workflows     Method GET   Permissions Auth: true   Code getWorkflowJobQueueHandler    POST /queue/workflows/&amp;lt;id&amp;gt;/attempt    URL /queue/workflows/&amp;lt;id&amp;gt;/attempt     Method POST   Permissions NeedHatchery: - Auth: true   Code postIncWorkflowJobAttemptHandler    POST /queue/workflows/&amp;lt;id&amp;gt;/book    URL /queue/workflows/&amp;lt;id&amp;gt;/book     Method POST   Permissions NeedHatchery: - Auth: true   Code postBookWorkflowJobHandler    POST /queue/workflows/&amp;lt;id&amp;gt;/spawn/infos    URL /queue/workflows/&amp;lt;id&amp;gt;/spawn/infos     Method POST   Permissions NeedHatchery: - Auth: true   Code postSpawnInfosWorkflowJobHandler    POST /queue/workflows/&amp;lt;id&amp;gt;/take    URL /queue/workflows/&amp;lt;id&amp;gt;/take     Method POST   Permissions NeedWorker: - Auth: true   Code postTakeWorkflowJobHandler    POSTEXECUTE /queue/workflows/&amp;lt;token&amp;gt;/coverage    URL /queue/workflows/&amp;lt;token&amp;gt;/coverage     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobCoverageResultsHandler    POSTEXECUTE /queue/workflows/&amp;lt;token&amp;gt;/log    URL /queue/workflows/&amp;lt;token&amp;gt;/log     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobLogsHandler    POSTEXECUTE /queue/workflows/&amp;lt;token&amp;gt;/result    URL /queue/workflows/&amp;lt;token&amp;gt;/result     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobResultHandler    POSTEXECUTE /queue/workflows/&amp;lt;token&amp;gt;/step    URL /queue/workflows/&amp;lt;token&amp;gt;/step     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobStepStatusHandler    POSTEXECUTE /queue/workflows/&amp;lt;token&amp;gt;/tag    URL /queue/workflows/&amp;lt;token&amp;gt;/tag     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobTagsHandler    POSTEXECUTE /queue/workflows/&amp;lt;token&amp;gt;/test    URL /queue/workflows/&amp;lt;token&amp;gt;/test     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobTestsResultsHandler    POSTEXECUTE /queue/workflows/&amp;lt;token&amp;gt;/variable    URL /queue/workflows/&amp;lt;token&amp;gt;/variable     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postWorkflowJobVariableHandler    POSTEXECUTE /queue/workflows/&amp;lt;token&amp;gt;/vulnerability    URL /queue/workflows/&amp;lt;token&amp;gt;/vulnerability     Method POSTEXECUTE   Permissions NeedWorker: - Auth: true   Code postVulnerabilityReportHandler    POSTEXECUTE /queue/workflows/log/service    URL /queue/workflows/log/service     Method POSTEXECUTE   Permissions NeedHatchery: - Auth: true   Code postWorkflowJobServiceLogsHandler    </description>
    </item>
    
    <item>
      <title>regen</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/xtoken/regen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/xtoken/regen/</guid>
      <description> cdsctl xtoken regen Regenerate access token
Synopsis Regenerate access token
cdsctl xtoken regen TOKEN-ID ...  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl xtoken - Manage CDS access tokens [EXPERIMENTAL]  </description>
    </item>
    
    <item>
      <title>removeAdmin</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/user/removeadmin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/user/removeadmin/</guid>
      <description> cdsctl group user removeAdmin Remove a user from administrators of a group
Synopsis Remove a user from administrators of a group
cdsctl group user removeAdmin GROUPNAME USERNAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl group user - Manage CDS users group  </description>
    </item>
    
    <item>
      <title>rename</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/rename/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/rename/</guid>
      <description> cdsctl group rename Rename a CDS group
Synopsis Rename a CDS group
cdsctl group rename OLD-GROUP-NAME NEW-GROUP-NAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl group - Manage CDS group  </description>
    </item>
    
    <item>
      <title>repositories_manager</title>
      <link>https://ovh.github.io/cds/development/rest/repositories_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/repositories_manager/</guid>
      <description> GET /repositories_manager/oauth2/callback    URL /repositories_manager/oauth2/callback     Method GET   Permissions Auth: false   Code repositoriesManagerOAuthCallbackHandler    GET /repositories_manager    URL /repositories_manager     Method GET   Permissions Auth: true   Code getRepositoriesManagerHandler    </description>
    </item>
    
    <item>
      <title>request</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/services/request/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/services/request/</guid>
      <description>cdsctl admin services request request GET on a CDS service
Synopsis request GET on a CDS service
cdsctl admin services request [flags]  Examples  ## How to get the goroutine of the service named hatcheryLocal: ```bash cdsctl admin services request --name hatcheryLocal --query /debug/pprof/goroutine\?debug\=2   ## Options   --name string service name --query string http query, example: &#39;/debug/pprof/goroutine?debug=2&#39;   ## Options inherited from parent commands  -f, &amp;ndash;file string set configuration file &amp;ndash;insecure (SSL) This option explicitly allows curl to perform &amp;ldquo;insecure&amp;rdquo; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>requirement</title>
      <link>https://ovh.github.io/cds/development/rest/requirement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/requirement/</guid>
      <description> GET /requirement/types/&amp;lt;type&amp;gt;    URL /requirement/types/&amp;lt;type&amp;gt;     Method GET   Permissions Auth: true   Code getRequirementTypeValuesHandler    </description>
    </item>
    
    <item>
      <title>reset</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/migration/reset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/migration/reset/</guid>
      <description>cdsctl admin migration reset Reset a CDS migration, so basically it put the migration status to &amp;quot;TO DO&amp;quot; (USE WITH CAUTION)
Synopsis Reset a CDS migration, so basically it put the migration status to &amp;quot;TO DO&amp;quot; (USE WITH CAUTION)
cdsctl admin migration reset ID  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>reset</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/user/reset/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/user/reset/</guid>
      <description> cdsctl user reset Reset CDS user password
Synopsis Reset CDS user password
cdsctl user reset [USERNAME] [EMAIL]  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl user - Manage CDS user  </description>
    </item>
    
    <item>
      <title>revoke</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/revoke/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/revoke/</guid>
      <description> cdsctl group revoke Revoke a CDS group in a project or workflow
Synopsis Revoke a CDS group in a project or workflow
cdsctl group revoke [ PROJECT-KEY ] GROUP-NAME [flags]  Options  -n, --workflow string Workflow name  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl group - Manage CDS group  </description>
    </item>
    
    <item>
      <title>run</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/run/</guid>
      <description>cdsctl workflow run Run a CDS workflow
Synopsis Run a CDS workflow
cdsctl workflow run [ PROJECT-KEY WORKFLOW-NAME ] [flags]  Options  -d, --data string Run the workflow with payload data -i, --interactive Follow the workflow run in an interactive terminal user interface --node-name string Node Name to relaunch; Flag run-number is mandatory -o, --open-web-browser Open web browser on the workflow run -p, --parameter strings Run the workflow with pipeline parameter --run-number string Existing Workflow RUN Number -s, --sync Synchronise your pipelines with your last editions.</description>
    </item>
    
    <item>
      <title>services</title>
      <link>https://ovh.github.io/cds/development/rest/services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/services/</guid>
      <description> GET /services/&amp;lt;type&amp;gt;    URL /services/&amp;lt;type&amp;gt;     Method GET   Permissions NeedWorker: - Auth: true   Code getExternalServiceHandler    POST /services/register    URL /services/register     Method POST   Permissions Auth: false   Code postServiceRegisterHandler    </description>
    </item>
    
    <item>
      <title>set</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/advanced/number/set/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/advanced/number/set/</guid>
      <description> cdsctl workflow advanced number set Set a Workflow Run Number
Synopsis Set a Workflow Run Number
cdsctl workflow advanced number set [ PROJECT-KEY WORKFLOW-NAME ] NUMBER  Examples cdsctl workflow advanced number set MYPROJECT my-workflow 22  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl workflow advanced number - Manage Workflow Run Number  </description>
    </item>
    
    <item>
      <title>setAdmin</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/user/setadmin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/user/setadmin/</guid>
      <description> cdsctl group user setAdmin Set a user as an administrator of a group
Synopsis Set a user as an administrator of a group
cdsctl group user setAdmin GROUPNAME USERNAME  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl group user - Manage CDS users group  </description>
    </item>
    
    <item>
      <title>shell</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/shell/</guid>
      <description>cdsctl shell cdsctl interactive shell
Synopsis CDS Shell Mode. default commands:
 cd: reset current position. cd : go to an object. Try cd /project/ and tabulation to autocomplete find : find a project / application / workflow. not case sensitive help: display this help ls: display current list, quiet format ll: display current list mode: display current mode. Choose mode with &amp;ldquo;mode vi&amp;rdquo; ou &amp;ldquo;mode emacs&amp;rdquo; open: open CDS WebUI with current context version: same as cdsctl version command  Other commands are available depending on your position.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/builtin/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/builtin/show/</guid>
      <description>cdsctl action builtin show Show a CDS builtin action
Synopsis Show a CDS builtin action
cdsctl action builtin show ACTION-NAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/action/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/action/show/</guid>
      <description>cdsctl action show Show a CDS action
Synopsis Show a CDS action
cdsctl action show ACTION-PATH [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/broadcasts/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/broadcasts/show/</guid>
      <description>cdsctl admin broadcasts show Show a CDS broadcast
Synopsis Show a CDS broadcast
cdsctl admin broadcasts show ID [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/integration-model/show/</guid>
      <description>cdsctl admin integration-model show Show details of a CDS Integration model
Synopsis Show details of a CDS Integration model
cdsctl admin integration-model show NAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/platform-model/show/</guid>
      <description> cdsctl admin platform-model show Show details of a CDS Platform model
Synopsis Show details of a CDS Platform model
cdsctl admin platform-model show NAME [flags]  Options  --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -h, --help help for show  Options inherited from parent commands  -f, --file string set configuration file -k, --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. -w, --no-warnings do not display warnings -v, --verbose verbose output  SEE ALSO  cdsctl admin platform-model - Manage CDS Platform models  </description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/show/</guid>
      <description>cdsctl application show Show a CDS application
Synopsis Show a CDS application
cdsctl application show [ PROJECT-KEY APPLICATION-NAME ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/show/</guid>
      <description>cdsctl application variable show Show a CDS application variable
Synopsis Show a CDS application variable
cdsctl application variable show [ PROJECT-KEY APPLICATION-NAME ] VARIABLE-NAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/show/</guid>
      <description>cdsctl environment variable show Show a CDS environment variable
Synopsis Show a CDS environment variable
cdsctl environment variable show [ PROJECT-KEY ] ENV-NAME VARIABLE-NAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/group/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/group/show/</guid>
      <description>cdsctl group show Show a CDS group
Synopsis Show a CDS group
cdsctl group show GROUP-NAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/show/</guid>
      <description>cdsctl project show Show a CDS project
Synopsis Show a CDS project
cdsctl project show [ PROJECT-KEY ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/show/</guid>
      <description>cdsctl project variable show Show a CDS project variable
Synopsis Show a CDS project variable
cdsctl project variable show [ PROJECT-KEY ] VARIABLE-NAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/user/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/user/show/</guid>
      <description>cdsctl user show Show CDS user details
Synopsis Show CDS user details
cdsctl user show USERNAME [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/worker/model/show/</guid>
      <description>cdsctl worker model show Show a Worker Model
Synopsis Show a Worker Model
cdsctl worker model show WORKER-MODEL-PATH [flags]  Examples cdsctl worker model show myGroup/myModel  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/advanced/number/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/advanced/number/show/</guid>
      <description>cdsctl workflow advanced number show Show a Workflow Run Number
Synopsis Show a Workflow Run Number
cdsctl workflow advanced number show [ PROJECT-KEY WORKFLOW-NAME ] [flags]  Examples cdsctl workflow advanced number show MYPROJECT my-workflow  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>show</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/show/</guid>
      <description>cdsctl workflow show Show a CDS workflow
Synopsis Show a CDS workflow
cdsctl workflow show [ PROJECT-KEY WORKFLOW-NAME ] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>signup</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/signup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/signup/</guid>
      <description> cdsctl signup Signup on CDS
Synopsis Signup on CDS
cdsctl signup [flags]  Options  -H, --api-url string CDS API URL --email string Email --fullname string Fullname --username string CDS Username  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl - CDS Command line utility  </description>
    </item>
    
    <item>
      <title>start</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/start/</guid>
      <description> cdsctl admin hooks start Start a task
Synopsis Start a task
cdsctl admin hooks start UUID  Examples cdsctl admin hooks start 5178ce1f-2f76-45c5-a203-58c10c3e2c73  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin hooks - Manage CDS Hooks tasks  </description>
    </item>
    
    <item>
      <title>start</title>
      <link>https://ovh.github.io/cds/docs/components/engine/start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/start/</guid>
      <description>engine start Start CDS
Synopsis Start CDS Engine Services
API This is the core component of CDS.
Hatcheries They are the components responsible for spawning workers. Supported integrations/orchestrators are:
 Local machine Openstack Docker Swarm Openstack Vsphere  Hooks This component operates CDS workflow hooks
Repositories This component operates CDS workflow repositories
VCS This component operates CDS VCS connectivity
Start all of this with a single command:
$ engine start [api] [hatchery:local] [hatchery:marathon] [hatchery:openstack] [hatchery:swarm] [hatchery:vsphere] [elasticsearch] [hooks] [vcs] [repositories] [migrate]  All the services are using the same configuration file format.</description>
    </item>
    
    <item>
      <title>startall</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/startall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/startall/</guid>
      <description> cdsctl admin hooks startall Start all tasks
Synopsis Start all tasks
cdsctl admin hooks startall  Examples cdsctl admin hooks startall  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin hooks - Manage CDS Hooks tasks  </description>
    </item>
    
    <item>
      <title>staticfiles</title>
      <link>https://ovh.github.io/cds/development/rest/staticfiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/staticfiles/</guid>
      <description> GET /staticfiles/store    URL /staticfiles/store     Method GET   Permissions Auth: false   Code getStaticFilesStoreHandler    </description>
    </item>
    
    <item>
      <title>status</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/services/status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/services/status/</guid>
      <description>cdsctl admin services status Status CDS services
Synopsis Status CDS services
cdsctl admin services status [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) --name string Filter service by name -q, --quiet Only display object&#39;s key -t, --type string Filter service by type: api, hatchery, hook, repository, vcs  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>status</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/health/status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/health/status/</guid>
      <description>cdsctl health status Show CDS Status
Synopsis Show CDS Status
cdsctl health status [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>status</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/status/</guid>
      <description>cdsctl workflow status Check the status of the run
Synopsis Check the status of the run
cdsctl workflow status [ PROJECT-KEY WORKFLOW-NAME ] [RUN-NUMBER] [flags]  Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key --track Wait the workflow to be over  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>status</title>
      <link>https://ovh.github.io/cds/docs/components/engine/database/status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/database/status/</guid>
      <description>engine database status Show current migration status
Synopsis Show current migration status
engine database status [flags]  Options  --db-connect-timeout int Maximum wait for connection, in seconds (default 10) --db-host string DB Host (default &amp;quot;localhost&amp;quot;) --db-maxconn int DB Max connection (default 20) --db-name string DB Name (default &amp;quot;cds&amp;quot;) --db-password string DB Password --db-port int DB Port (default 5432) --db-role string DB Role --db-sslmode string DB SSL Mode: require (default), verify-full, or disable (default &amp;quot;require&amp;quot;) --db-timeout int Statement timeout value in milliseconds (default 3000) --db-user string DB User (default &amp;quot;cds&amp;quot;) --migrate-dir string CDS SQL Migration directory (default &amp;quot;.</description>
    </item>
    
    <item>
      <title>stop</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/stop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/stop/</guid>
      <description> cdsctl admin hooks stop Stop a task
Synopsis Stop a task
cdsctl admin hooks stop UUID  Examples cdsctl admin hooks stop 5178ce1f-2f76-45c5-a203-58c10c3e2c73  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin hooks - Manage CDS Hooks tasks  </description>
    </item>
    
    <item>
      <title>stop</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/workflow/stop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/workflow/stop/</guid>
      <description>cdsctl workflow stop Stop a CDS workflow or a specific node name
Synopsis Stop a CDS workflow or a specific node name
cdsctl workflow stop [ PROJECT-KEY WORKFLOW-NAME ] [RUN-NUMBER] [NODE-NAME]  Examples cdsctl workflow stop # Stop the workflow run for the current repo and the current hash cdsctl workflow stop MYPROJECT myworkflow 5 # To stop a workflow run on number 5 cdsctl workflow stop MYPROJECT myworkflow 5 compile # To stop a workflow node run on workflow run 5  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>stopall</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/stopall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/hooks/stopall/</guid>
      <description> cdsctl admin hooks stopall Stop all tasks
Synopsis Stop all tasks
cdsctl admin hooks stopall  Examples cdsctl admin hooks stopall  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin hooks - Manage CDS Hooks tasks  </description>
    </item>
    
    <item>
      <title>suggest</title>
      <link>https://ovh.github.io/cds/development/rest/suggest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/suggest/</guid>
      <description> GET /suggest/variable/&amp;lt;project-key&amp;gt;    URL /suggest/variable/&amp;lt;project-key&amp;gt;     Method GET   Permissions Auth: true   Code getVariablesHandler    </description>
    </item>
    
    <item>
      <title>tag</title>
      <link>https://ovh.github.io/cds/docs/components/worker/tag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/tag/</guid>
      <description>worker tag worker tag key=value key=value
Synopsis On the workflow view, the sidebar on the left displays a select box to filter on CDS Tags.
So, what&amp;rsquo;s a tag? A tag is a CDS Variable, exported as a tag. There are default tags as git.branch, git.hash, tiggered_by and environment.
Inside a job, you can add a Tag with the worker command:
# worker tag &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; &amp;lt;key&amp;gt;=&amp;lt;value&amp;gt; worker tag tagKey=tagValue anotherTagKey=anotherTagValue  Tags are useful to add indication on the sidebar about the context of a Run.</description>
    </item>
    
    <item>
      <title>template</title>
      <link>https://ovh.github.io/cds/development/rest/template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/template/</guid>
      <description> DELETE /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/instance/&amp;lt;instanceID&amp;gt;    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/instance/&amp;lt;instanceID&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteTemplateInstanceHandler    DELETE /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteTemplateHandler    GET /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/audit    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/audit     Method GET   Permissions Auth: true   Code getTemplateAuditsHandler    GET /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/bulk/&amp;lt;bulkID&amp;gt;    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/bulk/&amp;lt;bulkID&amp;gt;     Method GET   Permissions Auth: true   Code getTemplateBulkHandler    GET /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/instance    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/instance     Method GET   Permissions Auth: true   Code getTemplateInstancesHandler    GET /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/usage    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/usage     Method GET   Permissions Auth: true   Code getTemplateUsageHandler    GET /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;     Method GET   Permissions Auth: true   Code getTemplateHandler    GET /template    URL /template     Method GET   Permissions Auth: true   Code getTemplatesHandler    POST /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/apply    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/apply     Method POST   Permissions Auth: true   Code postTemplateApplyHandler    POST /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/bulk    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/bulk     Method POST   Permissions Auth: true   Code postTemplateBulkHandler    POST /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/pull    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;/pull     Method POST   Permissions Auth: true   Code postTemplatePullHandler    POST /template/push    URL /template/push     Method POST   Permissions Auth: true   Code postTemplatePushHandler    POST /template    URL /template     Method POST   Permissions Auth: true   Code postTemplateHandler    PUT /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;    URL /template/&amp;lt;group-name&amp;gt;/&amp;lt;permTemplateSlug&amp;gt;     Method PUT   Permissions Auth: true   Code putTemplateHandler    </description>
    </item>
    
    <item>
      <title>tmpl</title>
      <link>https://ovh.github.io/cds/docs/components/worker/tmpl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/tmpl/</guid>
      <description>worker tmpl worker tmpl inputFile outputFile
Synopsis Inside a step script (https://ovh.github.io/cds/docs/actions/builtin-script/), you can add a replace CDS variables with the real value into a file:
# create a file cat &amp;lt;&amp;lt; EOF &amp;gt; myFile this a a line in the file, with a CDS variable {{.cds.version}} EOF # worker tmpl &amp;lt;input file&amp;gt; &amp;lt;output file&amp;gt; worker tmpl {{.cds.workspace}}/myFile {{.cds.workspace}}/outputFile  The file outputFile will contain the string:
this a a line in the file, with a CDS variable 2  if it&amp;rsquo;s the RUN n°2 of the current workflow.</description>
    </item>
    
    <item>
      <title>ui</title>
      <link>https://ovh.github.io/cds/development/rest/ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/ui/</guid>
      <description> GET /ui/navbar    URL /ui/navbar     Method GET   Permissions Auth: true   Code getNavbarHandler    GET /ui/project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/overview    URL /ui/project/&amp;lt;project-key&amp;gt;/application/&amp;lt;applicationName&amp;gt;/overview     Method GET   Permissions Auth: true   Code getApplicationOverviewHandler    </description>
    </item>
    
    <item>
      <title>unlock</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/admin/database/unlock/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/admin/database/unlock/</guid>
      <description> cdsctl admin database unlock Unlock a pending migration (Use with caution)
Synopsis Unlock a pending migration (Use with caution)
cdsctl admin database unlock ID  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl admin database - Manage CDS Database  </description>
    </item>
    
    <item>
      <title>update</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/application/variable/update/</guid>
      <description> cdsctl application variable update Update CDS application variable value
Synopsis Update CDS application variable value
cdsctl application variable update [ PROJECT-KEY APPLICATION-NAME ] VARIABLE-OLDNAME VARIABLE-NAME VARIABLE-TYPE VARIABLE-VALUE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl application variable - Manage CDS application variables  </description>
    </item>
    
    <item>
      <title>update</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/environment/variable/update/</guid>
      <description> cdsctl environment variable update Update CDS environment variable value
Synopsis Update CDS environment variable value
cdsctl environment variable update [ PROJECT-KEY ] ENV-NAME VARIABLE-OLDNAME VARIABLE-NAME VARIABLE-TYPE VARIABLE-VALUE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl environment variable - Manage CDS environment variables  </description>
    </item>
    
    <item>
      <title>update</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/project/variable/update/</guid>
      <description> cdsctl project variable update Update CDS project variable value
Synopsis Update CDS project variable value
cdsctl project variable update [ PROJECT-KEY ] VARIABLE-OLDNAME VARIABLE-NAME VARIABLE-TYPE VARIABLE-VALUE  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl project variable - Manage CDS project variables  </description>
    </item>
    
    <item>
      <title>update</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/update/</guid>
      <description> cdsctl update Update cdsctl from CDS API or from CDS Release
Synopsis Update cdsctl from CDS API or from CDS Release
cdsctl update [flags]  Options  --from-github Update binary from latest github release  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl - CDS Command line utility  </description>
    </item>
    
    <item>
      <title>update</title>
      <link>https://ovh.github.io/cds/docs/components/engine/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/update/</guid>
      <description> engine update Update engine binary
Synopsis Update engine binary
engine update [flags]  Examples engine update --from-github  Options  --api string Update binary from a CDS Engine API --from-github Update binary from latest github release  SEE ALSO  engine - CDS Engine  </description>
    </item>
    
    <item>
      <title>update</title>
      <link>https://ovh.github.io/cds/docs/components/worker/update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/update/</guid>
      <description> worker update worker update [flags]
Synopsis Update worker from CDS API or from CDS Release
Update from Github:
 worker update --from-github  Update from your CDS API:
 worker update --api https://your-cds-api.localhost  worker update [flags]  Options  --api string URL of CDS API --from-github Update binary from latest github release --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.  SEE ALSO  worker - CDS Worker  </description>
    </item>
    
    <item>
      <title>upgrade</title>
      <link>https://ovh.github.io/cds/docs/components/engine/database/upgrade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/database/upgrade/</guid>
      <description>engine database upgrade Upgrade schema
Synopsis Migrates the database to the most recent version available.
engine database upgrade [flags]  Examples engine database upgrade --db-password=your-password --db-sslmode=disable --db-name=cds --migrate-dir=./sql # If the directory --migrate-dir is not up to date with the current version, this # directory will be automatically updated with the release from https://github.com/ovh/cds/releases  Options  --db-connect-timeout int Maximum wait for connection, in seconds (default 10) --db-host string DB Host (default &amp;quot;localhost&amp;quot;) --db-maxconn int DB Max connection (default 20) --db-name string DB Name (default &amp;quot;cds&amp;quot;) --db-password string DB Password --db-port int DB Port (default 5432) --db-role string DB Role --db-sslmode string DB SSL Mode: require (default), verify-full, or disable (default &amp;quot;require&amp;quot;) --db-timeout int Statement timeout value in milliseconds (default 3000) --db-user string DB User (default &amp;quot;cds&amp;quot;) --dry-run Dry run upgrade --limit int Max number of migrations to apply (0 = unlimited) --migrate-dir string CDS SQL Migration directory (default &amp;quot;.</description>
    </item>
    
    <item>
      <title>upload</title>
      <link>https://ovh.github.io/cds/docs/components/worker/upload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/upload/</guid>
      <description> worker upload worker upload --tag=tagValue {{.cds.workspace}}/fileToUpload
Synopsis Inside a job, there are two ways to upload an artifact:
 with a step using action Upload Artifacts with a step script (https://ovh.github.io/cds/docs/actions/builtin-script/), using the worker command: worker upload &amp;lt;path&amp;gt;  worker upload --tag={{.cds.version}} {{.cds.workspace}}/files*.yml
You can use you storage integration: worker upload &amp;ndash;destination=&amp;ldquo;yourStorageIntegrationName&amp;rdquo;
worker upload [flags]  Options  --destination string optional. Your storage integration name --tag string Tag for artifact Upload - Tag is mandatory  SEE ALSO  worker - CDS Worker  </description>
    </item>
    
    <item>
      <title>uptodate</title>
      <link>https://ovh.github.io/cds/docs/components/engine/uptodate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/uptodate/</guid>
      <description> engine uptodate check if engine is uptodate
Synopsis check if engine is uptodate with latest release on github (&amp;ndash;from-github) or from an existing API.
This command exit 0 if current binary is uptodate.
engine uptodate [flags]  Examples engine uptodate --from-github  Options  --api string Update binary from a CDS Engine API --from-github Update binary from latest github release  SEE ALSO  engine - CDS Engine  </description>
    </item>
    
    <item>
      <title>user</title>
      <link>https://ovh.github.io/cds/development/rest/user/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/user/</guid>
      <description> AddUser creates a new user and generate verification email    URL /user/signup     Method POST   Permissions Auth: false   Code addUserHandler    ConfirmUser verify token send via email and mark user as verified    URL /user/&amp;lt;username&amp;gt;/confirm/&amp;lt;token&amp;gt;     Method GET   Permissions Auth: false   Code confirmUserHandler    DeleteUser removes a user    URL /user/&amp;lt;username&amp;gt;     Method DELETE   Permissions NeedUsernameOrAdmin: true - Auth: true   Code deleteUserHandler    GET /user/timeline/filter    URL /user/timeline/filter     Method GET   Permissions Auth: true   Code getTimelineFilterHandler    GET /user/timeline    URL /user/timeline     Method GET   Permissions Auth: true   Code getTimelineHandler    GET /user/token/&amp;lt;token&amp;gt;    URL /user/token/&amp;lt;token&amp;gt;     Method GET   Permissions Auth: true   Code getUserTokenHandler    GET /user/token    URL /user/token     Method GET   Permissions Auth: true   Code getUserTokenListHandler    GetUser returns a specific user&amp;rsquo;s information    URL /user/&amp;lt;username&amp;gt;     Method GET   Permissions NeedUsernameOrAdmin: true - Auth: true   Code getUserHandler    GetUsers fetches all users from databases    URL /user     Method GET   Permissions Auth: true   Code getUsersHandler    POST /user/&amp;lt;username&amp;gt;/reset    URL /user/&amp;lt;username&amp;gt;/reset     Method POST   Permissions Auth: false   Code resetUserHandler    POST /user/import    URL /user/import     Method POST   Permissions NeedAdmin: true - Auth: true   Code importUsersHandler    POST /user/timeline/filter    URL /user/timeline/filter     Method POST   Permissions Auth: true   Code postTimelineFilterHandler    UpdateUser modifies user informations    URL /user/&amp;lt;username&amp;gt;     Method PUT   Permissions NeedUsernameOrAdmin: true - Auth: true   Code updateUserHandler    getUserGroups returns groups of the user    URL /user/&amp;lt;username&amp;gt;/groups     Method GET   Permissions NeedUsernameOrAdmin: true - Auth: true   Code getUserGroupsHandler    getUserLogged check if the current user is connected    URL /user/me     Method GET   Permissions Auth: false   Code getUserLoggedHandler    postUserFavorite post favorite user for workflow or project    URL /user/favorite     Method POST   Permissions Auth: true   Code postUserFavoriteHandler    </description>
    </item>
    
    <item>
      <title>vSphere</title>
      <link>https://ovh.github.io/cds/docs/integrations/vsphere/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/integrations/vsphere/</guid>
      <description>CDS build using VMware vSphere infrastructure to spawn each CDS Workers inside dedicated VM.
Pre-requisites This hatchery spawns VM which obtains IP from DHCP. So first you have to create a DHCP server on your host with NAT if you want to access to the internet. In order to create you have multiple possibilities like create your own VM with a DHCP server configured or if you are comfortable with the VMware tools you can use the NSX system.</description>
    </item>
    
    <item>
      <title>variable</title>
      <link>https://ovh.github.io/cds/development/rest/variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/variable/</guid>
      <description> GET /variable/type    URL /variable/type     Method GET   Permissions Auth: true   Code getVariableTypeHandler    </description>
    </item>
    
    <item>
      <title>version</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/version/</guid>
      <description> cdsctl version show cdsctl version
Synopsis show cdsctl version
cdsctl version [flags]  Options  --format string Specify out format (json or yaml)  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl - CDS Command line utility  </description>
    </item>
    
    <item>
      <title>version</title>
      <link>https://ovh.github.io/cds/docs/components/engine/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/version/</guid>
      <description> engine version Display CDS version
Synopsis Display CDS version
engine version  SEE ALSO  engine - CDS Engine  </description>
    </item>
    
    <item>
      <title>version</title>
      <link>https://ovh.github.io/cds/docs/components/worker/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/worker/version/</guid>
      <description> worker version Print the version of the worker binary
Synopsis Print the version of the worker binary
worker version  SEE ALSO  worker - CDS Worker  </description>
    </item>
    
    <item>
      <title>warning</title>
      <link>https://ovh.github.io/cds/development/rest/warning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/warning/</guid>
      <description> GET /warning/&amp;lt;project-key&amp;gt;    URL /warning/&amp;lt;project-key&amp;gt;     Method GET   Permissions Auth: true   Code getWarningsHandler    PUT /warning/&amp;lt;project-key&amp;gt;/&amp;lt;hash&amp;gt;    URL /warning/&amp;lt;project-key&amp;gt;/&amp;lt;hash&amp;gt;     Method PUT   Permissions Auth: true   Code putWarningsHandler    </description>
    </item>
    
    <item>
      <title>worker</title>
      <link>https://ovh.github.io/cds/development/rest/worker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/worker/</guid>
      <description>DELETE /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;    URL /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;     Method DELETE   Permissions Auth: true   Code deleteWorkerModelHandler    DELETE /worker/model/pattern/&amp;lt;type&amp;gt;/&amp;lt;name&amp;gt;    URL /worker/model/pattern/&amp;lt;type&amp;gt;/&amp;lt;name&amp;gt;     Method DELETE   Permissions NeedAdmin: true - Auth: true   Code deleteWorkerModelPatternHandler    GET /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;/export    URL /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;/export     Method GET   Permissions Auth: true   Code getWorkerModelExportHandler    GET /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;/usage    URL /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;/usage     Method GET   Permissions Auth: true   Code getWorkerModelUsageHandler    GET /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;    URL /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;     Method GET   Permissions Auth: true   Code getWorkerModelHandler    GET /worker/model/capability/type    URL /worker/model/capability/type     Method GET   Permissions Auth: true   Code getRequirementTypesHandler    GET /worker/model/communication    URL /worker/model/communication     Method GET   Permissions Auth: true   Code getWorkerModelCommunicationsHandler    GET /worker/model/enabled    URL /worker/model/enabled     Method GET   Permissions NeedHatchery: - Auth: true   Code getWorkerModelsEnabledHandler    GET /worker/model/pattern/&amp;lt;type&amp;gt;/&amp;lt;name&amp;gt;    URL /worker/model/pattern/&amp;lt;type&amp;gt;/&amp;lt;name&amp;gt;     Method GET   Permissions Auth: true   Code getWorkerModelPatternHandler    GET /worker/model/pattern    URL /worker/model/pattern     Method GET   Permissions Auth: true   Code getWorkerModelPatternsHandler    GET /worker/model/type    URL /worker/model/type     Method GET   Permissions Auth: true   Code getWorkerModelTypesHandler    GET /worker/model    URL /worker/model     Method GET   Permissions Auth: true   Code getWorkerModelsHandler    GET /worker    URL /worker     Method GET   Permissions Auth: true   Code getWorkersHandler    POST /worker/&amp;lt;id&amp;gt;/disable    URL /worker/&amp;lt;id&amp;gt;/disable     Method POST   Permissions Auth: true   Code disableWorkerHandler    POST /worker/checking    URL /worker/checking     Method POST   Permissions Auth: true   Code workerCheckingHandler    POST /worker/model/pattern    URL /worker/model/pattern     Method POST   Permissions NeedAdmin: true - Auth: true   Code postAddWorkerModelPatternHandler    POST /worker/model    URL /worker/model     Method POST   Permissions Auth: true   Code postWorkerModelHandler    POST /worker/refresh    URL /worker/refresh     Method POST   Permissions Auth: true   Code refreshWorkerHandler    POST /worker/unregister    URL /worker/unregister     Method POST   Permissions Auth: true   Code unregisterWorkerHandler    POST /worker/waiting    URL /worker/waiting     Method POST   Permissions Auth: true   Code workerWaitingHandler    POST /worker    URL /worker     Method POST   Permissions Auth: false   Code registerWorkerHandler    PUT /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;    URL /worker/model/&amp;lt;group-name&amp;gt;/&amp;lt;permModelName&amp;gt;     Method PUT   Permissions Auth: true   Code putWorkerModelHandler    PUT /worker/model/book/&amp;lt;permModelID&amp;gt;    URL /worker/model/book/&amp;lt;permModelID&amp;gt;     Method PUT   Permissions NeedHatchery: - Auth: true   Code bookWorkerModelHandler    PUT /worker/model/error/&amp;lt;permModelID&amp;gt;    URL /worker/model/error/&amp;lt;permModelID&amp;gt;     Method PUT   Permissions NeedHatchery: - Auth: true   Code spawnErrorWorkerModelHandler    PUT /worker/model/pattern/&amp;lt;type&amp;gt;/&amp;lt;name&amp;gt;    URL /worker/model/pattern/&amp;lt;type&amp;gt;/&amp;lt;name&amp;gt;     Method PUT   Permissions NeedAdmin: true - Auth: true   Code putWorkerModelPatternHandler    import a worker model yml/json file    URL /worker/model/import     Method POST   Query Parameter force=true or false.</description>
    </item>
    
    <item>
      <title>workers</title>
      <link>https://ovh.github.io/cds/docs/components/engine/download/workers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/engine/download/workers/</guid>
      <description>engine download workers Download workers binaries from latest release on Github
Synopsis Download workers binaries from latest release on Github
You can also indicate a specific os or architecture to not download all binaries available with flag &amp;ndash;os and &amp;ndash;arch
engine download workers [flags]  Examples engine download workers  Options  --arch string Download only for this arch --config string config file --os string Download only for this os --remote-config string (optional) consul configuration store --remote-config-key string (optional) consul configuration store key (default &amp;quot;cds/config.</description>
    </item>
    
    <item>
      <title>workflow</title>
      <link>https://ovh.github.io/cds/development/rest/workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/development/rest/workflow/</guid>
      <description> GET /workflow/artifact/&amp;lt;hash&amp;gt;    URL /workflow/artifact/&amp;lt;hash&amp;gt;     Method GET   Permissions Auth: false   Code downloadworkflowArtifactDirectHandler    GET /workflow/hook/model/&amp;lt;model&amp;gt;    URL /workflow/hook/model/&amp;lt;model&amp;gt;     Method GET   Permissions Auth: true   Code getWorkflowHookModelHandler    GET /workflow/hook    URL /workflow/hook     Method GET   Permissions NeedService: - Auth: true   Code getWorkflowHooksHandler    GET /workflow/outgoinghook/model    URL /workflow/outgoinghook/model     Method GET   Permissions Auth: true   Code getWorkflowOutgoingHookModelsHandler    POST /workflow/hook/model/&amp;lt;model&amp;gt;    URL /workflow/hook/model/&amp;lt;model&amp;gt;     Method POST   Permissions NeedAdmin: true - Auth: true   Code postWorkflowHookModelHandler    PUT /workflow/hook/model/&amp;lt;model&amp;gt;    URL /workflow/hook/model/&amp;lt;model&amp;gt;     Method PUT   Permissions NeedAdmin: true - Auth: true   Code putWorkflowHookModelHandler    </description>
    </item>
    
    <item>
      <title>xlogin</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/xlogin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/xlogin/</guid>
      <description>cdsctl xlogin Login to CDS [EXPERIMENTAL]
Synopsis Login to CDS [EXPERIMENTAL]
cdsctl xlogin [flags]  Options  -H, --api-url string CDS API URL --env Display the commands to set up the environment for the cds client -p, --password string CDS Password -u, --username string CDS Username  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>yaml-schema</title>
      <link>https://ovh.github.io/cds/docs/components/cdsctl/tools/yaml-schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/docs/components/cdsctl/tools/yaml-schema/</guid>
      <description> cdsctl tools yaml-schema Generate and install CDS yaml schema for given IDE
Synopsis Generate and install CDS yaml schema for given IDE
cdsctl tools yaml-schema IDE-NAME  Examples cdsctl tools yaml-schema vscode  Options inherited from parent commands  -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. --verbose verbose output  SEE ALSO  cdsctl tools - Some tooling for CDS  </description>
    </item>
    
  </channel>
</rss>