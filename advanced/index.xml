<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Advanceds on CDS Documentation</title>
    <link>https://ovh.github.io/cds/advanced/</link>
    <description>Recent content in Advanceds on CDS Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ovh.github.io/cds/advanced/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generate a Token</title>
      <link>https://ovh.github.io/cds/advanced/advanced.worker.token/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.worker.token/</guid>
      <description> Purpose In order to start a worker or a Hatchery, you need to provide a token to be able to register on CDS API.
CLI Run the following command, replace yourgroup with your group
$ cds generate token -g yourgroup -e persistent  </description>
    </item>
    
    <item>
      <title>Github</title>
      <link>https://ovh.github.io/cds/advanced/advanced.repositories_manager.github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.repositories_manager.github/</guid>
      <description>Authorize CDS on Github Create a CDS application on Github Go to https://github.com/settings/developers and Register a new application: set an application name, the url and a description. Dont set up Authorization callback URL.
On the next page Github give you a Client ID and a Client Secret
Connect CDS To Github With CDS CLI run :
 $ cds admin reposmanager add GITHUB github http://github.com client-id=&amp;lt;your_client_id&amp;gt; client-secret=&amp;lt;client-secret&amp;gt;  Set env CDS_VCS_REPOSITORIES_GITHUB_CLIENTSECRET or update your configuration file with &amp;lt;client-secret&amp;gt;:</description>
    </item>
    
    <item>
      <title>Bitbucket</title>
      <link>https://ovh.github.io/cds/advanced/advanced.repositories_manager.bitbucket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.repositories_manager.bitbucket/</guid>
      <description>Authorize CDS on your Bitbucket instance You need to perform the following steps :
 Bitbucket admin privileges A RSA Key Pair  Create a CDS application in BitBucket In Bitbucket go to Administration Settings / Application Links. Create a new Application with :
 Name : CDS Type : Generic Application Application URL : Your CDS URL Display URL : Your CDS URL  On this application, you just have to set up OAuth Incoming Authentication :</description>
    </item>
    
    <item>
      <title>Hatcheries</title>
      <link>https://ovh.github.io/cds/advanced/advanced.hatcheries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.hatcheries/</guid>
      <description>Hatchery is a binary dedicated to spawn and kill worker in accordance with build queue needs.
An hatchery is started with permissions to build all pipelines accessible from a given group, using token generated by user.
There are 5 modes for hatcheries:
 Local (Start workers on a single host) Local Docker (Start worker model instances on a single host) Marathon (Start worker model instances on a mesos cluster with marathon framework) Swarm (Start worker on a docker swarm cluster) Openstack (Start hosts on an openstack cluster)  Local mode Hatchery starts workers directly as local process.</description>
    </item>
    
    <item>
      <title>Hatchery Swarm</title>
      <link>https://ovh.github.io/cds/advanced/advanced.hatcheries.swarm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.hatcheries.swarm/</guid>
      <description>CDS build using Docker Swarm to spawn CDS Worker.
Start Swarm hatchery Generate a token for group:
$ cds generate token -g shared.infra -e persistent fc300aad48242d19e782a37d361dfa3e55868a629e52d7f6825c7ce65a72bf92  Then start hatchery:
export CDS_LOG_LEVEL=notice export CDS_RATIO_SERVICE=50 export CDS_TOKEN=&amp;quot;fc300aad48242d19e782a37d361dfa3e55868a629e52d7f6825c7ce65a72bf92&amp;quot; export DOCKER_HOST=tcp://xx.xx.xx.xx:2375 export CDS_API=http://your-cds-api export CDS_NAME=$(hostname) export CDS_MAX_WORKER=10 export CDS_MAX_CONTAINERS=5 export CDS_PROVISION=0 export CDS_REQUEST_API_TIMEOUT=120 ./hatchery swarm # You can also use the flags instead of environment variable if you want  This hatchery will now start worker of model &amp;lsquo;docker&amp;rsquo; on you docker installation.</description>
    </item>
    
    <item>
      <title>Worker</title>
      <link>https://ovh.github.io/cds/advanced/advanced.worker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.worker/</guid>
      <description>A pipeline is structured in sequential stages containing one or multiple concurrent jobs. A Job will be executed by a worker.
Building your own worker model enables you to integrate your own tools, or to customize the tools you need to use. For instance, to build an AngularJs application, you shall need a worker capable of installing npm tools, importing bower packages (these are nodeJs tools), building webfonts with fontforge&amp;hellip;</description>
    </item>
    
    <item>
      <title>Worker Model</title>
      <link>https://ovh.github.io/cds/advanced/advanced.worker.model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.worker.model/</guid>
      <description>Purpose The goal of CDS is to start a worker when you need it, which should match all your requirements exactly. In order to scale automatically on demand, it is possible to register a worker model.
The goal of a worker model is to describe the capabilities of a given docker/iso image in terms of architecture, pre-installed binaries or libraries.
Types There are 2 types of worker models:
 Docker images, see how to create a worker model docker Openstack images, see how to create a worker model openstack  Capabilities Capabilities have a name, a type and a value.</description>
    </item>
    
    <item>
      <title>Hatchery Openstack</title>
      <link>https://ovh.github.io/cds/advanced/advanced.hatcheries.openstack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.hatcheries.openstack/</guid>
      <description>CDS build using Openstack infrastructure to spawn each CDS Workers inside dedicated VM.
Start Opentack hatchery Generate a token for group:
$ cds generate token -g shared.infra -e persistent fc300aad48242d19e782a37d361dfa3e55868a629e52d7f6825c7ce65a72bf92  Then start hatchery:
OPENSTACK_USER=&amp;lt;user&amp;gt; OPENSTACK_TENANT=&amp;lt;tenant&amp;gt; OPENSTACK_AUTH_ENDPOINT=https://auth.cloud.ovh.net OPENSTACK_PASSWORD=&amp;lt;password&amp;gt; OPENSTACK_REGION=SBG1 hatchery cloud \ --api=https://api.domain \ --max-worker=10 \ --provision=1 \ --token=fc300aad48242d19e782a37d361dfa3e55868a629e52d7f6825c7ce65a72bf92  This hatchery will now start worker of model &amp;lsquo;openstack&amp;rsquo; on Openstack infrastructure.
Setup a worker model See Tutorial</description>
    </item>
    
    <item>
      <title>Repositories Manager</title>
      <link>https://ovh.github.io/cds/advanced/advanced.repositories_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.repositories_manager/</guid>
      <description>CDS can be linked to following repositories manager :
 Atlassian Stash / Bitbucket Github  It allows you to enable some CDS features such as :
 Create application in CDS from Bitbucket or Github Attach an application to its Bitbucket or Github repository Fully automatic hook management Branch filtering on application workflows Commit logs on pipeline build details  Go through this tutorial to enable the link between repositories managers and CDS.</description>
    </item>
    
    <item>
      <title>Write a Plugin</title>
      <link>https://ovh.github.io/cds/advanced/advanced.write-plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.write-plugin/</guid>
      <description>A CDS worker executes job, and job is composed of steps.
A step is :
 a builtin action, as GitClone, etc&amp;hellip; read more a user action read more a Plugin Action  A Plugin is a Golang Binary.
Take a look at https://github.com/ovh/cds/tree/master/sdk/plugin/dummy/dummy_plugin.go
Contribute on https://github.com/ovh/cds/tree/master/contrib/plugins</description>
    </item>
    
    <item>
      <title>Write your own hatchery</title>
      <link>https://ovh.github.io/cds/advanced/advanced.hatcheries.write.hatchery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced.hatcheries.write.hatchery/</guid>
      <description>Feel free to contribute to add new Hatchery mode.
Take a look at Hatchery Local</description>
    </item>
    
    <item>
      <title>Advanced</title>
      <link>https://ovh.github.io/cds/advanced/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/advanced/advanced/</guid>
      <description> Generate a Token Hatcheries Worker Repositories Manager Write a Plugin  </description>
    </item>
    
  </channel>
</rss>