<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introductions on CDS Documentation</title>
    <link>https://ovh.github.io/cds/introduction/</link>
    <description>Recent content in Introductions on CDS Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ovh.github.io/cds/introduction/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Stage</title>
      <link>https://ovh.github.io/cds/introduction/introduction.concepts.stage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/introduction.concepts.stage/</guid>
      <description>Usually in CDS a build pipeline is structured of the following stages :
 Compile stage : Build the binaries Analysis &amp;amp; Unit Tests stage : Run all unit tests and analyse code quality Packaging stage : Build the final package, Virtual Machine Image or Docker Image.  In CDS, stages are executed sequentially if the previous stage is successfull.
You can define trigger conditions on a stage, to enable it on certain conditions.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://ovh.github.io/cds/introduction/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/introduction/</guid>
      <description>What is CDS? Enterprise-Grade Continuous Delivery &amp;amp; DevOps Automation Open Source Platform
 Easy to deploy Cloud native Scalable &amp;amp; Extensible Infrastructure &amp;amp; Architecture agnostic Event-Driven Pipeline  Designed for scalability, CDS tasks can run either on cloud infrastructure or on your own machines, should you start some workers using a hatchery.
CDS exposes an API available to workers and humans through CLI or WebUI.
What does CDS do? Basically, CDS allows users to create building and delivery pipelines for all your applications.</description>
    </item>
    
    <item>
      <title>Pipeline</title>
      <link>https://ovh.github.io/cds/introduction/introduction.concepts.pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/introduction.concepts.pipeline/</guid>
      <description>A pipeline describes how things need to be executed in order to achieve wanted result. In CDS, a pipeline a defined on a project and can be used on several applications inside the same project.
A pipeline is structured in sequential stages containing one or multiple concurrent jobs.
In CDS there is several types of pipeline : build, testing and deployment. In Pipeline configuration file, default type is build.</description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>https://ovh.github.io/cds/introduction/introduction.concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/introduction.concepts/</guid>
      <description>Project A project contains applications, pipelines and environments.
A project is the first level of permissions management. Any CDS application has to be created inside a project.
The project key has to be unique among all projects in CDS.
At creation, a project has to have at least one group with edition permissions on it. It is possible to use either an existing group or create a new one.</description>
    </item>
    
    <item>
      <title>Job</title>
      <link>https://ovh.github.io/cds/introduction/introduction.concepts.job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/introduction.concepts.job/</guid>
      <description>The Job is more important concept in CDS. It will be composed of steps which will be run sequencially. A Job will be executed is a dedicated workspace and each new run of a job will have a new dedicated workspace. It means that you cannot share a workspace between jobs or between two runs of a job.
A Job will be executed by a worker. CDS will choose and provision a worker for dependending of the Requirements you define on your job.</description>
    </item>
    
    <item>
      <title>Step</title>
      <link>https://ovh.github.io/cds/introduction/introduction.concepts.step/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/introduction.concepts.step/</guid>
      <description>The steps of a job is the list of the different operation performed by the CDS worker. Each step is based on an Action which is defined by CDS. The list of all actions is defined on *&amp;lt;your cds url ui&amp;gt;/#/action*. On the very first step failed, the job is marked as Failed and execution is stopped.
You can define a Step as final. It mean that even if the job is failed, the step will be executed.</description>
    </item>
    
  </channel>
</rss>