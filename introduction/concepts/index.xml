<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concepts on CDS Documentation</title>
    <link>https://ovh.github.io/cds/introduction/concepts/</link>
    <description>Recent content in Concepts on CDS Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ovh.github.io/cds/introduction/concepts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pipeline</title>
      <link>https://ovh.github.io/cds/introduction/concepts/pipeline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/concepts/pipeline/</guid>
      <description>A pipeline describes how things need to be executed in order to obtain the expected result. In CDS, a pipeline belongs to a single project and can be used with the applications of that project.
A pipeline is structured in sequential stages containing one or multiple concurrent jobs.
CDS pipelines can be parametrized. This allows you to reuse the same pipeline when you have similar workloads. For example, you could use the same pipeline to deploy in your pre-production environment first and then to your production environment.</description>
    </item>
    
    <item>
      <title>Stage</title>
      <link>https://ovh.github.io/cds/introduction/concepts/stage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/concepts/stage/</guid>
      <description>Usually in CDS a build pipeline is structured of the following stages :
 Compile stage : Build the binaries Analysis &amp;amp; Unit Tests stage : Run all unit tests and analyse code quality Packaging stage : Build the final package, Virtual Machine Image or Docker Image.  In CDS, stages are executed sequentially if the previous stage is successful.
You can define trigger conditions on a stage, to enable/disable it under given conditions.</description>
    </item>
    
    <item>
      <title>Worker</title>
      <link>https://ovh.github.io/cds/introduction/concepts/worker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/concepts/worker/</guid>
      <description>A pipeline is structured in sequential stages containing one or multiple concurrent jobs. A Job will be executed by a worker.
Building your own worker model enables you to integrate your own tools, or to customize the tools you need to use. For instance, to build an AngularJs application, you shall need a worker capable of installing npm tools, importing bower packages (these are nodeJs tools), building webfonts with fontforge&amp;hellip;</description>
    </item>
    
    <item>
      <title>Job</title>
      <link>https://ovh.github.io/cds/introduction/concepts/job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/concepts/job/</guid>
      <description>A Job is an important concept in CDS. A job is composed of steps which will be run sequentially. A Job is executed in a dedicated workspace and each new run of a job will have a new dedicated workspace. This means that you cannot share a workspace between jobs or between two runs of the same job.
A Job is executed by a worker. CDS will select or provision a worker for the job dependending on the Requirements the job&amp;rsquo;s requirements.</description>
    </item>
    
    <item>
      <title>Step</title>
      <link>https://ovh.github.io/cds/introduction/concepts/step/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/introduction/concepts/step/</guid>
      <description>The steps of a job is the list of the different operations performed by the CDS worker. Each step is based on an Action pre-defined by CDS. The list of all actions is defined on *&amp;lt;your cds url ui&amp;gt;/#/action*. When a step fails, its parent job is stopped and marked as failed.
You can define a Step as final. It mean that even if the job fails before reaching it, the step will be executed anyway.</description>
    </item>
    
  </channel>
</rss>