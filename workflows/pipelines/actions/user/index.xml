<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>User Actions on CDS Documentation</title>
    <link>https://ovh.github.io/cds/workflows/pipelines/actions/user/</link>
    <description>Recent content in User Actions on CDS Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ovh.github.io/cds/workflows/pipelines/actions/user/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>cds-docker-package</title>
      <link>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-docker-package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-docker-package/</guid>
      <description>Build a Docker image and push it to a docker repository
Parameters  dockerOpts: Docker options, you can add --no-cache --pull for example dockerRegistry: The Docker registry to push the image to. dockerRegistryPassword: Docker Registry Password. Enter password to connect on your docker registry. dockerRegistryUsername: Docker Registry Username. Enter username to connect on your docker registry. dockerfileDirectory: Directory which contains your Dockerfile. imageName: Name of your docker image, without tag.</description>
    </item>
    
    <item>
      <title>cds-go-build</title>
      <link>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-go-build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-go-build/</guid>
      <description>Go Build: compile a go program
Parameters  architecture: GOOS artifactUpload: Upload Binary as CDS Artifact binary: Binary name: Put foo for go build -o foo cgoDisabled: if true (checked) -&amp;gt; export CGO_ENABLED=0 before go build detectRaceCondition: Enable data race detection. It&amp;rsquo;s flag -race flags: flags for go build. Put -ldflags &amp;ldquo;-X main.xyz=abc&amp;rdquo; for go build -ldflags &amp;ldquo;-X main.xyz=abc&amp;rdquo; gopath: set a $GOPATH. If empty, this action tries to get env $GOPATH.</description>
    </item>
    
    <item>
      <title>cds-nexus-upload</title>
      <link>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-nexus-upload/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-nexus-upload/</guid>
      <description>Upload file on Nexus
Parameters  artifactId: Artifact id of the artifact extension: Extension of the artifact files: Regex of files you want to upload groupId: Group id of the artifact login: Login for nexus packaging: Packaging type of the artifact password: Password for nexus repository: Nexus repository that the artifact is contained in url: Nexus URL version: Version of the artifact. Supports resolving of &amp;lsquo;LATEST&amp;rsquo;, &amp;lsquo;RELEASE&amp;rsquo; and snapshot versions (&amp;lsquo;1.</description>
    </item>
    
    <item>
      <title>cds-perl-test</title>
      <link>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-perl-test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-perl-test/</guid>
      <description>Test with prove on perl source code
Parameters  proveOptions: Options passed to prove testDirectory: Directory in which prove will be launched  Requirements  bash: type: binary Value: bash perl: type: binary Value: perl prove: type: binary Value: prove  More documentation on Github</description>
    </item>
    
    <item>
      <title>cds-publish-ovh-metrics</title>
      <link>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-publish-ovh-metrics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-publish-ovh-metrics/</guid>
      <description>Publish a metric on OVH Metrics. See https://www.ovh.com/fr/data-platforms/metrics/ and doc on https://docs.ovh.com/gb/en/cloud/metrics/
Parameters  file: Metrics file to push (optional) See: http://www.warp10.io/apis/ingress/ labels: Labels of your metric (one K/V per line separated by a space) name: Name of you metric (optional) region: Metrics region token: Metrics write token value: Value of your metric (T=true) See: http://www.warp10.io/apis/ingress/  Requirements  bash: type: binary Value: bash curl: type: binary Value: curl  More documentation on Github</description>
    </item>
    
    <item>
      <title>cds-python-pylint</title>
      <link>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-python-pylint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ovh.github.io/cds/workflows/pipelines/actions/user/cds-python-pylint/</guid>
      <description>Run pylint. By default, each pylint recommendation will be displayed as a Junit test. The short errors are fully contained inside the test title, an arrow (-&amp;gt;) will be present if a part of the recommendation is displayed in the test body.
Parameters  extra_options: Extra options to pass during pylint invocation. ignore: List of ignored files / directory (base name, not path), separated by a ; module_path: List of modules paths (absolute or relative) to launch pylint into, separated by a ;.</description>
    </item>
    
  </channel>
</rss>